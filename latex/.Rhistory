autoplot(forecast(mod,20))
ggmonthplot(forecast(mod,20))
ggmonthplot(mod)
library(forecast)
i<-31
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
#install.packages("coronavirus")
#install.packages("wbstats")
library(ggplot2)
library(lubridate)
library(lubridate)
bdc<-read.csv(url("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv"),sep = ",")
library(lubridate)
bdc<-read.csv(url("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv"),sep = ",")
bdd<-read.csv(url("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Deaths.csv"),sep = ",")
bdr<-read.csv(url("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Recovered.csv"),sep = ",")
aux<-read.csv(url("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv"),sep = ",",header = F)
days<-mdy(as.vector(t(aux[1,-c(1:4)])))
aux<-read.csv(url("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv"),sep = ",",header = F)
days<-mdy(as.vector(t(aux[1,-c(1:4)])))
daysl<-days
names(bdc)[-c(1:4)]<-days
names(bdr)[-c(1:4)]<-days
names(bdr)[-c(1:4)]<-days
names(bdd)[-c(1:4)]<-days
days<-names(bdc)[-c(1:4)]
bdc<-aggregate(bdc[,days],list(bdc$Country.Region),sum)
bdr<-aggregate(bdr[,days],list(bdr$Country.Region),sum)
bdr<-aggregate(bdr[,days],list(bdr$Country.Region),sum)
bdc<-read.csv(url("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv"),sep = ",")
bdc<-read.csv(url("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv"),sep = ",")
bdd<-read.csv(url("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Deaths.csv"),sep = ",")
bdr<-read.csv(url("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Recovered.csv"),sep = ",")
bdr<-read.csv(url("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Recovered.csv"),sep = ",")
aux<-read.csv(url("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv"),sep = ",",header = F)
days<-mdy(as.vector(t(aux[1,-c(1:4)])))
daysl<-days
names(bdc)[-c(1:4)]<-days
names(bdr)[-c(1:4)]<-days
names(bdd)[-c(1:4)]<-days
days<-names(bdc)[-c(1:4)]
bdc<-aggregate(bdc[,days],list(bdc$Country.Region),sum)
bdr<-aggregate(bdr[,days],list(bdr$Country.Region),sum)
bdd<-aggregate(bdd[,days],list(bdd$Country.Region),sum)
library(forecast)
i<-1
myts <- ts(as.vector(t(as.matrix(bdc[i,-1]))),start = daysl[1],frequency = 365)
mod<-auto.arima(myts)
autoplot(forecast(mod,20))
autoplot(forecast(mod,20))
ggplot(myts)+geom_line()
ggplot(myts)+geom_line()
autoplot(mod)
bdd[i,length(days)]/bdc[i,length(days)]
bdr[i,length(days)]/bdc[i,length(days)]
oo<-order(bdd[,length(days)]/bdc[,length(days)],decreasing = T)
bdc$Group.1[oo]
library(forecast)
myts <- ts(as.vector(t(as.matrix(bdc[i,-1]))),start = daysl[1],frequency = 365)
myts
mod<-auto.arima(myts)
autoplot(forecast(mod,20))
autoplot(forecast(mod,20))
autoplot(mod)
ggmonthplot(mod)
library(ggplot2)
ggmonthplot(mod)
forecast(mod,20)
autoplot(mod)
myts <- ts(as.vector(t(as.matrix(bdc[i,-1]))),start = daysl[1],frequency = 365)
mod<-auto.arima(myts)
forecast(mod,20)
autoplot(forecast(mod,20))
ggplot(myts)+geom_line()
autoplot(mod)
autoplot(forecast(mod,20))
?autoplot(forecast(mod,20))
autoplot(forecast(mod,20)) %>% xlim(c(1,1))
autoplot(forecast(mod,20))
bdc$Group.1
bdc[178,]
i<-which(input$pais==bdc$Group.1)
i<-1
myts <- ts(as.vector(t(as.matrix(bdc[i,-1]))),start = daysl[1],frequency = 365)
myts
str(myts)
cumsum(myts)
cumsum(myts)!=0
break()
detect0<-function(x){
for(i in 1:length(x)){
if(x[i]!=0){
break()
}
}
return(i)
}
detect0(cumsum(myts))
i<-1
bb<-as.vector(t(as.matrix(bdc[i,-1])))
bb
detect0(bb)
bb[detect0(bb):length(bb)]
myts <- ts(bb[detect0(bb):length(bb)],start = daysl[detect0(bb)],frequency = 365)
mod<-auto.arima(myts)
autoplot(forecast(mod,20),xlab="Días",ylab="Casos")
forecast(mod,20)
pro<-forecast(mod,20)
pro
plot(bb[detect0(bb):length(bb)])
plot(bb[detect0(bb):length(bb)])
pro
pro$x
strpro()
str(pro)
pro[1]
pro[[1]]
pro[[2]]
pro[[3]]
pro[[4]]
pro[[4]]
plot(c(bb[detect0(bb):length(bb)],pro[[4]])
})
plot(c(bb[detect0(bb):length(bb)],pro[[4]]))
?auto.arima()
naive(mod)
naive(myts)
myts
summary(myts)
myts
?naive
naive(myts,30)
ses(myts,30)
daysl[detect0(bb)]
as.date(daysl[detect0(bb)])
date(daysl[detect0(bb)])
myts <- ts(bb[detect0(bb):length(bb)],start = date(daysl[detect0(bb)]),frequency = 365)
mod<-auto.arima(myts)
pro<-forecast(mod,20)
plot(c(bb[detect0(bb):length(bb)],pro[[4]]))
plot(c(bb[detect0(bb):length(bb)],pro[[4]]))
HoltWinters(mmyts)
HoltWinters(myts)
Holt(myts)
?ts
tsdisplay(myts)
myts <- ts(bb[detect0(bb):length(bb)],start = date(daysl[detect0(bb)]),frequency =7)
myts
mod<-auto.arima(myts)
pro<-forecast(mod,20)
plot(c(bb[detect0(bb):length(bb)],pro[[4]]))
myts <- ts(bb[detect0(bb):length(bb)],start = date(daysl[detect0(bb)]),frequency =365)
plot(myts)
myts
day()
days
?ts
?ts
print( ts(1:10, frequency = 7, start = c(12, 2)), calendar = TRUE)
print( myts, calendar = TRUE)
autoplot(forecast(mod,20),xlab="Días",ylab="Casos")
autoplot(forecast(naive(myts),20),xlab="Días",ylab="Casos")
autoplot(forecast(naive(myts,20)),xlab="Días",ylab="Casos")
autoplot(forecast(auto.arima(myts),20),xlab="Días",ylab="Casos")
?autoplot()
autoplot(forecast(auto.arima(myts),30),xlab="Días",ylab="Casos") %>% ggtitle("Pronostico a 30 días")
autoplot(forecast(auto.arima(myts),30),xlab="Días",ylab="Casos")+ ggtitle("Pronostico a 30 días")
daysl[detect0(bb)]
daysl[detect0(bb):length(days)]
autoplot(forecast(auto.arima(myts),30),xlab="Días",ylab="Casos")+ ggtitle("Pronóstico a 30 días")+scale_x_discrete(labels=daysl[detect0(bb):length(days)])
mys()
library(lubridate)
myd
?myd
autoplot(forecast(auto.arima(myts),30),xlab="Días",ylab="Casos")+ ggtitle("Pronóstico a 30 días")+scale_x_discrete(labels=1:59)
autoplot(forecast(auto.arima(myts),30),xlab="Días",ylab="Casos")+ ggtitle("Pronóstico a 30 días")+scale_x(labels=1:59)
autoplot(forecast(auto.arima(myts),30),xlab="Días",ylab="Casos")+ ggtitle("Pronóstico a 30 días")
ww<-autoplot(forecast(auto.arima(myts),30),xlab="Días",ylab="Casos")+ ggtitle("Pronóstico a 30 días")
ww
str(ww)
autoplot(forecast(auto.arima(myts),30),xlab="Días",ylab="Casos")+ ggtitle("Pronóstico a 30 días")+scale_x_continuous()
autoplot(forecast(auto.arima(myts),30),xlab="Días",ylab="Casos")+ ggtitle("Pronóstico a 30 días")+scale_x_continuous(1:59)
forecast(auto.arima(myts),30)
locator(1)
locator(1)
forecast(auto.arima(myts),30)
length(forecast(auto.arima(myts),30))
dim(forecast(auto.arima(myts),30))
forecast(auto.arima(myts),30)
ww<-forecast(auto.arima(myts),30)
ww[[1]]
ww[[2]]
ww[[3]]
ww[[4]]
autoplot(forecast(auto.arima(myts),30),xlab="Días",ylab="Casos")+ ggtitle("Pronóstico a 30 días")+scale_x_continuous(1:60)
autoplot(forecast(auto.arima(myts),30),xlab="Días",ylab="Casos")+ ggtitle("Pronóstico a 30 días")+scale_x_continuous(1:60,replace)
autoplot(forecast(auto.arima(myts),30),xlab="Días",ylab="Casos")+ ggtitle("Pronóstico a 30 días")+scale_x_continuous(1:60)
autoplot(forecast(auto.arima(myts),30),xlab="Días",ylab="Casos")+ ggtitle("Pronóstico a 30 días")+scale_x_continuous(1:60)+theme(
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank())
autoplot(forecast(auto.arima(myts),30),xlab="Días",ylab="Casos")+ ggtitle("Pronóstico a 30 días")+scale_x_continuous(1:60)+theme(
axis.ticks = element_blank())
axis.ticks = element_blank())+scale_x_continuous()
autoplot(forecast(auto.arima(myts),30),xlab="Días",ylab="Casos")+ ggtitle("Pronóstico a 30 días")+theme(
axis.ticks = element_blank())
autoplot(forecast(auto.arima(myts),30),xlab="Días",ylab="Casos")+ ggtitle("Pronóstico a 30 días")+theme(axis.ticks = element_blank())
autoplot(forecast(auto.arima(myts),30),xlab="Días",ylab="Casos")+ ggtitle("Pronóstico a 30 días")+theme(axis.text.x = element_blank())
autoplot(forecast(auto.arima(myts),30),xlab="Días",ylab="Casos")+ ggtitle("Pronóstico a 30 días")+theme(axis.text.x = element_blank())+scale_x_continuous()
autoplot(forecast(auto.arima(myts),30),xlab="Días",ylab="Casos")+ ggtitle("Pronóstico a 30 días")+theme(axis.text.x = element_blank())+scale_x_continuous(breaks= 1:60)
?scale_x_continuous
autoplot(forecast(auto.arima(myts),30),xlab="Días",ylab="Casos")+ ggtitle("Pronóstico a 30 días")+scale_x_continuous(n.breaks=4)
autoplot(forecast(auto.arima(myts),30),xlab="Días",ylab="Casos")+ ggtitle("Pronóstico a 30 días")+scale_x_continuous(n.breaks=10)
axis(1)
axis(1,1:60)
axis(1,1:60)
autoplot(forecast(auto.arima(myts),30),xlab="Días",ylab="Casos")+ ggtitle("Pronóstico a 30 días")+scale_x_date(labels = date_format("%B-%d))
autoplot(forecast(auto.arima(myts),30),xlab="Días",ylab="Casos")+ ggtitle("Pronóstico a 30 días")+scale_x_date(labels = date_format("%B-%d"))
autoplot(forecast(auto.arima(myts),30),xlab="Días",ylab="Casos")+ ggtitle("Pronóstico a 30 días")+scale_x_date()
autoplot(forecast(auto.arima(myts),30),xlab="Días",ylab="Casos")+ ggtitle("Pronóstico a 30 días")+scale_x_datetime()
autoplot(forecast(auto.arima(myts),30),xlab="Días",ylab="Casos")+ ggtitle("Pronóstico a 30 días")+scale_x_datetime(labels = "as")
autoplot(forecast(auto.arima(myts),30),xlab="Días",ylab="Casos")+ ggtitle("Pronóstico a 30 días")+scale_x_date(labels = "as")
autoplot(forecast(auto.arima(myts),30),xlab="Días",ylab="Casos")+ ggtitle("Pronóstico a 30 días")
autoplot(forecast(auto.arima(myts),30),xlab="Días",ylab="Casos")+ ggtitle("Pronóstico a 30 días")
plot(c(bb[detect0(bb):length(bb)],pro[[4]]))
plot(c(bb[detect0(bb):length(bb)],pro[[4]]),type="b")
plot(c(bb[detect0(bb):length(bb)],pro[[4]]),type="l")
plot(c(bb[detect0(bb):length(bb)],pro[[4]]),type="b")
plot(c(bb[detect0(bb):length(bb)],pro[[4]]),type="b",col="red")
plot(c(bb[detect0(bb):length(bb)],pro[[4]]),type="b",col="dark")
plot(c(bb[detect0(bb):length(bb)],pro[[4]]),type="b",col="darkred")
plot(c(bb[detect0(bb):length(bb)],pro[[4]]),type="l",col="darkred",lwd=3)
pro[5]
pro[5]$lower
pro[5]$lower[,2]
points(pro[5],pro[5]$lower[,2])
plot(c(bb[detect0(bb):length(bb)],pro[[4]]),type="l",col="darkred",lwd=3)
plot(c(bb[detect0(bb):length(bb)],pro[[4]]),type="l",col="darkred",lwd=3)
points(pro[5]$lower[,2])
points((31):(60),pro[5]$lower[,2])
pro<-forecast(mod,30)
plot(c(bb[detect0(bb):length(bb)],pro[[4]]),type="l",col="darkred",lwd=3)
points((31):(60),pro[5]$lower[,2])
pro[5]$lower[,2]
pro<-forecast(mod,20)
plot(c(bb[detect0(bb):length(bb)],pro[[4]]),type="l",col="darkred",lwd=3)
points((31):(50),pro[5]$lower[,2])
points((31):(50),pro[5]$lower[,1])
points((31):(50),pro[5]$lower[,1],lwd=2,lty=5)
points((31):(50),pro[5]$lower[,1],lwd=2,lty=5,col="gray")
points((31):(50),pro[5]$lower[,1],lwd=2,lty=5,col="gray",type="l")
plot(c(bb[detect0(bb):length(bb)],pro[[4]]),type="l",col="darkred",lwd=3)
points((31):(50),pro[5]$lower[,1],lwd=2,lty=5,col="gray",type="l")
points((31):(50),pro[5]$upper[,1],lwd=2,lty=5,col="gray",type="l")
pro[5]$upper[,1]
pro[6]
points((31):(50),pro[6]$upper[,1],lwd=2,lty=5,col="gray",type="l")
plot(c(bb[detect0(bb):length(bb)],pro[[4]]),type="l",col="darkred",lwd=3,ylim(0,max(pro[6]$upper[,1])))
plot(c(bb[detect0(bb):length(bb)],pro[[4]]),type="l",col="darkred",lwd=3,ylim=c(0,max(pro[6]$upper[,1])))
points((31):(50),pro[5]$lower[,1],lwd=2,lty=5,col="gray",type="l")
points((31):(50),pro[6]$upper[,1],lwd=2,lty=5,col="gray",type="l")
plot(c(bb[detect0(bb):length(bb)],pro[[4]]),type="l",col="darkred",lwd=3,ylim=c(0,max(pro[6]$upper[,1])))
plot(c(bb[detect0(bb):length(bb)],pro[[4]]),type="l",col="darkred",lwd=3,ylim=c(0,max(pro[6]$upper[,1])),axis=F)
plot(c(bb[detect0(bb):length(bb)],pro[[4]]),type="l",col="darkred",lwd=3,ylim=c(0,max(pro[6]$upper[,1])),axEs=F)
plot(c(bb[detect0(bb):length(bb)],pro[[4]]),type="l",col="darkred",lwd=3,ylim=c(0,max(pro[6]$upper[,1])),axes=F)
plot(c(bb[detect0(bb):length(bb)],pro[[4]]),type="l",col="darkred",lwd=3,ylim=c(0,max(pro[6]$upper[,1])),axes=F,ann=F)
points((31):(50),pro[5]$lower[,1],lwd=2,lty=5,col="gray",type="l")
points((31):(50),pro[6]$upper[,1],lwd=2,lty=5,col="gray",type="l")
bb
detect0(bb)
length(bb)-detect0(bb)
bb
myts
length(bb)
length(bb)-detect0(bb)
length(bb)-detect0(bb)+1
dim(myts)
length(dim)
length(myts)
pro[5]$lower[,1]
points((length(myts)+1):(length(myts)+20),pro[5]$lower[,1],lwd=2,lty=5,col="gray",type="l")
plot(c(bb[detect0(bb):length(bb)],pro[[4]]),type="l",col="darkred",lwd=3,ylim=c(0,max(pro[6]$upper[,1])),axes=F,ann=F)
points((length(myts)+1):(length(myts)+20),pro[5]$lower[,1],lwd=2,lty=5,col="gray",type="l")
points((length(myts)+1):(length(myts)+20),pro[6]$upper[,1],lwd=2,lty=5,col="gray",type="l")
axis(4)
title(xlab="Fecha",ylab="Casos")
axis(1)
axis(1,labels = seq(as.Date('2011-01-01'),as.Date('2011-01-31'),by = 1),las=3,cex.axis=0.7)
axis(1,at=1:10,labels = seq(as.Date('2011-01-01'),as.Date('2011-01-31'),by = 1),las=3,cex.axis=0.7)
axis(1,at=1:31,labels = seq(as.Date('2011-01-01'),as.Date('2011-01-31'),by = 1),las=3,cex.axis=0.7)
axis(1,at=1:(length(myts)+20),labels = seq(as.Date('2011-01-01'),as.Date('2011-01-31'),by = 1),las=3,cex.axis=0.7)
axis(1,at=1:(length(myts)+20),las=3,cex.axis=0.7)
plot(c(bb[detect0(bb):length(bb)],pro[[4]]),type="l",col="darkred",lwd=3,ylim=c(0,max(pro[6]$upper[,1])),axes=F,ann=F)
points((length(myts)+1):(length(myts)+20),pro[5]$lower[,1],lwd=2,lty=5,col="gray",type="l")
points((length(myts)+1):(length(myts)+20),pro[6]$upper[,1],lwd=2,lty=5,col="gray",type="l")
title(main=bdc[i,"Group.1"],cex.main=2)
axis(1,at=1:(length(myts)+20),las=3,cex.axis=0.7)
axis(4)
title(xlab="Fecha",ylab="Casos")
seq(daysl[detect0(bb)])
seq(daysl[detect0(bb)],daysl[detect0(bb)]+20,by=1)
(length(myts)+20)
seq(daysl[detect0(bb)],(length(myts)+20),by=1)
seq(daysl[detect0(bb)],daysl[detec0]+(length(myts)+20),by=1)
seq(daysl[detect0(bb)],daysl[detec0(bb)]+(length(myts)+20),by=1)
seq(daysl[detect0(bb)],daysl[detect0(bb)]+(length(myts)+20),by=1)
seq(daysl[detect0(bb)],daysl[detect0(bb)]+(length(myts)+20)-1,by=1)
axis(1,at=1:(length(myts)+20),seq(daysl[detect0(bb)],daysl[detect0(bb)]+(length(myts)+20)-1,by=1),las=3,cex.axis=0.7)
axis(1,at=1:(length(myts)+20),substr(seq(daysl[detect0(bb)],daysl[detect0(bb)]+(length(myts)+20)-1,by=1),6,10),las=3,cex.axis=0.7)
axis(4)
bdc[,178]
bdc[178,]
bdc<-read.csv(url("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv"),sep = ",")
bdc
?polygon()
plot(c(1, 9), 1:2, type = "n")
polygon(1:9, c(2,1,2,1,NA,2,1,2,1),
col = c("red", "blue"),
border = c("green", "yellow"),
lwd = 3, lty = c("dashed", "solid"))
plot(c(bb[detect0(bb):length(bb)],pro[[4]]),type="l",col="darkred",lwd=3,ylim=c(0,max(pro[6]$upper[,1])),axes=F,ann=F)
points((length(myts)+1):(length(myts)+20),pro[5]$lower[,1],lwd=2,lty=5,col="gray",type="l")
points((length(myts)+1):(length(myts)+20),pro[6]$upper[,1],lwd=2,lty=5,col="gray",type="l")
polygon(
length(myts)+1):(length(myts)+20),
pro[5]$lower[,1] ,
col="black", border=F
polygon(
length(myts)+1):(length(myts)+20),
pro[5]$lower[,1] ,
col="black", border=F
polygon((length(myts)+1):(length(myts)+20),
pro[5]$lower[,1],
col="black", border=F)
polygon((length(myts)+1):(length(myts)+20),
pro[6]$upper[,1],
col="black", border=F)
x <- c(1:9, 8:1)
y <- c(1, 2*(5:3), 2, -1, 17, 9, 8, 2:9)
op <- par(mfcol = c(3, 1))
for(xpd in c(FALSE, TRUE, NA)) {
plot(1:10, main = paste("xpd =", xpd))
box("figure", col = "pink", lwd = 3)
polygon(x, y, xpd = xpd, col = "orange", lty = 2, lwd = 2, border = "red")
}
polygon(
c((length(myts)+1):(length(myts)+20),(length(myts)+1):(length(myts)+20)) ,
c(pro[5]$lower[,1],pro[6]$upper[,1]) ,
col="black", border=F
)
plot(c(bb[detect0(bb):length(bb)],pro[[4]]),type="l",col="darkred",lwd=3,ylim=c(0,max(pro[6]$upper[,1])),axes=F,ann=F)
points((length(myts)+1):(length(myts)+20),pro[5]$lower[,1],lwd=2,lty=5,col="gray",type="l")
plot(c(bb[detect0(bb):length(bb)],pro[[4]]),type="l",col="darkred",lwd=3,ylim=c(0,max(pro[6]$upper[,1])),axes=F,ann=F)
dev.off()
dev.off()
plot(c(bb[detect0(bb):length(bb)],pro[[4]]),type="l",col="darkred",lwd=3,ylim=c(0,max(pro[6]$upper[,1])),axes=F,ann=F)
points((length(myts)+1):(length(myts)+20),pro[5]$lower[,1],lwd=2,lty=5,col="gray",type="l")
points((length(myts)+1):(length(myts)+20),pro[6]$upper[,1],lwd=2,lty=5,col="gray",type="l")
polygon(
c((length(myts)+1):(length(myts)+20),(length(myts)+1):(length(myts)+20)) ,
c(pro[5]$lower[,1],pro[6]$upper[,1]) ,
col="black", border=F
)
polygon(
c((length(myts)+1):(length(myts)+20),(length(myts)+1):(length(myts)+20)) ,
c(pro[6]$upper[,1],pro[5]$lower[,1]) ,
col="black", border=F
)
age <- 1:10
y.low <- rnorm(length(age), 150, 25) + 10*age
y.high <- rnorm(length(age), 250, 25) + 10*age
plot(age,y.high,type = 'n', ylim = c(100, 400),
ylab = 'Y Range', xlab = 'Age (years)')
lines(age, y.low, col = 'grey')
lines(age, y.high, col = 'grey')
polygon(c(age, rev(age)), c(y.high, rev(y.low)),
col = "grey30", border = NA)
polygon(
c((length(myts)+1):(length(myts)+20),rev((length(myts)+1):(length(myts)+20))) ,
c(pro[6]$upper[,1],pro[5]$lower[,1]) ,
col="black", border=F
)
plot(c(bb[detect0(bb):length(bb)],pro[[4]]),type="l",col="darkred",lwd=3,ylim=c(0,max(pro[6]$upper[,1])),axes=F,ann=F)
points((length(myts)+1):(length(myts)+20),pro[5]$lower[,1],lwd=2,lty=5,col="gray",type="l")
points((length(myts)+1):(length(myts)+20),pro[6]$upper[,1],lwd=2,lty=5,col="gray",type="l")
polygon(
c((length(myts)+1):(length(myts)+20),rev((length(myts)+1):(length(myts)+20))) ,
c(pro[6]$upper[,1],pro[5]$lower[,1]) ,
col="black", border=F
)
polygon(
c((length(myts)+1):(length(myts)+20),rev((length(myts)+1):(length(myts)+20))) ,
c(pro[6]$upper[,1],pro[5]$lower[,1]) ,
col="gray", border=F
)
polygon(
c((length(myts)+1):(length(myts)+20),rev((length(myts)+1):(length(myts)+20))) ,
c(pro[6]$upper[,1],rev(pro[5]$lower[,1])) ,
col="gray", border=F
)
plot(c(bb[detect0(bb):length(bb)],pro[[4]]),type="l",col="darkred",lwd=3,ylim=c(0,max(pro[6]$upper[,1])),axes=F,ann=F)
points((length(myts)+1):(length(myts)+20),pro[5]$lower[,1],lwd=2,lty=5,col="gray",type="l")
points((length(myts)+1):(length(myts)+20),pro[6]$upper[,1],lwd=2,lty=5,col="gray",type="l")
polygon(
c((length(myts)+1):(length(myts)+20),rev((length(myts)+1):(length(myts)+20))) ,
c(pro[6]$upper[,1],rev(pro[5]$lower[,1])) ,
col="gray", border=F
)
title(main=bdc[i,"Group.1"],cex.main=2)
plot(c(bb[detect0(bb):length(bb)],pro[[4]]),type="l",col="darkred",lwd=3,ylim=c(0,max(pro[6]$upper[,1])),axes=F,ann=F)
points((length(myts)+1):(length(myts)+20),pro[5]$lower[,1],lwd=2,lty=5,col="gray",type="l")
points((length(myts)+1):(length(myts)+20),pro[6]$upper[,1],lwd=2,lty=5,col="gray",type="l")
polygon(
c((length(myts)+1):(length(myts)+20),rev((length(myts)+1):(length(myts)+20))) ,
c(pro[6]$upper[,1],rev(pro[5]$lower[,1])) ,
col=rgb(0,1,0,0.9), border=F
)
polygon(
c((length(myts)+1):(length(myts)+20),rev((length(myts)+1):(length(myts)+20))) ,
c(pro[6]$upper[,1],rev(pro[5]$lower[,1])) ,
col=rgb(0,1,0,0.1), border=F
)
plot(c(bb[detect0(bb):length(bb)],pro[[4]]),type="l",col="darkred",lwd=3,ylim=c(0,max(pro[6]$upper[,1])),axes=F,ann=F)
points((length(myts)+1):(length(myts)+20),pro[5]$lower[,1],lwd=2,lty=5,col="gray",type="l")
points((length(myts)+1):(length(myts)+20),pro[6]$upper[,1],lwd=2,lty=5,col="gray",type="l")
polygon(
c((length(myts)+1):(length(myts)+20),rev((length(myts)+1):(length(myts)+20))) ,
c(pro[6]$upper[,1],rev(pro[5]$lower[,1])) ,
col=rgb(0,1,0,0.1), border=F
)
polygon(
c((length(myts)+1):(length(myts)+20),rev((length(myts)+1):(length(myts)+20))) ,
c(pro[6]$upper[,1],rev(pro[5]$lower[,1])) ,
col=rgb(1,0,0,0.1), border=F
)
dd<-seq(daysl[detect0(bb)],daysl[detect0(bb)]+(length(myts)+20)-1,by=1)
which(dd==Sys.Date())
abline(v=which(dd==Sys.Date()))
text((length(myts)+20),pro[[4]][20])
text((length(myts)+20),pro[[4]][20],pos=1)
text((length(myts)+20),pro[[4]][20],pos=2)
text((length(myts)+20),pro[[4]][20],pro[[4]][20],pos=2)
text((length(myts)+20),pro[[4]][20],round(pro[[4]][20]),pos=2,cex=0.7)
plot(c(bb[detect0(bb):length(bb)],pro[[4]]),type="l",col="darkred",lwd=3,ylim=c(0,max(pro[6]$upper[,1])),axes=F,ann=F)
points((length(myts)+1):(length(myts)+20),pro[5]$lower[,1],lwd=2,lty=5,col="gray",type="l")
points((length(myts)+1):(length(myts)+20),pro[6]$upper[,1],lwd=2,lty=5,col="gray",type="l")
polygon(
c((length(myts)+1):(length(myts)+20),rev((length(myts)+1):(length(myts)+20))) ,
c(pro[6]$upper[,1],rev(pro[5]$lower[,1])) ,
col=rgb(1,0,0,0.1), border=F
)
title(main=bdc[i,"Group.1"],cex.main=2)
axis(1,at=1:(length(myts)+20),substr(seq(daysl[detect0(bb)],daysl[detect0(bb)]+(length(myts)+20)-1,by=1),6,10),las=3,cex.axis=0.7)
axis(4)
title(xlab="Fecha",ylab="Casos")
dd<-seq(daysl[detect0(bb)],daysl[detect0(bb)]+(length(myts)+20)-1,by=1)
abline(v=which(dd==Sys.Date()))
text((length(myts)+20),pro[[4]][20],round(pro[[4]][20]),pos=2,cex=0.8)
text((length(myts)+20),pro[[4]][20],round(pro[[4]][20]),pos=2,cex=0.8)
text((length(myts)+20),pro[[4]][20],round(pro[[4]][20]),pos=3,cex=0.8)
text((length(myts)+20),pro[[4]][20],round(pro[[4]][20]),pos=4,cex=0.8)
text((length(myts)+20),pro[[4]][20],round(pro[[4]][20]),pos=1,cex=0.8)
text((length(myts)+20),pro[[4]][20],round(pro[[4]][20]),pos=2,cex=0.8)
text((length(myts)+20),pro[[4]][20],round(pro[[4]][20]),pos=3,cex=0.8)
axis(4,pos=(length(myts)+20),las=1,cex.axis=0.8)
text((length(myts)+20),pro[[4]][20],round(pro[[4]][20]),pos=3,cex=0.9,col="darkred")
170/7
rm(list=ls())
rm(list=listls())
rm(list=ls())
install.packages("Rmarkdown")
a<-matrix(1:20,4,5)
library(knitr)
a<-matrix(1:20,4,5)
library(knitr)
a<-matrix(1:20,4,5)
a
kable(a)
table(1:10,1:10)
rm(list = )
rm(list = ls())
library(knitr)
library(packagefinder)
library(xtable)
pack<-findPackage(c("API","scrape"),limit.results=-1)
pack<-findPackage(c("API","scrape"),limit.results=-1)
kable(pack)
ÇfindPackage
?findPackage
rm(list=ls())
install.packages("xtable")
library(xtable)
setwd("/Users/alvarolimber/Documents/GitHub/EST-383/data")
dir()
load("eh18.RData")
table(eh18v$depto)
t1<-table(eh18v$depto)
xtable(t1)
print(xtable(t1))
print(xtable(t1))
?print.xtable()
setwd("/Users/alvarolimber/Documents/GitHub/EST-384/latex")
setwd("/Users/alvarolimber/Documents/GitHub/EST-384/latex")
print(xtable(t1),file="t1.tex")
print(xtable(t1,caption = "Departamentos"),file="t1.tex")
names(eh18p)
lm(ylab~aestudio,data = eh18p)
summary(lm(ylab~aestudio,data = eh18p))
xtable(summary(lm(ylab~aestudio,data = eh18p)))
print(xtable(summary(lm(ylab~aestudio,data = eh18p))),file="t2.tex")
summary(eh18p$s02a_03)
