[["index.html", "Minería de datos con R EST-384 Prefacio Audiencia Estructura del libro Software y acuerdos Datos Agradecimiento", " Minería de datos con R EST-384 Alvaro Chirino Gutierrez 2022-08-01 Prefacio Este documento de Alvaro Chirino esta bajo la licencia de Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License. Audiencia El libro fue diseñado originalmente para los estudiantes de la materia de Programación Estadística II, una materia optativa del pregrado de la carrera de Estadística de la Universidad Mayor de San Andrés. Este documento representa un primer acercamiento a los estudiantes de estadistica al software R y al mundo de la minería de datos. Estructura del libro El libro inluye 5 capitulos, estos son: Introducción a R Preparación de los datos Modelado en Minería de datos Minería de Texto Machine Learning Software y acuerdos sessionInfo() ## R version 4.2.0 (2022-04-22 ucrt) ## Platform: x86_64-w64-mingw32/x64 (64-bit) ## Running under: Windows 10 x64 (build 19044) ## ## Matrix products: default ## ## locale: ## [1] LC_COLLATE=English_United States.utf8 ## [2] LC_CTYPE=English_United States.utf8 ## [3] LC_MONETARY=English_United States.utf8 ## [4] LC_NUMERIC=C ## [5] LC_TIME=English_United States.utf8 ## ## attached base packages: ## [1] stats graphics grDevices ## [4] utils datasets methods ## [7] base ## ## other attached packages: ## [1] mice_3.14.0 dplyr_1.0.9 ## [3] rvest_1.0.2 stringi_1.7.6 ## [5] tm_0.7-8 NLP_0.2-1 ## [7] lubridate_1.8.0 tidyr_1.2.0 ## ## loaded via a namespace (and not attached): ## [1] Rcpp_1.0.9 ## [2] highr_0.9 ## [3] pillar_1.7.0 ## [4] compiler_4.2.0 ## [5] bslib_0.3.1 ## [6] jquerylib_0.1.4 ## [7] tools_4.2.0 ## [8] digest_0.6.29 ## [9] jsonlite_1.8.0 ## [10] evaluate_0.15 ## [11] lifecycle_1.0.1 ## [12] tibble_3.1.7 ## [13] lattice_0.20-45 ## [14] pkgconfig_2.0.3 ## [15] rlang_1.0.2 ## [16] cli_3.3.0 ## [17] curl_4.3.2 ## [18] parallel_4.2.0 ## [19] yaml_2.3.5 ## [20] xfun_0.31 ## [21] fastmap_1.1.0 ## [22] httr_1.4.3 ## [23] xml2_1.3.3 ## [24] stringr_1.4.0 ## [25] withr_2.5.0 ## [26] knitr_1.39 ## [27] generics_0.1.2 ## [28] vctrs_0.4.1 ## [29] sass_0.4.1 ## [30] grid_4.2.0 ## [31] tidyselect_1.1.2 ## [32] glue_1.6.2 ## [33] R6_2.5.1 ## [34] fansi_1.0.3 ## [35] rmarkdown_2.14 ## [36] bookdown_0.27 ## [37] purrr_0.3.4 ## [38] magrittr_2.0.3 ## [39] backports_1.4.1 ## [40] ellipsis_0.3.2 ## [41] htmltools_0.5.2 ## [42] utf8_1.2.2 ## [43] slam_0.1-50 ## [44] broom_1.0.0 ## [45] crayon_1.5.1 Datos Agradecimiento Peeta… "],["acerca-del-autor.html", "Acerca del autor Bibliografía", " Acerca del autor Bibliografía Torgo, L. (2016). Data mining with R: Learning with case studies, second edition. Hernandez, J. (2004). Introducción a la Minería de Datos Step, I., &amp; Blueprint, S. (2017). MACHINE LEARNING Intuitive Step by Step. "],["minería-de-datos.html", "1 Minería de Datos 1.1 Motivación para la Minería de datos 1.2 ¿Qué es la minería de datos? 1.3 Datos y conocimiento (Insumo/Resultado) 1.4 Requerimientos 1.5 knowledge discovery in databases (KDD) 1.6 Preparación de los datos 1.7 Imputación de variables", " 1 Minería de Datos 1.1 Motivación para la Minería de datos (Variedad) Los métodos de recolección de datos han evolucionado muy rápidamente. (Volumen) Las bases de datos han crecido exponencialmente (Usuarios) Estos datos contienen información útil para las empresas, países, etc. (Tecnología) El tamaño hace que la inspección manual sea casi imposible (Método) Se requieren métodos de análisis de datos automáticos para optimizar el uso de estos enormes conjuntos de datos 1.2 ¿Qué es la minería de datos? Es el análisis de conjuntos de datos (a menudo grandes) para encontrar relaciones insospechadas (conocimiento) y resumir los datos de formas novedosas que sean comprensibles y útiles para el propietario/usuario de los datos. Principles of Data Mining (Hand et.al. 2001) 1.3 Datos y conocimiento (Insumo/Resultado) 1.3.1 Datos: se refieren a instancias únicas y primitivas (single objetos, personas, eventos, puntos en el tiempo, etc.) describir propiedades individuales a menudo son fáciles de recolectar u obtener (por ejemplo, cajeros de escáner, internet, etc.) no nos permiten hacer predicciones o pronósticos Ejercicio: Elija un sector/área y describa los potenciales datos que se tienen disponibles Salud (Hospital): Registros de pacientes, medicamentos, vacunas, fichas epidemiológicas, personal médico, consultorios (infraestructura), financiera (Seguridad) Feminicidios: Casos, lugar, entorno familiar, denuncias previas, sospechosos, información forense, Caracterizar al culpable Banca: Prestamos; ingresos, laboral. Caja de ahorro; personal, movimientos. Cajas; Servicios, etc. Cajeros; Lugar, movimientos. Clientes; Prestamistas; Deuda, mora, juicio, ahorristas. Base de datos de patrimonio Geografía: Clima; Lluvia, Minas; tipo, trabajadores, cultivos; tipo, temporada, tipo suelo, montañas, pluvial, temperatura. 1.3.2 Conocimiento: (Características) se refiere a clases de instancias (conjuntos de …) (Forma) describe patrones generales, estructuras, leyes, (Declaración) consta de la menor cantidad de declaraciones posibles (Proceso) a menudo es difícil y lleva mucho tiempo encontrar u obtener (Acciones) nos permite hacer predicciones y pronósticos Ejercicio: Agrupar la tipología de los pacientes; Mejorar servicio, acciones Determinantes del feminicidio; SLIM, medidas Relación el monto del ingreso con el motivo de préstamo; Realizar ofertas, promocionar a clientes. Relación entre el clima y los cultivos, dado el tipo de mineral se puede pensar en un mercado posterior 1.4 Requerimientos Disponibilidad para aprender Mucha paciencia Interactúa con otras áreas Preprocesamiento de datos Creatividad Rigor, prueba y error 1.5 knowledge discovery in databases (KDD) 1.6 Preparación de los datos 1.6.1 Recopilación Instituto de Estadística UDAPE, ASFI Ministerio Salud (SNIS), Ministerio de educación (SIE) APIs, Twitter, Facebook, etc. Kaggle Banco Mundial, UNICEF, FAO, BID (Open Data) 1.6.2 Data Warehouse 1.6.3 Data Warehouse in R 1.6.4 Importación library(foreign) library(readr) apropos(&quot;read&quot;) getwd() setwd(&quot;C:\\\\Users\\\\ALVARO\\\\Downloads\\\\bd49 (1)\\\\Base EH2019&quot;) dir() eh19v&lt;-read.spss(&quot;EH2019_Vivienda.sav&quot;,to.data.frame = T) eh19p&lt;-read.spss(&quot;EH2019_Persona.sav&quot;,to.data.frame = T) object.size(eh19p)/10^6 #exportación de datos setwd(&quot;C:\\\\Users\\\\ALVARO\\\\Documents\\\\GitHub\\\\EST-384\\\\data&quot;) save(eh19p,eh19v,file=&quot;eh19.RData&quot;) # cargando la base de datos que acabamos de guardar rm(list=ls()) load(&quot;eh19.RData&quot;) load(&quot;oct20.RData&quot;) # cargando desde github rm(list=ls()) load(url(&quot;https://github.com/AlvaroLimber/EST-384/raw/master/data/eh19.RData&quot;)) load(url(&quot;https://github.com/AlvaroLimber/EST-384/raw/master/data/oct20.RData&quot;)) 1.6.5 Recopilación read.table(&quot;clipboard&quot;,header = T) library(readxl) # excel library(DBI) # Bases de datos relacionales en el sistema #library(help=DBI) library(RMySQL) # bases de datos en mysql # web scraping (API) library(gtrendsR) # API gg&lt;-gtrends(c(&quot;data mining&quot;,&quot;machine learning&quot;),time=&quot;today 12-m&quot;) gg$interest_over_time plot(gg) gg&lt;-gtrends(c(&quot;data mining&quot;,&quot;machine learning&quot;),time=&quot;today 12-m&quot;,geo=&quot;BO&quot;) 1.6.6 Limpieza std&lt;-data.frame(name=c(&quot;ana&quot;,&quot;juan&quot;,&quot;carla&quot;),math=c(86,43,80),stat=c(90,75,82)) std ## name math stat ## 1 ana 86 90 ## 2 juan 43 75 ## 3 carla 80 82 library(tidyr) bd&lt;-gather(std,materia,nota,math:stat) bd ## name materia nota ## 1 ana math 86 ## 2 juan math 43 ## 3 carla math 80 ## 4 ana stat 90 ## 5 juan stat 75 ## 6 carla stat 82 # otra opción más relacionada a bases de datos con información de tiempo, # es el comando reshape 1.6.7 Ejercicio (reshape) http://www.udape.gob.bo/portales_html/dossierweb2019/htms/CAP07/C070311.xls 1.6.8 Limpieza (fechas) library(lubridate) date() ## [1] &quot;Mon Aug 1 19:01:37 2022&quot; today() ## [1] &quot;2022-08-01&quot; ymd(&quot;20151021&quot;) ## [1] &quot;2015-10-21&quot; ymd(&quot;2015/11/30&quot;) ## [1] &quot;2015-11-30&quot; myd(&quot;11.2012.3&quot;) ## [1] &quot;2012-11-03&quot; dmy_hms(&quot;2/12/2013 14:05:01&quot;) ## [1] &quot;2013-12-02 14:05:01 UTC&quot; mdy(&quot;120112&quot;) ## [1] &quot;2012-12-01&quot; d1&lt;-dmy(&quot;15032020&quot;) class(d1) ## [1] &quot;Date&quot; #ts() 1.6.9 Limpieza (String) toupper(&quot;hola&quot;) ## [1] &quot;HOLA&quot; tolower(&quot;HOLA&quot;) ## [1] &quot;hola&quot; abc&lt;-letters[1:10] toupper(abc) ## [1] &quot;A&quot; &quot;B&quot; &quot;C&quot; &quot;D&quot; &quot;E&quot; &quot;F&quot; &quot;G&quot; ## [8] &quot;H&quot; &quot;I&quot; &quot;J&quot; tolower(&quot;Juan&quot;) ## [1] &quot;juan&quot; # Extraer partes de un texto substr(&quot;hola como estan&quot;,1,3) ## [1] &quot;hol&quot; substr(&quot;hola como estan&quot;,3,7) ## [1] &quot;la co&quot; # contar la cantidad de caracteres nchar(&quot;hola&quot;) ## [1] 4 nchar(c(&quot;hola&quot;,&quot;chau&quot;,&quot;LA paz&quot;)) ## [1] 4 4 30 x&lt;-c(&quot;LA-.paz&quot;,&quot;La Paz&quot;, &quot;La pas&quot;, &quot;La paz&quot;,&quot;lapaz&quot;,&quot;la 78 paz&quot;) x&lt;-toupper(x) x&lt;-gsub(&quot;PAS&quot;,&quot;PAZ&quot;,x) library(tm) x&lt;-removeNumbers(x) x&lt;-removePunctuation(x) x&lt;-gsub(&quot;LAPAZ&quot;,&quot;LA PAZ&quot;,x) x&lt;-stripWhitespace(x) nchar(x) ## [1] 6 6 6 6 6 6 nchar(gsub(&quot; &quot;,&quot; &quot;,x)) ## [1] 6 6 6 6 6 6 gsub(&quot;a&quot;,&quot;x&quot;,&quot;hola como estas&quot;) ## [1] &quot;holx como estxs&quot; grepl(&quot;a&quot;,c(&quot;hola&quot;,&quot;como&quot;)) ## [1] TRUE FALSE grepl(&quot;o&quot;,c(&quot;hola&quot;,&quot;como&quot;)) ## [1] TRUE TRUE #otra alternativa x&lt;-c(&quot;LA-.paz&quot;,&quot;La Paz&quot;, &quot;La pas&quot;, &quot;La paz&quot;,&quot;lapaz&quot;,&quot;la 78 paz&quot;) x&lt;-toupper(x) x[grepl(&quot;PAZ&quot;,x)]&lt;-&quot;LA PAZ&quot; x&lt;-gsub(&quot;PAS&quot;,&quot;PAZ&quot;,x) # para llevar a ascii utf8ToInt(&quot;la paz&quot;) ## [1] 108 97 32 112 97 122 utf8ToInt(&quot;@&quot;) ## [1] 64 library(stringi) Ejemplo de web scraping sobre la página https://www.worldometers.info/ library(rvest) url&lt;-&quot;https://www.worldometers.info/coronavirus/&quot; covid&lt;-read_html(url) bdcov&lt;-html_table(covid) bdnow&lt;-bdcov[[1]] str(bdnow) ## tibble [246 × 22] (S3: tbl_df/tbl/data.frame) ## $ # : int [1:246] NA NA NA NA NA NA NA NA 1 2 ... ## $ Country,Other : chr [1:246] &quot;North America&quot; &quot;Asia&quot; &quot;Europe&quot; &quot;South America&quot; ... ## $ TotalCases : chr [1:246] &quot;110,499,104&quot; &quot;170,218,328&quot; &quot;215,684,754&quot; &quot;62,298,715&quot; ... ## $ NewCases : chr [1:246] &quot;+17,094&quot; &quot;+323,057&quot; &quot;+67,874&quot; &quot;+30,500&quot; ... ## $ TotalDeaths : chr [1:246] &quot;1,504,922&quot; &quot;1,448,481&quot; &quot;1,877,696&quot; &quot;1,316,172&quot; ... ## $ NewDeaths : chr [1:246] &quot;+53&quot; &quot;+310&quot; &quot;+420&quot; &quot;+187&quot; ... ## $ TotalRecovered : chr [1:246] &quot;103,321,710&quot; &quot;161,814,212&quot; &quot;205,992,353&quot; &quot;59,364,292&quot; ... ## $ NewRecovered : chr [1:246] &quot;+48,718&quot; &quot;+309,148&quot; &quot;+466,980&quot; &quot;+22,869&quot; ... ## $ ActiveCases : chr [1:246] &quot;5,672,472&quot; &quot;6,955,635&quot; &quot;7,814,705&quot; &quot;1,618,251&quot; ... ## $ Serious,Critical : chr [1:246] &quot;9,927&quot; &quot;12,468&quot; &quot;7,988&quot; &quot;10,542&quot; ... ## $ Tot Cases/1M pop : chr [1:246] &quot;&quot; &quot;&quot; &quot;&quot; &quot;&quot; ... ## $ Deaths/1M pop : chr [1:246] &quot;&quot; &quot;&quot; &quot;&quot; &quot;&quot; ... ## $ TotalTests : chr [1:246] &quot;&quot; &quot;&quot; &quot;&quot; &quot;&quot; ... ## $ Tests/1M pop : chr [1:246] &quot;&quot; &quot;&quot; &quot;&quot; &quot;&quot; ... ## $ Population : chr [1:246] &quot;&quot; &quot;&quot; &quot;&quot; &quot;&quot; ... ## $ Continent : chr [1:246] &quot;North America&quot; &quot;Asia&quot; &quot;Europe&quot; &quot;South America&quot; ... ## $ 1 Caseevery X ppl : chr [1:246] &quot;&quot; &quot;&quot; &quot;&quot; &quot;&quot; ... ## $ 1 Deathevery X ppl : chr [1:246] &quot;&quot; &quot;&quot; &quot;&quot; &quot;&quot; ... ## $ 1 Testevery X ppl : int [1:246] NA NA NA NA NA NA NA NA NA 2 ... ## $ New Cases/1M pop : chr [1:246] &quot;&quot; &quot;&quot; &quot;&quot; &quot;&quot; ... ## $ New Deaths/1M pop : num [1:246] NA NA NA NA NA NA NA NA NA NA ... ## $ Active Cases/1M pop: chr [1:246] &quot;&quot; &quot;&quot; &quot;&quot; &quot;&quot; ... Tarea: limpiar la base de datos Convertir las variables necesarias a numéricas Debe ser una base de solo países 1.6.10 Transformación load(url(&quot;https://github.com/AlvaroLimber/EST-384/raw/master/data/eh19.RData&quot;)) names(eh19p) ## [1] &quot;folio&quot; ## [2] &quot;depto&quot; ## [3] &quot;area&quot; ## [4] &quot;nro&quot; ## [5] &quot;s02a_02&quot; ## [6] &quot;s02a_03&quot; ## [7] &quot;s02a_04a&quot; ## [8] &quot;s02a_04b&quot; ## [9] &quot;s02a_04c&quot; ## [10] &quot;s02a_05&quot; ## [11] &quot;s02a_06a&quot; ## [12] &quot;s02a_06b&quot; ## [13] &quot;s02a_06c&quot; ## [14] &quot;s02a_06d&quot; ## [15] &quot;s02a_06e&quot; ## [16] &quot;s02a_06_b&quot; ## [17] &quot;s02a_07_1&quot; ## [18] &quot;s02a_07_2&quot; ## [19] &quot;s02a_07_3&quot; ## [20] &quot;s02a_08&quot; ## [21] &quot;s02a_10&quot; ## [22] &quot;s03a_01a&quot; ## [23] &quot;s03a_01b&quot; ## [24] &quot;s03a_01c&quot; ## [25] &quot;s03a_01d&quot; ## [26] &quot;s03a_01d2_cod&quot; ## [27] &quot;s03a_01e&quot; ## [28] &quot;s03a_02&quot; ## [29] &quot;s03a_02e&quot; ## [30] &quot;s03a_03&quot; ## [31] &quot;s03a_03a&quot; ## [32] &quot;s03a_04&quot; ## [33] &quot;s03a_04npioc&quot; ## [34] &quot;s04a_01a&quot; ## [35] &quot;s04a_01b&quot; ## [36] &quot;s04a_01e&quot; ## [37] &quot;s04a_02a&quot; ## [38] &quot;s04a_02b&quot; ## [39] &quot;s04a_02e&quot; ## [40] &quot;s04a_03a&quot; ## [41] &quot;s04a_03b&quot; ## [42] &quot;s04a_03c&quot; ## [43] &quot;s04a_03d&quot; ## [44] &quot;s04a_03e&quot; ## [45] &quot;s04a_03f&quot; ## [46] &quot;s04a_03g&quot; ## [47] &quot;s04a_04a&quot; ## [48] &quot;s04a_04b&quot; ## [49] &quot;s04a_04e&quot; ## [50] &quot;S04A_0&quot; ## [51] &quot;S04A_1&quot; ## [52] &quot;S04A_2&quot; ## [53] &quot;s04a_05a&quot; ## [54] &quot;s04a_05b&quot; ## [55] &quot;s04a_05c&quot; ## [56] &quot;s04a_05d&quot; ## [57] &quot;s04a_05e&quot; ## [58] &quot;s04a_06a&quot; ## [59] &quot;s04a_07a&quot; ## [60] &quot;s04a_07a_e&quot; ## [61] &quot;s04a_06b&quot; ## [62] &quot;s04a_07b&quot; ## [63] &quot;s04a_07b_e&quot; ## [64] &quot;s04a_06c&quot; ## [65] &quot;s04a_07c&quot; ## [66] &quot;s04a_07c_e&quot; ## [67] &quot;s04a_06d&quot; ## [68] &quot;s04a_07d&quot; ## [69] &quot;s04a_07d_e&quot; ## [70] &quot;s04a_06e&quot; ## [71] &quot;s04a_07e&quot; ## [72] &quot;s04a_07e_e&quot; ## [73] &quot;s04a_06f&quot; ## [74] &quot;s04a_07f&quot; ## [75] &quot;s04a_07f_e&quot; ## [76] &quot;s04a_06g&quot; ## [77] &quot;s04a_07g&quot; ## [78] &quot;s04a_07g_e&quot; ## [79] &quot;s04a_08&quot; ## [80] &quot;s04a_08a1&quot; ## [81] &quot;s04a_08a2&quot; ## [82] &quot;s04a_08b&quot; ## [83] &quot;s04a_09&quot; ## [84] &quot;s04a_09a&quot; ## [85] &quot;s04b_11a&quot; ## [86] &quot;s04b_11b&quot; ## [87] &quot;s04b_12&quot; ## [88] &quot;s04b_13&quot; ## [89] &quot;s04b_14a&quot; ## [90] &quot;s04b_14b&quot; ## [91] &quot;s04b_15&quot; ## [92] &quot;s04b_15e&quot; ## [93] &quot;S04B_9&quot; ## [94] &quot;S04B_A&quot; ## [95] &quot;S04B_B&quot; ## [96] &quot;s04b_16&quot; ## [97] &quot;s04b_16e&quot; ## [98] &quot;S04B_6&quot; ## [99] &quot;S04B_7&quot; ## [100] &quot;S04B_8&quot; ## [101] &quot;s04b_17&quot; ## [102] &quot;s04b_17e&quot; ## [103] &quot;S04B_3&quot; ## [104] &quot;S04B_4&quot; ## [105] &quot;S04B_5&quot; ## [106] &quot;s04b_18&quot; ## [107] &quot;s04b_18e&quot; ## [108] &quot;S04B_0&quot; ## [109] &quot;S04B_1&quot; ## [110] &quot;S04B_2&quot; ## [111] &quot;s04b_19&quot; ## [112] &quot;s04b_20a1&quot; ## [113] &quot;s04b_20a2&quot; ## [114] &quot;s04b_20b&quot; ## [115] &quot;s04b_21a&quot; ## [116] &quot;s04b_21b&quot; ## [117] &quot;s04b_21b2&quot; ## [118] &quot;s04c_22&quot; ## [119] &quot;s04c_23&quot; ## [120] &quot;s04d_24&quot; ## [121] &quot;s04d_25&quot; ## [122] &quot;s04d_26&quot; ## [123] &quot;s04d_27a&quot; ## [124] &quot;s04d_27b&quot; ## [125] &quot;s04e_28a&quot; ## [126] &quot;s04e_28b&quot; ## [127] &quot;s04e_29a&quot; ## [128] &quot;s04e_29b&quot; ## [129] &quot;s04e_30a&quot; ## [130] &quot;s04e_30b&quot; ## [131] &quot;s04e_30c_cod&quot; ## [132] &quot;s04e_31a&quot; ## [133] &quot;s04e_31b&quot; ## [134] &quot;s04e_31c&quot; ## [135] &quot;s04e_31d&quot; ## [136] &quot;s04e_31e&quot; ## [137] &quot;s04e_31f&quot; ## [138] &quot;s04e_31_e&quot; ## [139] &quot;s04e_32a&quot; ## [140] &quot;s04e_32b&quot; ## [141] &quot;s04e_33a&quot; ## [142] &quot;s04e_33b&quot; ## [143] &quot;s04_e_34a&quot; ## [144] &quot;s04f_34&quot; ## [145] &quot;s04f_35a&quot; ## [146] &quot;s04f_35b&quot; ## [147] &quot;s04f_35c&quot; ## [148] &quot;s04f_35e&quot; ## [149] &quot;s05a_01&quot; ## [150] &quot;s05a_01a&quot; ## [151] &quot;s05a_02a&quot; ## [152] &quot;s05a_02c&quot; ## [153] &quot;s05a_03a&quot; ## [154] &quot;s05a_03c&quot; ## [155] &quot;s05a_04&quot; ## [156] &quot;s05a_05&quot; ## [157] &quot;s05a_05_e&quot; ## [158] &quot;s05a_06a&quot; ## [159] &quot;s05a_06c&quot; ## [160] &quot;s05a_07a&quot; ## [161] &quot;s05a_07b&quot; ## [162] &quot;s05a_08&quot; ## [163] &quot;s05a_09&quot; ## [164] &quot;s05b_10&quot; ## [165] &quot;s05b_11&quot; ## [166] &quot;s05b_11_e&quot; ## [167] &quot;s05b_11a&quot; ## [168] &quot;s05c_13a&quot; ## [169] &quot;s05c_13b&quot; ## [170] &quot;s05c_13c&quot; ## [171] &quot;s05c_13d&quot; ## [172] &quot;s05c_13e&quot; ## [173] &quot;s05c_13f&quot; ## [174] &quot;s05c_13g&quot; ## [175] &quot;s05c_13h&quot; ## [176] &quot;s05c_13_e&quot; ## [177] &quot;s05c_14a&quot; ## [178] &quot;s05c_14b&quot; ## [179] &quot;s05c_15a&quot; ## [180] &quot;s05c_15b&quot; ## [181] &quot;s05d_17&quot; ## [182] &quot;s05d_18&quot; ## [183] &quot;s05d_19a&quot; ## [184] &quot;s05d_19b&quot; ## [185] &quot;s05d_20a&quot; ## [186] &quot;s05d_20b&quot; ## [187] &quot;s05d_21a&quot; ## [188] &quot;s05d_21b&quot; ## [189] &quot;s05d_21e&quot; ## [190] &quot;s05d_22a&quot; ## [191] &quot;s05d_22b&quot; ## [192] &quot;s05d_22c&quot; ## [193] &quot;s05d_22d&quot; ## [194] &quot;s05d_22e&quot; ## [195] &quot;s05d_22f&quot; ## [196] &quot;s05d_22g&quot; ## [197] &quot;s05d_22h&quot; ## [198] &quot;s05d_22i&quot; ## [199] &quot;s05d_22j&quot; ## [200] &quot;s05d_22k&quot; ## [201] &quot;s05d_22l&quot; ## [202] &quot;s05d_22_e&quot; ## [203] &quot;s06a_01&quot; ## [204] &quot;s06a_02&quot; ## [205] &quot;s06a_03&quot; ## [206] &quot;s06a_04&quot; ## [207] &quot;s06a_05&quot; ## [208] &quot;s06a_06aa&quot; ## [209] &quot;s06a_06ab&quot; ## [210] &quot;s06a_06ac&quot; ## [211] &quot;s06a_06e&quot; ## [212] &quot;s06a_07&quot; ## [213] &quot;s06a_08a&quot; ## [214] &quot;s06a_08b&quot; ## [215] &quot;s06a_09&quot; ## [216] &quot;s06a_09e&quot; ## [217] &quot;s06a_10&quot; ## [218] &quot;s06a_10e&quot; ## [219] &quot;s06b_11a&quot; ## [220] &quot;s06b_11a_cod&quot; ## [221] &quot;s06b_11b&quot; ## [222] &quot;s06b_12a&quot; ## [223] &quot;s06b_12a_cod&quot; ## [224] &quot;s06b_12b&quot; ## [225] &quot;s06b_13&quot; ## [226] &quot;s06b_13a&quot; ## [227] &quot;s06b_13b&quot; ## [228] &quot;s06b_13c&quot; ## [229] &quot;s06b_14&quot; ## [230] &quot;s06b_15aa&quot; ## [231] &quot;s06b_15ab&quot; ## [232] &quot;s06b_15ba&quot; ## [233] &quot;s06b_15bb&quot; ## [234] &quot;s06b_15ca&quot; ## [235] &quot;s06b_15cb&quot; ## [236] &quot;s06b_15da&quot; ## [237] &quot;s06b_15db&quot; ## [238] &quot;s06b_17&quot; ## [239] &quot;s06b_18&quot; ## [240] &quot;s06b_19a&quot; ## [241] &quot;s06b_19b&quot; ## [242] &quot;s06b_20&quot; ## [243] &quot;s06b_20e&quot; ## [244] &quot;s06b_21a&quot; ## [245] &quot;s06b_21b&quot; ## [246] &quot;s06b_22&quot; ## [247] &quot;s06b_23aa&quot; ## [248] &quot;s06b_23ab&quot; ## [249] &quot;s06c_25a&quot; ## [250] &quot;s06c_25b&quot; ## [251] &quot;s06c_26a&quot; ## [252] &quot;s06c_26b&quot; ## [253] &quot;s06c_27aa&quot; ## [254] &quot;s06c_27ab&quot; ## [255] &quot;s06c_27ba&quot; ## [256] &quot;s06c_27bb&quot; ## [257] &quot;s06c_28a&quot; ## [258] &quot;s06c_28a1&quot; ## [259] &quot;s06c_28b&quot; ## [260] &quot;s06c_29a&quot; ## [261] &quot;s06c_29b&quot; ## [262] &quot;s06c_30a&quot; ## [263] &quot;s06c_30a1&quot; ## [264] &quot;s06c_30a2&quot; ## [265] &quot;s06c_30b&quot; ## [266] &quot;s06c_30b1&quot; ## [267] &quot;s06c_30b2&quot; ## [268] &quot;s06c_30c&quot; ## [269] &quot;s06c_30c1&quot; ## [270] &quot;s06c_30c2&quot; ## [271] &quot;s06c_30d&quot; ## [272] &quot;s06c_30d1&quot; ## [273] &quot;s06c_30d2&quot; ## [274] &quot;s06c_30e&quot; ## [275] &quot;s06c_30e1&quot; ## [276] &quot;s06c_30e2&quot; ## [277] &quot;s06d_31a&quot; ## [278] &quot;s06d_31b&quot; ## [279] &quot;s06d_32aa&quot; ## [280] &quot;s06d_32ab&quot; ## [281] &quot;s06d_32ba&quot; ## [282] &quot;s06d_32bb&quot; ## [283] &quot;s06d_32ca&quot; ## [284] &quot;s06d_32cb&quot; ## [285] &quot;s06d_32da&quot; ## [286] &quot;s06d_32db&quot; ## [287] &quot;s06d_32ea&quot; ## [288] &quot;s06d_32eb&quot; ## [289] &quot;s06d_32fa&quot; ## [290] &quot;s06d_32fb&quot; ## [291] &quot;s06d_32ga&quot; ## [292] &quot;s06d_32gb&quot; ## [293] &quot;s06d_32ha&quot; ## [294] &quot;s06d_32hb&quot; ## [295] &quot;s06d_33a&quot; ## [296] &quot;s06d_33b&quot; ## [297] &quot;s06d_34&quot; ## [298] &quot;s06e_35a&quot; ## [299] &quot;s06e_35a_cod&quot; ## [300] &quot;s06e_35b&quot; ## [301] &quot;s06e_36&quot; ## [302] &quot;s06e_37&quot; ## [303] &quot;s06e_38a&quot; ## [304] &quot;s06e_38b&quot; ## [305] &quot;s06e_39&quot; ## [306] &quot;s06e_40&quot; ## [307] &quot;s06e_40b&quot; ## [308] &quot;s06f_42a&quot; ## [309] &quot;s06f_42b&quot; ## [310] &quot;s06f_43a&quot; ## [311] &quot;s06f_43a1&quot; ## [312] &quot;s06f_43b&quot; ## [313] &quot;s06f_43b1&quot; ## [314] &quot;s06f_43c&quot; ## [315] &quot;s06f_43c1&quot; ## [316] &quot;s06f_44a&quot; ## [317] &quot;s06f_44b&quot; ## [318] &quot;s06f_45aa&quot; ## [319] &quot;s06f_45ab&quot; ## [320] &quot;s06f_45ba&quot; ## [321] &quot;s06f_45bb&quot; ## [322] &quot;s06f_45ca&quot; ## [323] &quot;s06f_45cb&quot; ## [324] &quot;s06f_45da&quot; ## [325] &quot;s06f_45db&quot; ## [326] &quot;s06f_45ea&quot; ## [327] &quot;s06f_45eb&quot; ## [328] &quot;s06f_45fa&quot; ## [329] &quot;s06f_45fb&quot; ## [330] &quot;s06f_45ga&quot; ## [331] &quot;s06f_45gb&quot; ## [332] &quot;s06f_45ha&quot; ## [333] &quot;s06f_45hb&quot; ## [334] &quot;s06f_46a&quot; ## [335] &quot;s06f_46b&quot; ## [336] &quot;s06g_47&quot; ## [337] &quot;s06g_48&quot; ## [338] &quot;s06g_49&quot; ## [339] &quot;s06g_49e&quot; ## [340] &quot;s06g_50&quot; ## [341] &quot;s06g_50e&quot; ## [342] &quot;s06g_51&quot; ## [343] &quot;s06g_51e&quot; ## [344] &quot;s06g_52&quot; ## [345] &quot;s06g_53&quot; ## [346] &quot;s06g_54&quot; ## [347] &quot;s06g_55&quot; ## [348] &quot;s07a_01a&quot; ## [349] &quot;s07a_01b&quot; ## [350] &quot;s07a_01c&quot; ## [351] &quot;s07a_01d&quot; ## [352] &quot;s07a_01e&quot; ## [353] &quot;s07a_01e0&quot; ## [354] &quot;s07a_01e1&quot; ## [355] &quot;s07a_01e1e&quot; ## [356] &quot;s07a_01e2&quot; ## [357] &quot;s07a_01e2e&quot; ## [358] &quot;s07a_02a&quot; ## [359] &quot;s07a_02b&quot; ## [360] &quot;s07a_02c&quot; ## [361] &quot;s07a_02ce&quot; ## [362] &quot;s07a_03a&quot; ## [363] &quot;s07a_03b&quot; ## [364] &quot;s07a_03c&quot; ## [365] &quot;s07a_04a&quot; ## [366] &quot;s07a_04b&quot; ## [367] &quot;s07a_04c&quot; ## [368] &quot;s07a_04d&quot; ## [369] &quot;s07b_05aa&quot; ## [370] &quot;s07b_05ab&quot; ## [371] &quot;s07b_05ba&quot; ## [372] &quot;s07b_05bb&quot; ## [373] &quot;s07b_05ca&quot; ## [374] &quot;s07b_05cb&quot; ## [375] &quot;s07b_05da&quot; ## [376] &quot;s07b_05db&quot; ## [377] &quot;s07b_05de&quot; ## [378] &quot;s07b_05ea&quot; ## [379] &quot;s07b_05eb&quot; ## [380] &quot;s07b_05ee&quot; ## [381] &quot;s07c_06&quot; ## [382] &quot;s07c_07&quot; ## [383] &quot;s07c_08a&quot; ## [384] &quot;s07c_08b&quot; ## [385] &quot;s07c_08e&quot; ## [386] &quot;s07c_09&quot; ## [387] &quot;s07c_09e&quot; ## [388] &quot;s07c_10&quot; ## [389] &quot;s08a_01&quot; ## [390] &quot;s08a_03a&quot; ## [391] &quot;s08a_03b&quot; ## [392] &quot;s08a_03c&quot; ## [393] &quot;s08a_03e&quot; ## [394] &quot;s08a_04&quot; ## [395] &quot;s08a_06&quot; ## [396] &quot;upm&quot; ## [397] &quot;estrato&quot; ## [398] &quot;factor&quot; ## [399] &quot;tipohogar&quot; ## [400] &quot;cobersalud&quot; ## [401] &quot;hnv_ult_a&quot; ## [402] &quot;quienatenparto&quot; ## [403] &quot;dondeatenparto&quot; ## [404] &quot;niv_ed&quot; ## [405] &quot;niv_ed_g&quot; ## [406] &quot;cmasi&quot; ## [407] &quot;educ_prev&quot; ## [408] &quot;aestudio&quot; ## [409] &quot;cob_op&quot; ## [410] &quot;caeb_op&quot; ## [411] &quot;pet&quot; ## [412] &quot;ocupado&quot; ## [413] &quot;cesante&quot; ## [414] &quot;aspirante&quot; ## [415] &quot;desocupado&quot; ## [416] &quot;pea&quot; ## [417] &quot;temporal&quot; ## [418] &quot;permanente&quot; ## [419] &quot;pei&quot; ## [420] &quot;condact&quot; ## [421] &quot;phrs&quot; ## [422] &quot;shrs&quot; ## [423] &quot;tothrs&quot; ## [424] &quot;yprilab&quot; ## [425] &quot;yseclab&quot; ## [426] &quot;ylab&quot; ## [427] &quot;ynolab&quot; ## [428] &quot;yper&quot; ## [429] &quot;yhog&quot; ## [430] &quot;yhogpc&quot; ## [431] &quot;z&quot; ## [432] &quot;zext&quot; ## [433] &quot;p0&quot; ## [434] &quot;p1&quot; ## [435] &quot;p2&quot; ## [436] &quot;pext0&quot; ## [437] &quot;pext1&quot; ## [438] &quot;pext2&quot; Estandarizar variables summary(eh19p$s02a_03) #edad ## Min. 1st Qu. Median Mean ## 0.00 12.00 26.00 29.69 ## 3rd Qu. Max. ## 44.00 98.00 summary(eh19p$tothrs) # total de horas de trabajo semanal ## Min. 1st Qu. Median Mean ## 1.00 30.00 42.00 42.29 ## 3rd Qu. Max. NA&#39;s ## 54.00 112.50 20454 summary(eh19p$ylab) # ingreso laboral mensual ## Min. 1st Qu. Median Mean ## 10 1416 2598 3075 ## 3rd Qu. Max. NA&#39;s ## 4000 32917 23816 sd(eh19p$s02a_03) ## [1] 21.05689 sd(eh19p$tothrs,na.rm = T) ## [1] 19.33807 sd(eh19p$ylab,na.rm = T) ## [1] 2470.079 x1&lt;-scale(eh19p$s02a_03) x2&lt;-scale(eh19p$tothrs) x3&lt;-scale(eh19p$ylab) sd(x1);sd(x2,na.rm = T);sd(x3,na.rm = T) ## [1] 1 ## [1] 1 ## [1] 1 par(mfrow=c(2,3)) boxplot(eh19p$s02a_03,ylim=c(0,25000)) boxplot(eh19p$tothrs,ylim=c(0,25000)) boxplot(eh19p$ylab,ylim=c(0,25000)) boxplot(x1,ylim=c(-3,3)) boxplot(x2,ylim=c(-3,3)) boxplot(x3,ylim=c(-3,3)) par(mfrow=c(2,3)) plot(density(eh19p$s02a_03)) plot(density(eh19p$tothrs,na.rm=T)) plot(density(eh19p$ylab,na.rm=T)) plot(density(x1)) plot(density(x2,na.rm=T)) plot(density(x3,na.rm=T)) mean(eh19p$ylab,na.rm=T) ## [1] 3074.659 median(eh19p$ylab,na.rm=T) ## [1] 2598 Función logarítmo dev.off() ## null device ## 1 curve(log,xlim=c(10,30000)) x1&lt;-log(eh19p$s02a_03) x2&lt;-log(eh19p$tothrs) x3&lt;-log(eh19p$ylab) par(mfrow=c(2,3)) plot(density(eh19p$s02a_03)) plot(density(eh19p$tothrs,na.rm=T)) plot(density(eh19p$ylab,na.rm=T)) plot(density(x1)) plot(density(x2,na.rm=T)) plot(density(x3,na.rm=T)) dev.off() ## null device ## 1 Creación de variables eh19p$log_ylab &lt;-log(eh19p$ylab) eh19p$scale_ylab &lt;-scale(eh19p$ylab) names(eh19p) ## [1] &quot;folio&quot; ## [2] &quot;depto&quot; ## [3] &quot;area&quot; ## [4] &quot;nro&quot; ## [5] &quot;s02a_02&quot; ## [6] &quot;s02a_03&quot; ## [7] &quot;s02a_04a&quot; ## [8] &quot;s02a_04b&quot; ## [9] &quot;s02a_04c&quot; ## [10] &quot;s02a_05&quot; ## [11] &quot;s02a_06a&quot; ## [12] &quot;s02a_06b&quot; ## [13] &quot;s02a_06c&quot; ## [14] &quot;s02a_06d&quot; ## [15] &quot;s02a_06e&quot; ## [16] &quot;s02a_06_b&quot; ## [17] &quot;s02a_07_1&quot; ## [18] &quot;s02a_07_2&quot; ## [19] &quot;s02a_07_3&quot; ## [20] &quot;s02a_08&quot; ## [21] &quot;s02a_10&quot; ## [22] &quot;s03a_01a&quot; ## [23] &quot;s03a_01b&quot; ## [24] &quot;s03a_01c&quot; ## [25] &quot;s03a_01d&quot; ## [26] &quot;s03a_01d2_cod&quot; ## [27] &quot;s03a_01e&quot; ## [28] &quot;s03a_02&quot; ## [29] &quot;s03a_02e&quot; ## [30] &quot;s03a_03&quot; ## [31] &quot;s03a_03a&quot; ## [32] &quot;s03a_04&quot; ## [33] &quot;s03a_04npioc&quot; ## [34] &quot;s04a_01a&quot; ## [35] &quot;s04a_01b&quot; ## [36] &quot;s04a_01e&quot; ## [37] &quot;s04a_02a&quot; ## [38] &quot;s04a_02b&quot; ## [39] &quot;s04a_02e&quot; ## [40] &quot;s04a_03a&quot; ## [41] &quot;s04a_03b&quot; ## [42] &quot;s04a_03c&quot; ## [43] &quot;s04a_03d&quot; ## [44] &quot;s04a_03e&quot; ## [45] &quot;s04a_03f&quot; ## [46] &quot;s04a_03g&quot; ## [47] &quot;s04a_04a&quot; ## [48] &quot;s04a_04b&quot; ## [49] &quot;s04a_04e&quot; ## [50] &quot;S04A_0&quot; ## [51] &quot;S04A_1&quot; ## [52] &quot;S04A_2&quot; ## [53] &quot;s04a_05a&quot; ## [54] &quot;s04a_05b&quot; ## [55] &quot;s04a_05c&quot; ## [56] &quot;s04a_05d&quot; ## [57] &quot;s04a_05e&quot; ## [58] &quot;s04a_06a&quot; ## [59] &quot;s04a_07a&quot; ## [60] &quot;s04a_07a_e&quot; ## [61] &quot;s04a_06b&quot; ## [62] &quot;s04a_07b&quot; ## [63] &quot;s04a_07b_e&quot; ## [64] &quot;s04a_06c&quot; ## [65] &quot;s04a_07c&quot; ## [66] &quot;s04a_07c_e&quot; ## [67] &quot;s04a_06d&quot; ## [68] &quot;s04a_07d&quot; ## [69] &quot;s04a_07d_e&quot; ## [70] &quot;s04a_06e&quot; ## [71] &quot;s04a_07e&quot; ## [72] &quot;s04a_07e_e&quot; ## [73] &quot;s04a_06f&quot; ## [74] &quot;s04a_07f&quot; ## [75] &quot;s04a_07f_e&quot; ## [76] &quot;s04a_06g&quot; ## [77] &quot;s04a_07g&quot; ## [78] &quot;s04a_07g_e&quot; ## [79] &quot;s04a_08&quot; ## [80] &quot;s04a_08a1&quot; ## [81] &quot;s04a_08a2&quot; ## [82] &quot;s04a_08b&quot; ## [83] &quot;s04a_09&quot; ## [84] &quot;s04a_09a&quot; ## [85] &quot;s04b_11a&quot; ## [86] &quot;s04b_11b&quot; ## [87] &quot;s04b_12&quot; ## [88] &quot;s04b_13&quot; ## [89] &quot;s04b_14a&quot; ## [90] &quot;s04b_14b&quot; ## [91] &quot;s04b_15&quot; ## [92] &quot;s04b_15e&quot; ## [93] &quot;S04B_9&quot; ## [94] &quot;S04B_A&quot; ## [95] &quot;S04B_B&quot; ## [96] &quot;s04b_16&quot; ## [97] &quot;s04b_16e&quot; ## [98] &quot;S04B_6&quot; ## [99] &quot;S04B_7&quot; ## [100] &quot;S04B_8&quot; ## [101] &quot;s04b_17&quot; ## [102] &quot;s04b_17e&quot; ## [103] &quot;S04B_3&quot; ## [104] &quot;S04B_4&quot; ## [105] &quot;S04B_5&quot; ## [106] &quot;s04b_18&quot; ## [107] &quot;s04b_18e&quot; ## [108] &quot;S04B_0&quot; ## [109] &quot;S04B_1&quot; ## [110] &quot;S04B_2&quot; ## [111] &quot;s04b_19&quot; ## [112] &quot;s04b_20a1&quot; ## [113] &quot;s04b_20a2&quot; ## [114] &quot;s04b_20b&quot; ## [115] &quot;s04b_21a&quot; ## [116] &quot;s04b_21b&quot; ## [117] &quot;s04b_21b2&quot; ## [118] &quot;s04c_22&quot; ## [119] &quot;s04c_23&quot; ## [120] &quot;s04d_24&quot; ## [121] &quot;s04d_25&quot; ## [122] &quot;s04d_26&quot; ## [123] &quot;s04d_27a&quot; ## [124] &quot;s04d_27b&quot; ## [125] &quot;s04e_28a&quot; ## [126] &quot;s04e_28b&quot; ## [127] &quot;s04e_29a&quot; ## [128] &quot;s04e_29b&quot; ## [129] &quot;s04e_30a&quot; ## [130] &quot;s04e_30b&quot; ## [131] &quot;s04e_30c_cod&quot; ## [132] &quot;s04e_31a&quot; ## [133] &quot;s04e_31b&quot; ## [134] &quot;s04e_31c&quot; ## [135] &quot;s04e_31d&quot; ## [136] &quot;s04e_31e&quot; ## [137] &quot;s04e_31f&quot; ## [138] &quot;s04e_31_e&quot; ## [139] &quot;s04e_32a&quot; ## [140] &quot;s04e_32b&quot; ## [141] &quot;s04e_33a&quot; ## [142] &quot;s04e_33b&quot; ## [143] &quot;s04_e_34a&quot; ## [144] &quot;s04f_34&quot; ## [145] &quot;s04f_35a&quot; ## [146] &quot;s04f_35b&quot; ## [147] &quot;s04f_35c&quot; ## [148] &quot;s04f_35e&quot; ## [149] &quot;s05a_01&quot; ## [150] &quot;s05a_01a&quot; ## [151] &quot;s05a_02a&quot; ## [152] &quot;s05a_02c&quot; ## [153] &quot;s05a_03a&quot; ## [154] &quot;s05a_03c&quot; ## [155] &quot;s05a_04&quot; ## [156] &quot;s05a_05&quot; ## [157] &quot;s05a_05_e&quot; ## [158] &quot;s05a_06a&quot; ## [159] &quot;s05a_06c&quot; ## [160] &quot;s05a_07a&quot; ## [161] &quot;s05a_07b&quot; ## [162] &quot;s05a_08&quot; ## [163] &quot;s05a_09&quot; ## [164] &quot;s05b_10&quot; ## [165] &quot;s05b_11&quot; ## [166] &quot;s05b_11_e&quot; ## [167] &quot;s05b_11a&quot; ## [168] &quot;s05c_13a&quot; ## [169] &quot;s05c_13b&quot; ## [170] &quot;s05c_13c&quot; ## [171] &quot;s05c_13d&quot; ## [172] &quot;s05c_13e&quot; ## [173] &quot;s05c_13f&quot; ## [174] &quot;s05c_13g&quot; ## [175] &quot;s05c_13h&quot; ## [176] &quot;s05c_13_e&quot; ## [177] &quot;s05c_14a&quot; ## [178] &quot;s05c_14b&quot; ## [179] &quot;s05c_15a&quot; ## [180] &quot;s05c_15b&quot; ## [181] &quot;s05d_17&quot; ## [182] &quot;s05d_18&quot; ## [183] &quot;s05d_19a&quot; ## [184] &quot;s05d_19b&quot; ## [185] &quot;s05d_20a&quot; ## [186] &quot;s05d_20b&quot; ## [187] &quot;s05d_21a&quot; ## [188] &quot;s05d_21b&quot; ## [189] &quot;s05d_21e&quot; ## [190] &quot;s05d_22a&quot; ## [191] &quot;s05d_22b&quot; ## [192] &quot;s05d_22c&quot; ## [193] &quot;s05d_22d&quot; ## [194] &quot;s05d_22e&quot; ## [195] &quot;s05d_22f&quot; ## [196] &quot;s05d_22g&quot; ## [197] &quot;s05d_22h&quot; ## [198] &quot;s05d_22i&quot; ## [199] &quot;s05d_22j&quot; ## [200] &quot;s05d_22k&quot; ## [201] &quot;s05d_22l&quot; ## [202] &quot;s05d_22_e&quot; ## [203] &quot;s06a_01&quot; ## [204] &quot;s06a_02&quot; ## [205] &quot;s06a_03&quot; ## [206] &quot;s06a_04&quot; ## [207] &quot;s06a_05&quot; ## [208] &quot;s06a_06aa&quot; ## [209] &quot;s06a_06ab&quot; ## [210] &quot;s06a_06ac&quot; ## [211] &quot;s06a_06e&quot; ## [212] &quot;s06a_07&quot; ## [213] &quot;s06a_08a&quot; ## [214] &quot;s06a_08b&quot; ## [215] &quot;s06a_09&quot; ## [216] &quot;s06a_09e&quot; ## [217] &quot;s06a_10&quot; ## [218] &quot;s06a_10e&quot; ## [219] &quot;s06b_11a&quot; ## [220] &quot;s06b_11a_cod&quot; ## [221] &quot;s06b_11b&quot; ## [222] &quot;s06b_12a&quot; ## [223] &quot;s06b_12a_cod&quot; ## [224] &quot;s06b_12b&quot; ## [225] &quot;s06b_13&quot; ## [226] &quot;s06b_13a&quot; ## [227] &quot;s06b_13b&quot; ## [228] &quot;s06b_13c&quot; ## [229] &quot;s06b_14&quot; ## [230] &quot;s06b_15aa&quot; ## [231] &quot;s06b_15ab&quot; ## [232] &quot;s06b_15ba&quot; ## [233] &quot;s06b_15bb&quot; ## [234] &quot;s06b_15ca&quot; ## [235] &quot;s06b_15cb&quot; ## [236] &quot;s06b_15da&quot; ## [237] &quot;s06b_15db&quot; ## [238] &quot;s06b_17&quot; ## [239] &quot;s06b_18&quot; ## [240] &quot;s06b_19a&quot; ## [241] &quot;s06b_19b&quot; ## [242] &quot;s06b_20&quot; ## [243] &quot;s06b_20e&quot; ## [244] &quot;s06b_21a&quot; ## [245] &quot;s06b_21b&quot; ## [246] &quot;s06b_22&quot; ## [247] &quot;s06b_23aa&quot; ## [248] &quot;s06b_23ab&quot; ## [249] &quot;s06c_25a&quot; ## [250] &quot;s06c_25b&quot; ## [251] &quot;s06c_26a&quot; ## [252] &quot;s06c_26b&quot; ## [253] &quot;s06c_27aa&quot; ## [254] &quot;s06c_27ab&quot; ## [255] &quot;s06c_27ba&quot; ## [256] &quot;s06c_27bb&quot; ## [257] &quot;s06c_28a&quot; ## [258] &quot;s06c_28a1&quot; ## [259] &quot;s06c_28b&quot; ## [260] &quot;s06c_29a&quot; ## [261] &quot;s06c_29b&quot; ## [262] &quot;s06c_30a&quot; ## [263] &quot;s06c_30a1&quot; ## [264] &quot;s06c_30a2&quot; ## [265] &quot;s06c_30b&quot; ## [266] &quot;s06c_30b1&quot; ## [267] &quot;s06c_30b2&quot; ## [268] &quot;s06c_30c&quot; ## [269] &quot;s06c_30c1&quot; ## [270] &quot;s06c_30c2&quot; ## [271] &quot;s06c_30d&quot; ## [272] &quot;s06c_30d1&quot; ## [273] &quot;s06c_30d2&quot; ## [274] &quot;s06c_30e&quot; ## [275] &quot;s06c_30e1&quot; ## [276] &quot;s06c_30e2&quot; ## [277] &quot;s06d_31a&quot; ## [278] &quot;s06d_31b&quot; ## [279] &quot;s06d_32aa&quot; ## [280] &quot;s06d_32ab&quot; ## [281] &quot;s06d_32ba&quot; ## [282] &quot;s06d_32bb&quot; ## [283] &quot;s06d_32ca&quot; ## [284] &quot;s06d_32cb&quot; ## [285] &quot;s06d_32da&quot; ## [286] &quot;s06d_32db&quot; ## [287] &quot;s06d_32ea&quot; ## [288] &quot;s06d_32eb&quot; ## [289] &quot;s06d_32fa&quot; ## [290] &quot;s06d_32fb&quot; ## [291] &quot;s06d_32ga&quot; ## [292] &quot;s06d_32gb&quot; ## [293] &quot;s06d_32ha&quot; ## [294] &quot;s06d_32hb&quot; ## [295] &quot;s06d_33a&quot; ## [296] &quot;s06d_33b&quot; ## [297] &quot;s06d_34&quot; ## [298] &quot;s06e_35a&quot; ## [299] &quot;s06e_35a_cod&quot; ## [300] &quot;s06e_35b&quot; ## [301] &quot;s06e_36&quot; ## [302] &quot;s06e_37&quot; ## [303] &quot;s06e_38a&quot; ## [304] &quot;s06e_38b&quot; ## [305] &quot;s06e_39&quot; ## [306] &quot;s06e_40&quot; ## [307] &quot;s06e_40b&quot; ## [308] &quot;s06f_42a&quot; ## [309] &quot;s06f_42b&quot; ## [310] &quot;s06f_43a&quot; ## [311] &quot;s06f_43a1&quot; ## [312] &quot;s06f_43b&quot; ## [313] &quot;s06f_43b1&quot; ## [314] &quot;s06f_43c&quot; ## [315] &quot;s06f_43c1&quot; ## [316] &quot;s06f_44a&quot; ## [317] &quot;s06f_44b&quot; ## [318] &quot;s06f_45aa&quot; ## [319] &quot;s06f_45ab&quot; ## [320] &quot;s06f_45ba&quot; ## [321] &quot;s06f_45bb&quot; ## [322] &quot;s06f_45ca&quot; ## [323] &quot;s06f_45cb&quot; ## [324] &quot;s06f_45da&quot; ## [325] &quot;s06f_45db&quot; ## [326] &quot;s06f_45ea&quot; ## [327] &quot;s06f_45eb&quot; ## [328] &quot;s06f_45fa&quot; ## [329] &quot;s06f_45fb&quot; ## [330] &quot;s06f_45ga&quot; ## [331] &quot;s06f_45gb&quot; ## [332] &quot;s06f_45ha&quot; ## [333] &quot;s06f_45hb&quot; ## [334] &quot;s06f_46a&quot; ## [335] &quot;s06f_46b&quot; ## [336] &quot;s06g_47&quot; ## [337] &quot;s06g_48&quot; ## [338] &quot;s06g_49&quot; ## [339] &quot;s06g_49e&quot; ## [340] &quot;s06g_50&quot; ## [341] &quot;s06g_50e&quot; ## [342] &quot;s06g_51&quot; ## [343] &quot;s06g_51e&quot; ## [344] &quot;s06g_52&quot; ## [345] &quot;s06g_53&quot; ## [346] &quot;s06g_54&quot; ## [347] &quot;s06g_55&quot; ## [348] &quot;s07a_01a&quot; ## [349] &quot;s07a_01b&quot; ## [350] &quot;s07a_01c&quot; ## [351] &quot;s07a_01d&quot; ## [352] &quot;s07a_01e&quot; ## [353] &quot;s07a_01e0&quot; ## [354] &quot;s07a_01e1&quot; ## [355] &quot;s07a_01e1e&quot; ## [356] &quot;s07a_01e2&quot; ## [357] &quot;s07a_01e2e&quot; ## [358] &quot;s07a_02a&quot; ## [359] &quot;s07a_02b&quot; ## [360] &quot;s07a_02c&quot; ## [361] &quot;s07a_02ce&quot; ## [362] &quot;s07a_03a&quot; ## [363] &quot;s07a_03b&quot; ## [364] &quot;s07a_03c&quot; ## [365] &quot;s07a_04a&quot; ## [366] &quot;s07a_04b&quot; ## [367] &quot;s07a_04c&quot; ## [368] &quot;s07a_04d&quot; ## [369] &quot;s07b_05aa&quot; ## [370] &quot;s07b_05ab&quot; ## [371] &quot;s07b_05ba&quot; ## [372] &quot;s07b_05bb&quot; ## [373] &quot;s07b_05ca&quot; ## [374] &quot;s07b_05cb&quot; ## [375] &quot;s07b_05da&quot; ## [376] &quot;s07b_05db&quot; ## [377] &quot;s07b_05de&quot; ## [378] &quot;s07b_05ea&quot; ## [379] &quot;s07b_05eb&quot; ## [380] &quot;s07b_05ee&quot; ## [381] &quot;s07c_06&quot; ## [382] &quot;s07c_07&quot; ## [383] &quot;s07c_08a&quot; ## [384] &quot;s07c_08b&quot; ## [385] &quot;s07c_08e&quot; ## [386] &quot;s07c_09&quot; ## [387] &quot;s07c_09e&quot; ## [388] &quot;s07c_10&quot; ## [389] &quot;s08a_01&quot; ## [390] &quot;s08a_03a&quot; ## [391] &quot;s08a_03b&quot; ## [392] &quot;s08a_03c&quot; ## [393] &quot;s08a_03e&quot; ## [394] &quot;s08a_04&quot; ## [395] &quot;s08a_06&quot; ## [396] &quot;upm&quot; ## [397] &quot;estrato&quot; ## [398] &quot;factor&quot; ## [399] &quot;tipohogar&quot; ## [400] &quot;cobersalud&quot; ## [401] &quot;hnv_ult_a&quot; ## [402] &quot;quienatenparto&quot; ## [403] &quot;dondeatenparto&quot; ## [404] &quot;niv_ed&quot; ## [405] &quot;niv_ed_g&quot; ## [406] &quot;cmasi&quot; ## [407] &quot;educ_prev&quot; ## [408] &quot;aestudio&quot; ## [409] &quot;cob_op&quot; ## [410] &quot;caeb_op&quot; ## [411] &quot;pet&quot; ## [412] &quot;ocupado&quot; ## [413] &quot;cesante&quot; ## [414] &quot;aspirante&quot; ## [415] &quot;desocupado&quot; ## [416] &quot;pea&quot; ## [417] &quot;temporal&quot; ## [418] &quot;permanente&quot; ## [419] &quot;pei&quot; ## [420] &quot;condact&quot; ## [421] &quot;phrs&quot; ## [422] &quot;shrs&quot; ## [423] &quot;tothrs&quot; ## [424] &quot;yprilab&quot; ## [425] &quot;yseclab&quot; ## [426] &quot;ylab&quot; ## [427] &quot;ynolab&quot; ## [428] &quot;yper&quot; ## [429] &quot;yhog&quot; ## [430] &quot;yhogpc&quot; ## [431] &quot;z&quot; ## [432] &quot;zext&quot; ## [433] &quot;p0&quot; ## [434] &quot;p1&quot; ## [435] &quot;p2&quot; ## [436] &quot;pext0&quot; ## [437] &quot;pext1&quot; ## [438] &quot;pext2&quot; ## [439] &quot;log_ylab&quot; ## [440] &quot;scale_ylab&quot; #install.packages(&quot;dplyr&quot;) library(dplyr) # filtrado, selección, creación de variables, resumen #nota: dplyr se enfoca en el encadenamiento de comandos, con una lógica similar al SQL # %&gt;% # operador pipe: ctr + mayus + m eh19p &lt;- eh19p %&gt;% mutate(x1=ylab^2,llylab=log(ylab), tothrs_mensual=tothrs*4.35,mujer=s02a_02==&quot;2.Mujer&quot;) #cut() # crear clases # grandes grupos de edad eh19p&lt;-eh19p %&gt;% mutate(gedad=cut(s02a_03,c(-1,18,60,max(s02a_03)),labels = c(&quot;&lt;=18&quot;,&quot;19 a 60&quot;,&quot;&gt;60&quot;) )) eh19p %&gt;% select(1,folio,s02a_03,gedad) %&gt;% head() ## folio s02a_03 ## 1 111-00416110273-A-0021 42 ## 2 111-00416110273-A-0021 36 ## 3 111-00416110273-A-0021 19 ## 4 111-00416110273-A-0021 13 ## 5 111-00416110273-A-0021 3 ## 6 111-00416110273-A-0021 86 ## gedad ## 1 19 a 60 ## 2 19 a 60 ## 3 19 a 60 ## 4 &lt;=18 ## 5 &lt;=18 ## 6 &gt;60 table(eh19p$gedad) ## ## &lt;=18 19 a 60 &gt;60 ## 14831 20736 4038 eh19p %&gt;% select(gedad) %&gt;% table() ## gedad ## &lt;=18 19 a 60 &gt;60 ## 14831 20736 4038 barplot(table(eh19p$gedad)) Recodificar variables load(url(&quot;https://github.com/AlvaroLimber/EST-384/raw/master/data/eh19.RData&quot;)) library(dplyr) a&lt;-c(1:10) recode(a,`1` = 20L,`2` = 20L,`4` = 30L) eh19p$sexo&lt;-recode(eh19p$s02a_02,&quot;1.Hombre&quot;=&quot;H&quot;,&quot;2.Mujer&quot;=&quot;M&quot;) table(eh19p$sexo) eh19p&lt;-eh19p %&gt;% mutate(sexo2=recode(s02a_02,&quot;1.Hombre&quot;=&quot;M&quot;,&quot;2.Mujer&quot;=&quot;F&quot;)) eh19p %&gt;% select(sexo2) %&gt;% table() # binarias unique(eh19p$depto) # se quiere crear una nueva variable, llamada región: # Altiplano: LP, OR, PT # Valle: CB, CH, TR # Llano: SC, BN, PD # tarea #if_else() # trabaja con spark, para crear binarios #case_when() # múltiple categorías basadas en reglas v1&lt;-c(&quot;La Paz&quot;,&quot;Oruro&quot;,&quot;Potosí&quot;) v2&lt;-c(&quot;Chuquisaca&quot;,&quot;Cochabamba&quot;,&quot;Tarija&quot;) v3&lt;-c(&quot;Santa Cruz&quot;,&quot;Beni&quot;,&quot;Pando&quot;) eh19p %&gt;% mutate(altiplano = depto %in% v1 ) %&gt;% select(altiplano) %&gt;% table() eh19p &lt;- eh19p %&gt;% mutate(altiplano = depto %in% v1 , valle = depto %in% v2,llano = depto %in% v3) names(eh19p) 1.6.11 Definir diseño de encuesta por muestreo Si tenemos una base de datos proveniente de una encuesta por muestreo, debemos tener conocimiento de las características del diseño muestral empleado en la encuesta, ya que este diseño afecta de forma directa el proceso de estimación y tiene un error de muestreo. Principalmente lo siguiente: Si el diseño tiene etapas (o mono etápico con conglomerados), la variable de conglomeración y de estratificación son muy relevantes. Estas afectan directamente a los errores de las estimaciones. Si el esquema de selección de las unidades muestrales a sido autoponderada (MAS, todas las unidades tenían la misma probabilidad de ser seleccionadas) o no. Si no es autponderada se requiere la variable conocida como el factor de expansión (inverso de la probabilidad de selección) Hay tres variables relevantes: conglomerados (principalmente primera etapa), estratificación (principalmente primera etapa) y factor de expansión. Idealmente en un muestreo de varias etapas y estratificado el factor por finitud es necesario ya que permite mejorar la aproximación a la varianza. #install.packages(&quot;survey&quot;) library(survey) # no trabaja con el concepto de dplyr, no permite el uso de &quot;%&gt;%&quot; library(srvyr) # permite el uso del operador %&gt;% names(eh19p) #survey sd_eh19p&lt;-svydesign(ids = ~upm + folio, strata = ~estrato, weights = ~factor,data = eh19p) str(sd_eh19p) table(eh19p$p0) prop.table(table(eh19p$p0))*100 # pobreza moderada en la muestra svytable(~p0 ,design = sd_eh19p) prop.table(svytable(~p0 ,design = sd_eh19p))*100 summary(svytable(~p0 ,design = sd_eh19p)) t1&lt;-svymean(~ylab,design = sd_eh19p,na.rm=T,deff=T) cv(t1) confint(t1) t2&lt;-svyby(~ylab,by=~depto+area,design = sd_eh19p,FUN = svymean,na.rm=T) cv(t2) confint(t2) summary(svytable(~depto+p0 ,design = sd_eh19p)) # revisar # departamento prop.table(table(eh19p$depto,eh19p$p0),1)*100 prop.table(svytable(~depto+p0 ,design = sd_eh19p),1)*100 svydesign(ids=~1,data=bd)#mas svydesign(ids=~1,strata = estrato,data=bd)#mas estraficado svydesign(ids=~1,strata = ~estrato,weights = ~ponderador,data=bd)#pps estraficado svymean(~p0, design=sd_eh19p,na.rm=T) svytotal(~p0, design=sd_eh19p,na.rm=T) # svytable(~p0,design=sd_eh19p) # tablas de contigencias y hacer pruebas sobre estas t1&lt;-svymean(~p0,design=sd_eh19p,na.rm=T) # proporciones / medias t2&lt;-svytotal(~p0,design=sd_eh19p,na.rm=T) # totales clase / total cv(t1) cv(t2) confint(t1) confint(t2) sd2_eh19p&lt;-svydesign(ids = ~1, weights = ~factor,data = eh19p) # pps t3&lt;-svymean(~p0,design=sd2_eh19p,na.rm=T) # proporciones / medias t1 t3 cv(t1)*100 cv(t3)*100 summary(lm(ylab~aestudio,data=eh19p)) # ingreso= B0+B1*aestudio+e OLS summary(lm(ylab~aestudio,data=eh19p,weights = factor )) # Minimos cuadrados ponderados m1&lt;-svyglm(ylab~aestudio,design=sd_eh19p) summary(m1) install.packages(&quot;jtools&quot;) library(jtools) summ(m1) psrsq(m1) # srvyr library(srvyr) sd3_eh19p&lt;-as_survey_design(sd_eh19p) sd_eh19p %&gt;% select(p0) %&gt;% svymean() sd3_eh19p %&gt;% summarise(survey_mean(s02a_03)) sd3_eh19p %&gt;% group_by(depto,area,s02a_02) %&gt;% summarise(m_edad=survey_mean(s02a_03)) sd3_eh19p %&gt;% group_by(depto,area,s02a_02) %&gt;% summarise(m_edad=survey_mean(s02a_03),m_ylab=survey_mean(ylab,na.rm=T)) # p0 sd3_eh19p %&gt;% group_by(depto) %&gt;% survey_tally() sd3_eh19p %&gt;% group_by(depto) %&gt;% survey_count() sd3_eh19p %&gt;% mutate(pobreza=p0==&quot;Pobre&quot;) %&gt;% summarise(p0=survey_mean(pobreza,na.rm=T)) sd3_eh19p %&gt;% mutate(pobreza=p0==&quot;Pobre&quot;) %&gt;% group_by(depto,area) %&gt;% summarise(p0=survey_mean(pobreza,na.rm=T),N=survey_total(pobreza,na.rm=T)) sd4_eh19p&lt;- eh19p %&gt;% as_survey_design(ids=c(upm,folio),strata=estrato,weights=factor) sd4_eh19p&lt;- eh19p %&gt;% as_survey_design(ids=upm,strata=estrato,weights=factor) sd4_eh19p %&gt;% mutate(pobreza=p0==&quot;Pobre&quot;) %&gt;% group_by(depto,area) %&gt;% summarise(p0=survey_mean(pobreza,na.rm=T,vartype = c(&quot;se&quot;, &quot;ci&quot;, &quot;var&quot;, &quot;cv&quot;),deff=T)) sd4_eh19p %&gt;% mutate(pobreza=p0==&quot;Pobre&quot;) %&gt;% summarise(p0=survey_mean(pobreza,na.rm=T,vartype = c(&quot;se&quot;, &quot;ci&quot;, &quot;var&quot;, &quot;cv&quot;),deff=T)) 1.7 Imputación de variables We should be suspicious of any dataset (large or small) which appears perfect. — David J. Hand 1.7.1 La falta de información es información MCAR missing completely at random MAR missing at random MNAR missing not at random 1.7.2 Aproximación formal Sea \\(Y\\) una matriz de datos con \\(n\\) observaciones y \\(p\\) variables. Sea \\(R\\) una matriz de respuesta binaria, tal que si \\(y_{ij}\\) es observada, entonces \\(r_{ij}=1\\). Los valores observados son colectados en \\(Y_{obs}\\), las observaciones perdidas en \\(Y_{mis}\\). Así, \\(Y=(Y_{obs},Y_{mis})\\). La distribución de \\(R\\) depende de \\(Y=(Y_{obs},Y_{mis})\\). Sea \\(\\psi\\) que contiene los parámetros del modelo de los datos perdidos, así la expresión del modelo de los datos perdidos es \\(\\Pr(R|Y_\\mathrm{obs},Y_\\mathrm{mis},\\psi)\\) 1.7.3 MCAR, MAR, MNAR MCAR (missing completely at random ) \\[ \\Pr(R=0|{\\mbox{$Y_\\mathrm{obs}$}},{\\mbox{$Y_\\mathrm{mis}$}},\\psi) = \\Pr(R=0|\\psi) \\] MAR (missing at random ) \\[ \\Pr(R=0|{\\mbox{$Y_\\mathrm{obs}$}},{\\mbox{$Y_\\mathrm{mis}$}},\\psi) = \\Pr(R=0|{\\mbox{$Y_\\mathrm{obs}$}},\\psi) \\] MNAR (missing not at random ) \\[ \\Pr(R=0|{\\mbox{$Y_\\mathrm{obs}$}},{\\mbox{$Y_\\mathrm{mis}$}},\\psi) \\] 1.7.4 Alternativas para trabajar con los Missings (Ad-hoc) Listwise deletion Pairwise deletion Mean imputation Regression imputation Stochastic regression imputation Last observation carried forward (LOCF) and baseline observation carried forward (BOCF) Indicator method 1.7.5 Imputación Multiple 1.7.6 Patrones en datos multivariados 1.7.7 Influx and outflux \\[ I_j = \\frac{\\sum_j^p\\sum_k^p\\sum_i^n (1-r_{ij})r_{ik}}{\\sum_k^p\\sum_i^n r_{ik}} \\] La variable con mayor influx está mejor conectada a los datos observados y, por lo tanto, podría ser más fácil de imputar. \\[ O_j = \\frac{\\sum_j^p\\sum_k^p\\sum_i^n r_{ij}(1-r_{ik})}{\\sum_k^p\\sum_i^n 1-r_{ij}} \\] La variable con mayor outflux está mejor conectada a los datos faltantes, por lo tanto, es potencialmente más útil para imputar otras variables. 1.7.8 Imputación de datos monótonos 1.7.9 Multivariate Imputation by Chained Equations (mice) (Imputación multivariante por ecuaciones encadenadas) 1.7.10 En R 1.7.10.1 Métodos ad-hoc Listwise deletion (trabajar solo con casos completos) table(is.na(airquality$Ozone)) ## ## FALSE TRUE ## 116 37 R&lt;-(!is.na(airquality))*1 mean(airquality$Ozone) ## [1] NA #listwise x&lt;-na.omit(airquality$Ozone) mean(x) ## [1] 42.12931 bd&lt;-airquality bd2&lt;-na.omit(bd) na.action(x) ## [1] 5 10 25 26 27 32 33 ## [8] 34 35 36 37 39 42 43 ## [15] 45 46 52 53 54 55 56 ## [22] 57 58 59 60 61 65 72 ## [29] 75 83 84 102 103 107 115 ## [36] 119 150 ## attr(,&quot;class&quot;) ## [1] &quot;omit&quot; na.action(bd2) ## 5 6 10 11 25 26 27 32 ## 5 6 10 11 25 26 27 32 ## 33 34 35 36 37 39 42 43 ## 33 34 35 36 37 39 42 43 ## 45 46 52 53 54 55 56 57 ## 45 46 52 53 54 55 56 57 ## 58 59 60 61 65 72 75 83 ## 58 59 60 61 65 72 75 83 ## 84 96 97 98 102 103 107 115 ## 84 96 97 98 102 103 107 115 ## 119 150 ## 119 150 ## attr(,&quot;class&quot;) ## [1] &quot;omit&quot; naprint(na.action(x)) ## [1] &quot;37 observations deleted due to missingness&quot; naprint(na.action(bd2)) ## [1] &quot;42 observations deleted due to missingness&quot; table(complete.cases(bd)) ## ## FALSE TRUE ## 42 111 ii&lt;-complete.cases(bd) bd[ii,] ## Ozone Solar.R Wind Temp Month ## 1 41 190 7.4 67 5 ## 2 36 118 8.0 72 5 ## 3 12 149 12.6 74 5 ## 4 18 313 11.5 62 5 ## 7 23 299 8.6 65 5 ## 8 19 99 13.8 59 5 ## 9 8 19 20.1 61 5 ## 12 16 256 9.7 69 5 ## 13 11 290 9.2 66 5 ## 14 14 274 10.9 68 5 ## 15 18 65 13.2 58 5 ## 16 14 334 11.5 64 5 ## 17 34 307 12.0 66 5 ## 18 6 78 18.4 57 5 ## 19 30 322 11.5 68 5 ## 20 11 44 9.7 62 5 ## 21 1 8 9.7 59 5 ## 22 11 320 16.6 73 5 ## 23 4 25 9.7 61 5 ## 24 32 92 12.0 61 5 ## 28 23 13 12.0 67 5 ## 29 45 252 14.9 81 5 ## 30 115 223 5.7 79 5 ## 31 37 279 7.4 76 5 ## 38 29 127 9.7 82 6 ## 40 71 291 13.8 90 6 ## 41 39 323 11.5 87 6 ## 44 23 148 8.0 82 6 ## 47 21 191 14.9 77 6 ## 48 37 284 20.7 72 6 ## 49 20 37 9.2 65 6 ## 50 12 120 11.5 73 6 ## 51 13 137 10.3 76 6 ## 62 135 269 4.1 84 7 ## 63 49 248 9.2 85 7 ## 64 32 236 9.2 81 7 ## 66 64 175 4.6 83 7 ## 67 40 314 10.9 83 7 ## 68 77 276 5.1 88 7 ## 69 97 267 6.3 92 7 ## 70 97 272 5.7 92 7 ## 71 85 175 7.4 89 7 ## 73 10 264 14.3 73 7 ## 74 27 175 14.9 81 7 ## 76 7 48 14.3 80 7 ## 77 48 260 6.9 81 7 ## 78 35 274 10.3 82 7 ## 79 61 285 6.3 84 7 ## 80 79 187 5.1 87 7 ## 81 63 220 11.5 85 7 ## 82 16 7 6.9 74 7 ## 85 80 294 8.6 86 7 ## 86 108 223 8.0 85 7 ## 87 20 81 8.6 82 7 ## 88 52 82 12.0 86 7 ## 89 82 213 7.4 88 7 ## 90 50 275 7.4 86 7 ## 91 64 253 7.4 83 7 ## 92 59 254 9.2 81 7 ## 93 39 83 6.9 81 8 ## 94 9 24 13.8 81 8 ## 95 16 77 7.4 82 8 ## 99 122 255 4.0 89 8 ## 100 89 229 10.3 90 8 ## 101 110 207 8.0 90 8 ## 104 44 192 11.5 86 8 ## 105 28 273 11.5 82 8 ## 106 65 157 9.7 80 8 ## 108 22 71 10.3 77 8 ## 109 59 51 6.3 79 8 ## 110 23 115 7.4 76 8 ## 111 31 244 10.9 78 8 ## 112 44 190 10.3 78 8 ## 113 21 259 15.5 77 8 ## 114 9 36 14.3 72 8 ## 116 45 212 9.7 79 8 ## 117 168 238 3.4 81 8 ## 118 73 215 8.0 86 8 ## 120 76 203 9.7 97 8 ## 121 118 225 2.3 94 8 ## 122 84 237 6.3 96 8 ## 123 85 188 6.3 94 8 ## 124 96 167 6.9 91 9 ## 125 78 197 5.1 92 9 ## 126 73 183 2.8 93 9 ## 127 91 189 4.6 93 9 ## 128 47 95 7.4 87 9 ## 129 32 92 15.5 84 9 ## 130 20 252 10.9 80 9 ## 131 23 220 10.3 78 9 ## 132 21 230 10.9 75 9 ## 133 24 259 9.7 73 9 ## 134 44 236 14.9 81 9 ## 135 21 259 15.5 76 9 ## 136 28 238 6.3 77 9 ## 137 9 24 10.9 71 9 ## 138 13 112 11.5 71 9 ## 139 46 237 6.9 78 9 ## 140 18 224 13.8 67 9 ## 141 13 27 10.3 76 9 ## 142 24 238 10.3 68 9 ## 143 16 201 8.0 82 9 ## 144 13 238 12.6 64 9 ## 145 23 14 9.2 71 9 ## 146 36 139 10.3 81 9 ## 147 7 49 10.3 69 9 ## 148 14 20 16.6 63 9 ## 149 30 193 6.9 70 9 ## 151 14 191 14.3 75 9 ## 152 18 131 8.0 76 9 ## 153 20 223 11.5 68 9 ## Day ## 1 1 ## 2 2 ## 3 3 ## 4 4 ## 7 7 ## 8 8 ## 9 9 ## 12 12 ## 13 13 ## 14 14 ## 15 15 ## 16 16 ## 17 17 ## 18 18 ## 19 19 ## 20 20 ## 21 21 ## 22 22 ## 23 23 ## 24 24 ## 28 28 ## 29 29 ## 30 30 ## 31 31 ## 38 7 ## 40 9 ## 41 10 ## 44 13 ## 47 16 ## 48 17 ## 49 18 ## 50 19 ## 51 20 ## 62 1 ## 63 2 ## 64 3 ## 66 5 ## 67 6 ## 68 7 ## 69 8 ## 70 9 ## 71 10 ## 73 12 ## 74 13 ## 76 15 ## 77 16 ## 78 17 ## 79 18 ## 80 19 ## 81 20 ## 82 21 ## 85 24 ## 86 25 ## 87 26 ## 88 27 ## 89 28 ## 90 29 ## 91 30 ## 92 31 ## 93 1 ## 94 2 ## 95 3 ## 99 7 ## 100 8 ## 101 9 ## 104 12 ## 105 13 ## 106 14 ## 108 16 ## 109 17 ## 110 18 ## 111 19 ## 112 20 ## 113 21 ## 114 22 ## 116 24 ## 117 25 ## 118 26 ## 120 28 ## 121 29 ## 122 30 ## 123 31 ## 124 1 ## 125 2 ## 126 3 ## 127 4 ## 128 5 ## 129 6 ## 130 7 ## 131 8 ## 132 9 ## 133 10 ## 134 11 ## 135 12 ## 136 13 ## 137 14 ## 138 15 ## 139 16 ## 140 17 ## 141 18 ## 142 19 ## 143 20 ## 144 21 ## 145 22 ## 146 23 ## 147 24 ## 148 25 ## 149 26 ## 151 28 ## 152 29 ## 153 30 Y_obs&lt;-na.omit(bd) Y_mis&lt;-mice::ic(bd) bd$Ozone[bd$Ozone==&quot;**&quot;]&lt;-NA #gsub recode table(R[,1],R[,2]) ## ## 0 1 ## 0 2 35 ## 1 5 111 chisq.test(table(R[,1],R[,2])) ## Warning in chisq.test(table(R[, 1], ## R[, 2])): Chi-squared approximation ## may be incorrect ## ## Pearson&#39;s Chi-squared test ## with Yates&#39; continuity ## correction ## ## data: table(R[, 1], R[, 2]) ## X-squared = 1.799e-29, df = 1, ## p-value = 1 apply(R,2,mean) ## Ozone Solar.R Wind ## 0.7581699 0.9542484 1.0000000 ## Temp Month Day ## 1.0000000 1.0000000 1.0000000 table(R[,1],R[,3]) ## ## 1 ## 0 37 ## 1 116 chisq.test(table(R[,1],R[,3])) ## ## Chi-squared test for given ## probabilities ## ## data: table(R[, 1], R[, 3]) ## X-squared = 40.791, df = 1, ## p-value = 1.694e-10 table(R[,1],R[,4]) ## ## 1 ## 0 37 ## 1 116 chisq.test(table(R[,1],R[,4])) ## ## Chi-squared test for given ## probabilities ## ## data: table(R[, 1], R[, 4]) ## X-squared = 40.791, df = 1, ## p-value = 1.694e-10 R&lt;-as.data.frame(R) m1&lt;-glm(Ozone~Solar.R,data = R,family = &quot;binomial&quot;) # logit summary(m1) ## ## Call: ## glm(formula = Ozone ~ Solar.R, family = &quot;binomial&quot;, data = R) ## ## Deviance Residuals: ## Min 1Q Median ## -1.6901 0.7404 0.7404 ## 3Q Max ## 0.7404 0.8203 ## ## Coefficients: ## Estimate Std. Error ## (Intercept) 0.9163 0.8367 ## Solar.R 0.2379 0.8588 ## z value Pr(&gt;|z|) ## (Intercept) 1.095 0.273 ## Solar.R 0.277 0.782 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 169.27 on 152 degrees of freedom ## Residual deviance: 169.20 on 151 degrees of freedom ## AIC: 173.2 ## ## Number of Fisher Scoring iterations: 4 summary(lm(Ozone~Solar.R,data=bd2)) ## ## Call: ## lm(formula = Ozone ~ Solar.R, data = bd2) ## ## Residuals: ## Min 1Q Median 3Q ## -48.292 -21.361 -8.864 16.373 ## Max ## 119.136 ## ## Coefficients: ## Estimate Std. Error ## (Intercept) 18.59873 6.74790 ## Solar.R 0.12717 0.03278 ## t value Pr(&gt;|t|) ## (Intercept) 2.756 0.006856 ** ## Solar.R 3.880 0.000179 *** ## --- ## Signif. codes: ## 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; ## 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 31.33 on 109 degrees of freedom ## Multiple R-squared: 0.1213, Adjusted R-squared: 0.1133 ## F-statistic: 15.05 on 1 and 109 DF, p-value: 0.0001793 Pairwise deletion (casos parciales) dim(na.omit(airquality[,1:2])) ## [1] 111 2 dim(na.omit(airquality[,c(1,3)])) ## [1] 116 2 dim(na.omit(airquality[,c(2,3)])) ## [1] 146 2 cor(na.omit(airquality[,c(2,3)])) ## Solar.R Wind ## Solar.R 1.00000000 -0.05679167 ## Wind -0.05679167 1.00000000 Mean imputation (MCAR) bd&lt;-airquality m1&lt;-mean(bd$Ozone,na.rm=T) bd$Ozone[is.na(bd$Ozone)]&lt;-m1 mean(bd$Ozone) ## [1] 42.12931 par(mfrow=c(1,2)) hist(airquality$Ozone) hist(bd$Ozone) par(mfrow=c(1,2)) plot(density(airquality$Ozone,na.rm=T)) plot(density(bd$Ozone,na.rm=T)) library(mice) imp &lt;- mice(airquality, method = &quot;mean&quot;, m = 1, maxit = 1) ## ## iter imp variable ## 1 1 Ozone Solar.R bdi&lt;-complete(imp) cor(na.omit(airquality[,1:2])) ## Ozone Solar.R ## Ozone 1.0000000 0.3483417 ## Solar.R 0.3483417 1.0000000 cor(bd[,1:2]) ## Ozone Solar.R ## Ozone 1 NA ## Solar.R NA 1 plot(airquality$Ozone,airquality$Solar.R) plot(bdi$Ozone,bdi$Solar.R) Regression imputation (MAR) \\[y_i=\\beta_0+\\beta_1 x_i+\\epsilon_i\\] \\[E[y/x]=\\beta_0+\\beta_1 x\\] fit &lt;- lm(Ozone ~ Solar.R, data = airquality) summary(fit) ## ## Call: ## lm(formula = Ozone ~ Solar.R, data = airquality) ## ## Residuals: ## Min 1Q Median 3Q ## -48.292 -21.361 -8.864 16.373 ## Max ## 119.136 ## ## Coefficients: ## Estimate Std. Error ## (Intercept) 18.59873 6.74790 ## Solar.R 0.12717 0.03278 ## t value Pr(&gt;|t|) ## (Intercept) 2.756 0.006856 ** ## Solar.R 3.880 0.000179 *** ## --- ## Signif. codes: ## 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; ## 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 31.33 on 109 degrees of freedom ## (42 observations deleted due to missingness) ## Multiple R-squared: 0.1213, Adjusted R-squared: 0.1133 ## F-statistic: 15.05 on 1 and 109 DF, p-value: 0.0001793 pred &lt;- predict(fit, newdata = ic(airquality)) #para el caso 10 18.599+0.127*194 ## [1] 43.237 data &lt;- airquality[, c(&quot;Ozone&quot;, &quot;Solar.R&quot;)] imp &lt;- mice(data, method = &quot;norm.predict&quot;, seed = 1, m = 1, print = FALSE) complete(imp) ## Ozone Solar.R ## 1 41.00000 190.0000 ## 2 36.00000 118.0000 ## 3 12.00000 149.0000 ## 4 18.00000 313.0000 ## 5 42.27981 185.9649 ## 6 28.00000 168.9457 ## 7 23.00000 299.0000 ## 8 19.00000 99.0000 ## 9 8.00000 19.0000 ## 10 43.32279 194.0000 ## 11 7.00000 143.9171 ## 12 16.00000 256.0000 ## 13 11.00000 290.0000 ## 14 14.00000 274.0000 ## 15 18.00000 65.0000 ## 16 14.00000 334.0000 ## 17 34.00000 307.0000 ## 18 6.00000 78.0000 ## 19 30.00000 322.0000 ## 20 11.00000 44.0000 ## 21 1.00000 8.0000 ## 22 11.00000 320.0000 ## 23 4.00000 25.0000 ## 24 32.00000 92.0000 ## 25 26.57468 66.0000 ## 26 52.74360 266.0000 ## 27 42.27706 185.9617 ## 28 23.00000 13.0000 ## 29 45.00000 252.0000 ## 30 115.00000 223.0000 ## 31 37.00000 279.0000 ## 32 55.36049 286.0000 ## 33 55.49133 287.0000 ## 34 49.60333 242.0000 ## 35 42.27603 186.0000 ## 36 46.72475 220.0000 ## 37 52.48191 264.0000 ## 38 29.00000 127.0000 ## 39 53.65951 273.0000 ## 40 71.00000 291.0000 ## 41 39.00000 323.0000 ## 42 51.82769 259.0000 ## 43 50.65008 250.0000 ## 44 23.00000 148.0000 ## 45 61.37934 332.0000 ## 46 60.07089 322.0000 ## 47 21.00000 191.0000 ## 48 37.00000 284.0000 ## 49 20.00000 37.0000 ## 50 12.00000 120.0000 ## 51 13.00000 137.0000 ## 52 37.56563 150.0000 ## 53 25.65877 59.0000 ## 54 29.84580 91.0000 ## 55 50.65008 250.0000 ## 56 35.60296 135.0000 ## 57 34.55620 127.0000 ## 58 24.08864 47.0000 ## 59 30.76171 98.0000 ## 60 21.99512 31.0000 ## 61 35.99549 138.0000 ## 62 135.00000 269.0000 ## 63 49.00000 248.0000 ## 64 32.00000 236.0000 ## 65 31.15424 101.0000 ## 66 64.00000 175.0000 ## 67 40.00000 314.0000 ## 68 77.00000 276.0000 ## 69 97.00000 267.0000 ## 70 97.00000 272.0000 ## 71 85.00000 175.0000 ## 72 36.12634 139.0000 ## 73 10.00000 264.0000 ## 74 27.00000 175.0000 ## 75 56.01471 291.0000 ## 76 7.00000 48.0000 ## 77 48.00000 260.0000 ## 78 35.00000 274.0000 ## 79 61.00000 285.0000 ## 80 79.00000 187.0000 ## 81 63.00000 220.0000 ## 82 16.00000 7.0000 ## 83 51.69684 258.0000 ## 84 56.53809 295.0000 ## 85 80.00000 294.0000 ## 86 108.00000 223.0000 ## 87 20.00000 81.0000 ## 88 52.00000 82.0000 ## 89 82.00000 213.0000 ## 90 50.00000 275.0000 ## 91 64.00000 253.0000 ## 92 59.00000 254.0000 ## 93 39.00000 83.0000 ## 94 9.00000 24.0000 ## 95 16.00000 77.0000 ## 96 78.00000 228.5377 ## 97 35.00000 177.2886 ## 98 66.00000 214.2356 ## 99 122.00000 255.0000 ## 100 89.00000 229.0000 ## 101 110.00000 207.0000 ## 102 46.98644 222.0000 ## 103 35.86465 137.0000 ## 104 44.00000 192.0000 ## 105 28.00000 273.0000 ## 106 65.00000 157.0000 ## 107 26.31299 64.0000 ## 108 22.00000 71.0000 ## 109 59.00000 51.0000 ## 110 23.00000 115.0000 ## 111 31.00000 244.0000 ## 112 44.00000 190.0000 ## 113 21.00000 259.0000 ## 114 9.00000 36.0000 ## 115 51.30431 255.0000 ## 116 45.00000 212.0000 ## 117 168.00000 238.0000 ## 118 73.00000 215.0000 ## 119 37.95816 153.0000 ## 120 76.00000 203.0000 ## 121 118.00000 225.0000 ## 122 84.00000 237.0000 ## 123 85.00000 188.0000 ## 124 96.00000 167.0000 ## 125 78.00000 197.0000 ## 126 73.00000 183.0000 ## 127 91.00000 189.0000 ## 128 47.00000 95.0000 ## 129 32.00000 92.0000 ## 130 20.00000 252.0000 ## 131 23.00000 220.0000 ## 132 21.00000 230.0000 ## 133 24.00000 259.0000 ## 134 44.00000 236.0000 ## 135 21.00000 259.0000 ## 136 28.00000 238.0000 ## 137 9.00000 24.0000 ## 138 13.00000 112.0000 ## 139 46.00000 237.0000 ## 140 18.00000 224.0000 ## 141 13.00000 27.0000 ## 142 24.00000 238.0000 ## 143 16.00000 201.0000 ## 144 13.00000 238.0000 ## 145 23.00000 14.0000 ## 146 36.00000 139.0000 ## 147 7.00000 49.0000 ## 148 14.00000 20.0000 ## 149 30.00000 193.0000 ## 150 36.91140 145.0000 ## 151 14.00000 191.0000 ## 152 18.00000 131.0000 ## 153 20.00000 223.0000 plot(airquality[,1:2]) plot(complete(imp)[,1:2]) cor(na.omit(airquality[,1:2])) ## Ozone Solar.R ## Ozone 1.0000000 0.3483417 ## Solar.R 0.3483417 1.0000000 cor(complete(imp)[,1:2]) ## Ozone Solar.R ## Ozone 1.0000000 0.3948995 ## Solar.R 0.3948995 1.0000000 Stochastic regression imputation (MAR) \\[y_i=\\hat{\\beta_0}+\\hat{\\beta_1} x_i+\\hat{\\epsilon_i}\\] data &lt;- airquality[, c(&quot;Ozone&quot;, &quot;Solar.R&quot;)] imp &lt;- mice(data, method = &quot;norm.nob&quot;, m = 1, maxit = 1, seed = 1, print = FALSE) complete(imp) ## Ozone Solar.R ## 1 41.0000000 190.00000 ## 2 36.0000000 118.00000 ## 3 12.0000000 149.00000 ## 4 18.0000000 313.00000 ## 5 93.1901074 230.44150 ## 6 28.0000000 103.66507 ## 7 23.0000000 299.00000 ## 8 19.0000000 99.00000 ## 9 8.0000000 19.00000 ## 10 21.8114143 194.00000 ## 11 7.0000000 169.74746 ## 12 16.0000000 256.00000 ## 13 11.0000000 290.00000 ## 14 14.0000000 274.00000 ## 15 18.0000000 65.00000 ## 16 14.0000000 334.00000 ## 17 34.0000000 307.00000 ## 18 6.0000000 78.00000 ## 19 30.0000000 322.00000 ## 20 11.0000000 44.00000 ## 21 1.0000000 8.00000 ## 22 11.0000000 320.00000 ## 23 4.0000000 25.00000 ## 24 32.0000000 92.00000 ## 25 -12.5439113 66.00000 ## 26 53.7714213 266.00000 ## 27 47.1516807 72.91707 ## 28 23.0000000 13.00000 ## 29 45.0000000 252.00000 ## 30 115.0000000 223.00000 ## 31 37.0000000 279.00000 ## 32 37.7852286 286.00000 ## 33 41.3376364 287.00000 ## 34 29.0262061 242.00000 ## 35 65.1911154 186.00000 ## 36 82.6871079 220.00000 ## 37 83.1114195 264.00000 ## 38 29.0000000 127.00000 ## 39 39.7307790 273.00000 ## 40 71.0000000 291.00000 ## 41 39.0000000 323.00000 ## 42 90.1979525 259.00000 ## 43 41.5950585 250.00000 ## 44 23.0000000 148.00000 ## 45 115.4565706 332.00000 ## 46 76.7599696 322.00000 ## 47 21.0000000 191.00000 ## 48 37.0000000 284.00000 ## 49 20.0000000 37.00000 ## 50 12.0000000 120.00000 ## 51 13.0000000 137.00000 ## 52 23.8411395 150.00000 ## 53 0.7555855 59.00000 ## 54 -5.7687193 91.00000 ## 55 16.9902402 250.00000 ## 56 -12.7755115 135.00000 ## 57 71.3683543 127.00000 ## 58 51.3526593 47.00000 ## 59 24.4868657 98.00000 ## 60 31.6708004 31.00000 ## 61 24.7428741 138.00000 ## 62 135.0000000 269.00000 ## 63 49.0000000 248.00000 ## 64 32.0000000 236.00000 ## 65 108.3710476 101.00000 ## 66 64.0000000 175.00000 ## 67 40.0000000 314.00000 ## 68 77.0000000 276.00000 ## 69 97.0000000 267.00000 ## 70 97.0000000 272.00000 ## 71 85.0000000 175.00000 ## 72 11.7652825 139.00000 ## 73 10.0000000 264.00000 ## 74 27.0000000 175.00000 ## 75 53.6734104 291.00000 ## 76 7.0000000 48.00000 ## 77 48.0000000 260.00000 ## 78 35.0000000 274.00000 ## 79 61.0000000 285.00000 ## 80 79.0000000 187.00000 ## 81 63.0000000 220.00000 ## 82 16.0000000 7.00000 ## 83 59.1510109 258.00000 ## 84 75.2311817 295.00000 ## 85 80.0000000 294.00000 ## 86 108.0000000 223.00000 ## 87 20.0000000 81.00000 ## 88 52.0000000 82.00000 ## 89 82.0000000 213.00000 ## 90 50.0000000 275.00000 ## 91 64.0000000 253.00000 ## 92 59.0000000 254.00000 ## 93 39.0000000 83.00000 ## 94 9.0000000 24.00000 ## 95 16.0000000 77.00000 ## 96 78.0000000 254.64941 ## 97 35.0000000 199.67614 ## 98 66.0000000 216.97628 ## 99 122.0000000 255.00000 ## 100 89.0000000 229.00000 ## 101 110.0000000 207.00000 ## 102 41.4834780 222.00000 ## 103 -33.1867993 137.00000 ## 104 44.0000000 192.00000 ## 105 28.0000000 273.00000 ## 106 65.0000000 157.00000 ## 107 -12.1337321 64.00000 ## 108 22.0000000 71.00000 ## 109 59.0000000 51.00000 ## 110 23.0000000 115.00000 ## 111 31.0000000 244.00000 ## 112 44.0000000 190.00000 ## 113 21.0000000 259.00000 ## 114 9.0000000 36.00000 ## 115 62.1793726 255.00000 ## 116 45.0000000 212.00000 ## 117 168.0000000 238.00000 ## 118 73.0000000 215.00000 ## 119 38.0347443 153.00000 ## 120 76.0000000 203.00000 ## 121 118.0000000 225.00000 ## 122 84.0000000 237.00000 ## 123 85.0000000 188.00000 ## 124 96.0000000 167.00000 ## 125 78.0000000 197.00000 ## 126 73.0000000 183.00000 ## 127 91.0000000 189.00000 ## 128 47.0000000 95.00000 ## 129 32.0000000 92.00000 ## 130 20.0000000 252.00000 ## 131 23.0000000 220.00000 ## 132 21.0000000 230.00000 ## 133 24.0000000 259.00000 ## 134 44.0000000 236.00000 ## 135 21.0000000 259.00000 ## 136 28.0000000 238.00000 ## 137 9.0000000 24.00000 ## 138 13.0000000 112.00000 ## 139 46.0000000 237.00000 ## 140 18.0000000 224.00000 ## 141 13.0000000 27.00000 ## 142 24.0000000 238.00000 ## 143 16.0000000 201.00000 ## 144 13.0000000 238.00000 ## 145 23.0000000 14.00000 ## 146 36.0000000 139.00000 ## 147 7.0000000 49.00000 ## 148 14.0000000 20.00000 ## 149 30.0000000 193.00000 ## 150 7.9575138 145.00000 ## 151 14.0000000 191.00000 ## 152 18.0000000 131.00000 ## 153 20.0000000 223.00000 plot(airquality[,1:2]) plot(complete(imp)[,1:2]) cor(na.omit(airquality[,1:2])) ## Ozone Solar.R ## Ozone 1.0000000 0.3483417 ## Solar.R 0.3483417 1.0000000 cor(complete(imp)[,1:2]) ## Ozone Solar.R ## Ozone 1.0000000 0.3964026 ## Solar.R 0.3964026 1.0000000 plot(density(airquality$Ozone,na.rm=T)) plot(density(complete(imp)[,1],na.rm=T)) plot(density(airquality$Solar.R,na.rm=T)) plot(density(complete(imp)[,2],na.rm=T)) imp&lt;-mice(airquality, method = &quot;norm.nob&quot;, m = 1, maxit = 1, seed = 1, print = FALSE) complete(imp) ## Ozone Solar.R Wind ## 1 41.0000000 190.000000 7.4 ## 2 36.0000000 118.000000 8.0 ## 3 12.0000000 149.000000 12.6 ## 4 18.0000000 313.000000 11.5 ## 5 20.5007386 174.406477 14.3 ## 6 28.0000000 140.047720 14.9 ## 7 23.0000000 299.000000 8.6 ## 8 19.0000000 99.000000 13.8 ## 9 8.0000000 19.000000 20.1 ## 10 19.9813337 194.000000 8.6 ## 11 7.0000000 175.896881 6.9 ## 12 16.0000000 256.000000 9.7 ## 13 11.0000000 290.000000 9.2 ## 14 14.0000000 274.000000 10.9 ## 15 18.0000000 65.000000 13.2 ## 16 14.0000000 334.000000 11.5 ## 17 34.0000000 307.000000 12.0 ## 18 6.0000000 78.000000 18.4 ## 19 30.0000000 322.000000 11.5 ## 20 11.0000000 44.000000 9.7 ## 21 1.0000000 8.000000 9.7 ## 22 11.0000000 320.000000 16.6 ## 23 4.0000000 25.000000 9.7 ## 24 32.0000000 92.000000 12.0 ## 25 -43.0343740 66.000000 16.6 ## 26 3.3396801 266.000000 14.9 ## 27 18.3933655 8.744525 8.0 ## 28 23.0000000 13.000000 12.0 ## 29 45.0000000 252.000000 14.9 ## 30 115.0000000 223.000000 5.7 ## 31 37.0000000 279.000000 7.4 ## 32 39.7516986 286.000000 8.6 ## 33 31.3839433 287.000000 9.7 ## 34 -8.6316915 242.000000 16.1 ## 35 71.4038792 186.000000 9.2 ## 36 86.2547074 220.000000 8.6 ## 37 56.3247528 264.000000 14.3 ## 38 29.0000000 127.000000 9.7 ## 39 65.7382192 273.000000 6.9 ## 40 71.0000000 291.000000 13.8 ## 41 39.0000000 323.000000 11.5 ## 42 99.7663357 259.000000 10.9 ## 43 71.0135556 250.000000 9.2 ## 44 23.0000000 148.000000 8.0 ## 45 81.8344779 332.000000 13.8 ## 46 61.6649678 322.000000 11.5 ## 47 21.0000000 191.000000 14.9 ## 48 37.0000000 284.000000 20.7 ## 49 20.0000000 37.000000 9.2 ## 50 12.0000000 120.000000 11.5 ## 51 13.0000000 137.000000 10.3 ## 52 45.2131440 150.000000 6.3 ## 53 45.1192943 59.000000 1.7 ## 54 30.9805688 91.000000 4.6 ## 55 36.6503552 250.000000 6.3 ## 56 12.9901939 135.000000 8.0 ## 57 75.8450620 127.000000 8.0 ## 58 48.2955351 47.000000 10.3 ## 59 38.4690813 98.000000 11.5 ## 60 29.1923696 31.000000 14.9 ## 61 54.6909678 138.000000 8.0 ## 62 135.0000000 269.000000 4.1 ## 63 49.0000000 248.000000 9.2 ## 64 32.0000000 236.000000 9.2 ## 65 94.7972277 101.000000 10.9 ## 66 64.0000000 175.000000 4.6 ## 67 40.0000000 314.000000 10.9 ## 68 77.0000000 276.000000 5.1 ## 69 97.0000000 267.000000 6.3 ## 70 97.0000000 272.000000 5.7 ## 71 85.0000000 175.000000 7.4 ## 72 34.0203036 139.000000 8.6 ## 73 10.0000000 264.000000 14.3 ## 74 27.0000000 175.000000 14.9 ## 75 55.9305086 291.000000 14.9 ## 76 7.0000000 48.000000 14.3 ## 77 48.0000000 260.000000 6.9 ## 78 35.0000000 274.000000 10.3 ## 79 61.0000000 285.000000 6.3 ## 80 79.0000000 187.000000 5.1 ## 81 63.0000000 220.000000 11.5 ## 82 16.0000000 7.000000 6.9 ## 83 60.2221568 258.000000 9.7 ## 84 66.5040195 295.000000 11.5 ## 85 80.0000000 294.000000 8.6 ## 86 108.0000000 223.000000 8.0 ## 87 20.0000000 81.000000 8.6 ## 88 52.0000000 82.000000 12.0 ## 89 82.0000000 213.000000 7.4 ## 90 50.0000000 275.000000 7.4 ## 91 64.0000000 253.000000 7.4 ## 92 59.0000000 254.000000 9.2 ## 93 39.0000000 83.000000 6.9 ## 94 9.0000000 24.000000 13.8 ## 95 16.0000000 77.000000 7.4 ## 96 78.0000000 252.798784 6.9 ## 97 35.0000000 201.411206 7.4 ## 98 66.0000000 204.435959 4.6 ## 99 122.0000000 255.000000 4.0 ## 100 89.0000000 229.000000 10.3 ## 101 110.0000000 207.000000 8.0 ## 102 67.4342874 222.000000 8.6 ## 103 -0.5541087 137.000000 11.5 ## 104 44.0000000 192.000000 11.5 ## 105 28.0000000 273.000000 11.5 ## 106 65.0000000 157.000000 9.7 ## 107 3.6275851 64.000000 11.5 ## 108 22.0000000 71.000000 10.3 ## 109 59.0000000 51.000000 6.3 ## 110 23.0000000 115.000000 7.4 ## 111 31.0000000 244.000000 10.9 ## 112 44.0000000 190.000000 10.3 ## 113 21.0000000 259.000000 15.5 ## 114 9.0000000 36.000000 14.3 ## 115 39.3715767 255.000000 12.6 ## 116 45.0000000 212.000000 9.7 ## 117 168.0000000 238.000000 3.4 ## 118 73.0000000 215.000000 8.0 ## 119 73.3973647 153.000000 5.7 ## 120 76.0000000 203.000000 9.7 ## 121 118.0000000 225.000000 2.3 ## 122 84.0000000 237.000000 6.3 ## 123 85.0000000 188.000000 6.3 ## 124 96.0000000 167.000000 6.9 ## 125 78.0000000 197.000000 5.1 ## 126 73.0000000 183.000000 2.8 ## 127 91.0000000 189.000000 4.6 ## 128 47.0000000 95.000000 7.4 ## 129 32.0000000 92.000000 15.5 ## 130 20.0000000 252.000000 10.9 ## 131 23.0000000 220.000000 10.3 ## 132 21.0000000 230.000000 10.9 ## 133 24.0000000 259.000000 9.7 ## 134 44.0000000 236.000000 14.9 ## 135 21.0000000 259.000000 15.5 ## 136 28.0000000 238.000000 6.3 ## 137 9.0000000 24.000000 10.9 ## 138 13.0000000 112.000000 11.5 ## 139 46.0000000 237.000000 6.9 ## 140 18.0000000 224.000000 13.8 ## 141 13.0000000 27.000000 10.3 ## 142 24.0000000 238.000000 10.3 ## 143 16.0000000 201.000000 8.0 ## 144 13.0000000 238.000000 12.6 ## 145 23.0000000 14.000000 9.2 ## 146 36.0000000 139.000000 10.3 ## 147 7.0000000 49.000000 10.3 ## 148 14.0000000 20.000000 16.6 ## 149 30.0000000 193.000000 6.9 ## 150 6.2345801 145.000000 13.2 ## 151 14.0000000 191.000000 14.3 ## 152 18.0000000 131.000000 8.0 ## 153 20.0000000 223.000000 11.5 ## Temp Month Day ## 1 67 5 1 ## 2 72 5 2 ## 3 74 5 3 ## 4 62 5 4 ## 5 56 5 5 ## 6 66 5 6 ## 7 65 5 7 ## 8 59 5 8 ## 9 61 5 9 ## 10 69 5 10 ## 11 74 5 11 ## 12 69 5 12 ## 13 66 5 13 ## 14 68 5 14 ## 15 58 5 15 ## 16 64 5 16 ## 17 66 5 17 ## 18 57 5 18 ## 19 68 5 19 ## 20 62 5 20 ## 21 59 5 21 ## 22 73 5 22 ## 23 61 5 23 ## 24 61 5 24 ## 25 57 5 25 ## 26 58 5 26 ## 27 57 5 27 ## 28 67 5 28 ## 29 81 5 29 ## 30 79 5 30 ## 31 76 5 31 ## 32 78 6 1 ## 33 74 6 2 ## 34 67 6 3 ## 35 84 6 4 ## 36 85 6 5 ## 37 79 6 6 ## 38 82 6 7 ## 39 87 6 8 ## 40 90 6 9 ## 41 87 6 10 ## 42 93 6 11 ## 43 92 6 12 ## 44 82 6 13 ## 45 80 6 14 ## 46 79 6 15 ## 47 77 6 16 ## 48 72 6 17 ## 49 65 6 18 ## 50 73 6 19 ## 51 76 6 20 ## 52 77 6 21 ## 53 76 6 22 ## 54 76 6 23 ## 55 76 6 24 ## 56 75 6 25 ## 57 78 6 26 ## 58 73 6 27 ## 59 80 6 28 ## 60 77 6 29 ## 61 83 6 30 ## 62 84 7 1 ## 63 85 7 2 ## 64 81 7 3 ## 65 84 7 4 ## 66 83 7 5 ## 67 83 7 6 ## 68 88 7 7 ## 69 92 7 8 ## 70 92 7 9 ## 71 89 7 10 ## 72 82 7 11 ## 73 73 7 12 ## 74 81 7 13 ## 75 91 7 14 ## 76 80 7 15 ## 77 81 7 16 ## 78 82 7 17 ## 79 84 7 18 ## 80 87 7 19 ## 81 85 7 20 ## 82 74 7 21 ## 83 81 7 22 ## 84 82 7 23 ## 85 86 7 24 ## 86 85 7 25 ## 87 82 7 26 ## 88 86 7 27 ## 89 88 7 28 ## 90 86 7 29 ## 91 83 7 30 ## 92 81 7 31 ## 93 81 8 1 ## 94 81 8 2 ## 95 82 8 3 ## 96 86 8 4 ## 97 85 8 5 ## 98 87 8 6 ## 99 89 8 7 ## 100 90 8 8 ## 101 90 8 9 ## 102 92 8 10 ## 103 86 8 11 ## 104 86 8 12 ## 105 82 8 13 ## 106 80 8 14 ## 107 79 8 15 ## 108 77 8 16 ## 109 79 8 17 ## 110 76 8 18 ## 111 78 8 19 ## 112 78 8 20 ## 113 77 8 21 ## 114 72 8 22 ## 115 75 8 23 ## 116 79 8 24 ## 117 81 8 25 ## 118 86 8 26 ## 119 88 8 27 ## 120 97 8 28 ## 121 94 8 29 ## 122 96 8 30 ## 123 94 8 31 ## 124 91 9 1 ## 125 92 9 2 ## 126 93 9 3 ## 127 93 9 4 ## 128 87 9 5 ## 129 84 9 6 ## 130 80 9 7 ## 131 78 9 8 ## 132 75 9 9 ## 133 73 9 10 ## 134 81 9 11 ## 135 76 9 12 ## 136 77 9 13 ## 137 71 9 14 ## 138 71 9 15 ## 139 78 9 16 ## 140 67 9 17 ## 141 76 9 18 ## 142 68 9 19 ## 143 82 9 20 ## 144 64 9 21 ## 145 71 9 22 ## 146 81 9 23 ## 147 69 9 24 ## 148 63 9 25 ## 149 70 9 26 ## 150 77 9 27 ## 151 75 9 28 ## 152 76 9 29 ## 153 68 9 30 md.pattern(airquality, plot = T) ## Wind Temp Month Day Solar.R ## 111 1 1 1 1 1 ## 35 1 1 1 1 1 ## 5 1 1 1 1 0 ## 2 1 1 1 1 0 ## 0 0 0 0 7 ## Ozone ## 111 1 0 ## 35 0 1 ## 5 1 1 ## 2 0 2 ## 37 44 flux(airquality)[,1:3] ## pobs influx ## Ozone 0.7581699 0.20938215 ## Solar.R 0.9542484 0.03775744 ## Wind 1.0000000 0.00000000 ## Temp 1.0000000 0.00000000 ## Month 1.0000000 0.00000000 ## Day 1.0000000 0.00000000 ## outflux ## Ozone 0.1136364 ## Solar.R 0.7954545 ## Wind 1.0000000 ## Temp 1.0000000 ## Month 1.0000000 ## Day 1.0000000 "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
