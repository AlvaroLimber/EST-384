train<-bd2[,-c("ylab")]
train<-bd2[,c("ylab")]
train<-bd2[,-c("ylab")]
names(bd2)
train<-bd2[,-"ylab"]
bd2[,-"ylab"]
bd2[,-"ylab"]
bd2[,"ylab"]
bd2[,c("ylab")]
bd2[,-c("ylab")]
bd2[,-5]
train<-bd2[,-5]
predict.lm()
?predict.lm()
predict(model,train,)
predict(model,train)
yest<-predict(model,train)
train<-bd2
names(train)
train<-bd2
yest<-predict(model,train)
plot(bd2$ylab,yest)
plot(bd2$ylab,yest)
names(eh18p)
eh18p<-eh18p %>% mutate(diabetes=(s04a_01a==aux[1] | s04a_01b==aux[1]),corazon=(s04a_01a==aux[4] | s04a_01b==aux[4]),hiper=(s04a_01a==aux[10] | s04a_01b==aux[10]))
eh18p$diabetes<-(eh18p$diabetes==T); eh18p$diabetes[is.na(eh18p$diabetes)]<-F
eh18p$corazon<-(eh18p$corazon==T); eh18p$corazon[is.na(eh18p$corazon)]<-F
eh18p$hiper<-(eh18p$hiper==T); eh18p$hiper[is.na(eh18p$hiper)]<-F
eh18p$cronicas<-(eh18p$diabetes+eh18p$corazon+eh18p$hiper)
load("C:\\Users\\ALVARO\\Documents\\GitHub\\EST-384\\data\\eh18.Rdata")
eh18p<-eh18p %>% mutate(diabetes=(s04a_01a==aux[1] | s04a_01b==aux[1]),corazon=(s04a_01a==aux[4] | s04a_01b==aux[4]),hiper=(s04a_01a==aux[10] | s04a_01b==aux[10]))
load("C:\\Users\\ALVARO\\Documents\\GitHub\\EST-384\\data\\eh18.Rdata")
aux<-levels(eh18p$s04a_01a)
eh18p<-eh18p %>% mutate(diabetes=(s04a_01a==aux[1] | s04a_01b==aux[1]),corazon=(s04a_01a==aux[4] | s04a_01b==aux[4]),hiper=(s04a_01a==aux[10] | s04a_01b==aux[10]))
eh18p$diabetes<-(eh18p$diabetes==T); eh18p$diabetes[is.na(eh18p$diabetes)]<-F
eh18p$corazon<-(eh18p$corazon==T); eh18p$corazon[is.na(eh18p$corazon)]<-F
eh18p$hiper<-(eh18p$hiper==T); eh18p$hiper[is.na(eh18p$hiper)]<-F
eh18p$cronicas<-(eh18p$diabetes+eh18p$corazon+eh18p$hiper)
#modelo para las enfermedades crónicas
table(eh18p$cronicas)
#modelo para las enfermedades crónicas
eh18p$cronicas!=0
#modelo para las enfermedades crónicas
eh18$cronoicas<-eh18p$cronicas!=0
#modelo para las enfermedades crónicas
eh18p$cronoicas<-eh18p$cronicas!=0
glm(cronicas~s02a_02+s02a_03,data=eh18p)
glm(cronicas~s02a_02+s02a_03,data=eh18p,family = binomial=(link="logit"))
glm(cronicas~s02a_02+s02a_03,data=eh18p,family = binomial(link="logit"))
glm(cronicas*1~s02a_02+s02a_03,data=eh18p,family = binomial(link="logit"))
#modelo para las enfermedades crónicas
eh18p$cronoicas<-eh18p$cronicas!=0
glm(cronicas*1~s02a_02+s02a_03,data=eh18p,family = binomial(link="logit"))
table(eh18p$cronicas)
#modelo para las enfermedades crónicas
eh18p$cronicas<-(eh18p$cronicas!=0)
glm(cronicas*1~s02a_02+s02a_03,data=eh18p,family = binomial(link="logit"))
logit<-glm(cronicas*1~s02a_02+s02a_03,data=eh18p,family = binomial(link="probit"))
probit<-glm(cronicas*1~s02a_02+s02a_03,data=eh18p,family = binomial(link="probit"))
logit<-glm(cronicas*1~s02a_02+s02a_03,data=eh18p,family = binomial(link="logit"))
probit<-glm(cronicas*1~s02a_02+s02a_03,data=eh18p,family = binomial(link="probit"))
summary(logit)
summary(probit)
summary(logit)
summary(probit)
summary(probit)
summary(logit)
#score probabilidades
predict(logit,eh18p,type="response")
predict(probit,eh18p,type="response")
plot(density(lres))
#score probabilidades
lres<-predict(logit,eh18p,type="response")
pres<-predict(probit,eh18p,type="response")
plot(density(lres))
points(density(pres),type = "l",col="red")
plot(density(lres))
points(density(pres),type = "l",col="red")
install.packages("mfx")
#efectos marginales
library(mfx)
probitmfx(probit)
probitmfx(cronicas*1~s02a_02+s02a_03,data=eh18p)
logitmfx(cronicas*1~s02a_02+s02a_03,data=eh18p)
probitmfx(cronicas*1~s02a_02+s02a_03,data=eh18p)
install.packages("DescTools")
#ajuste
library(DescTools)
PseudoR2(logit)
PseudoR2(probit)
library(memisc)
install.packages("memisc")
library(memisc)
mtable(logit,probit)
?mtable(logit,probit)
mtable(logit,probit,summary.stats = T)
mtable(logit,probit,summary.stats = F)
mtable(logit,probit,summary.stats = T)
lineal<-lm(cronicas*1~s02a_02+s02a_03,data=eh18p)
mtable(logit,probit,lineal,summary.stats = T)
mtable(logit,probit,lineal,summary.stats = T)
mtable(logit,probit)
library(dplyr)
load("C:\\Users\\ALVARO\\Documents\\GitHub\\EST-384\\data\\eh18.Rdata")
bd<-eh18p %>% filter(s02a_03>=18 & s02a_05=="1.JEFE O JEFA DEL HOGAR" & ocupado=="Si") %>% select(s02a_02,s02a_03,aestudio,tothrs,ylab,ynolab,factor,estrato, upm,area,permanente,cob_op)
m1<-lm(ylab~s02a_03,data=bd)# regresión lineal simple y=f(x)
m1
plot(bd$s02a_03,bd$ylab)
abline(m1,col="red",lwd=2)
summary(m1)
#en los betas
coefficients(m1)
confint(m1,level=0.99)
#mejorar el modelo
m2<-lm(ylab~s02a_03+aestudio+tothrs+ynolab+s02a_02+area+cob_op,data=bd)
summary(m2)
m3<-lm(log(ylab)~s02a_03+aestudio+tothrs+ynolab+s02a_02+area+cob_op,data=bd)
summary(m3)
m4<-lm(log(ylab)~s02a_03+factor(aestudio)+tothrs+ynolab+s02a_02+area+cob_op,data=bd)
summary(m4)
m5<-lm(log(ylab)~.,data=bd[,-c(7,8,9,11)])
summary(m5)
m6<-step(m5)
summary(m6)
m6
(coefficients(m6))
length(coefficients(m5))
summary(lm(log(ylab)~factor(aestudio)+s02a_02+s02a_03
,weights = factor ,data=bd))#MCP
#Supuestos del modelo
## los errores se distribuyen normal(media=0, varianza=constante)
## Independencia entre los X del modelo
# los errores se distribuyen normal
model<-lm(scale(ylab)~s02a_03+aestudio+tothrs+ynolab+s02a_02+area+cob_op,data=bd)
#Supuestos del modelo
## los errores se distribuyen normal(media=0, varianza=constante)
## Independencia entre los X del modelo
# los errores se distribuyen normal
model<-lm(log(ylab)~s02a_03+aestudio+tothrs+ynolab+s02a_02+area+cob_op,data=bd)
summary(model)
par(mfrow=c(2,2))
plot(model)
ee<-residuals(model)
plot(density(ee))
dev.off()
ee<-residuals(model)
plot(density(ee))
#H0 x ~ normal()
library(normtest)
library(nortest)
ad.test(ee)
lillie.test(ee)
boxplot(bd$ylab)
ad.test(ee)
lillie.test(ee)
#La normalidad de los errores
plot(density(ee))
curve(dnorm(x,mean(ee),sd(ee)),add=T,col="red")
boxplot(bd$ylab)
#limitar los datos hasta el percentil
punto<-c(0.01,0.90)
z<-quantile(bd$ylab,punto,na.rm=T)
z
#limitar los datos hasta el percentil
punto<-c(0.01,0.95)
z<-quantile(bd$ylab,punto,na.rm=T)
z
boxplot(bd$ylab)
z
bd2<-bd %>% filter(ylab<z[2] & ylab>z[1])
model1<-lm(log(ylab)~s02a_03+aestudio+tothrs+ynolab+s02a_02+area+cob_op,data=bd2)
summary(model1)
summary(model)
summary(model1)
#limitar los datos hasta el percentil
punto<-c(0.1,0.9)
z<-quantile(bd$ylab,punto,na.rm=T)
z
bd2<-bd %>% filter(ylab<z[2] & ylab>z[1])
#definiendo el modelo sin atípicos
model1<-lm(log(ylab)~s02a_03+aestudio+tothrs+ynolab+s02a_02+area+cob_op,data=bd2)
summary(model)
summary(model1)
#limitar los datos hasta el percentil
punto<-c(0.01,0.90)
z<-quantile(bd$ylab,punto,na.rm=T)
z
bd2<-bd %>% filter(ylab<z[2] & ylab>z[1])
#definiendo el modelo sin atípicos
model1<-lm(log(ylab)~s02a_03+aestudio+tothrs+ynolab+s02a_02+area+cob_op,data=bd2)
summary(model)
summary(model1)
#limitar los datos hasta el percentil
punto<-c(0.01,0.90)
z<-quantile(bd$ylab,punto,na.rm=T)
z
bd2<-bd %>% filter(ylab<z[2] & ylab>z[1])
#definiendo el modelo sin atípicos
model1<-lm(log(ylab)~s02a_03+aestudio+tothrs+ynolab+s02a_02+area+cob_op,data=bd2)
summary(model)
summary(model1)
boxplot(bd2$ylab)
ee<-residuals(model1)
ad.test(ee)
lillie.test(ee)
#Supuestos del modelo
## los errores se distribuyen normal(media=0, varianza=constante)
## Independencia entre los X del modelo
# los errores se distribuyen normal
model<-lm(log(ylab)~s02a_03+aestudio+tothrs+ynolab+s02a_02+area+cob_op,data=bd)
summary(model)
#errores
ee<-residuals(model)
ad.test(ee)
lillie.test(ee)
#definiendo el modelo sin atípicos
model1<-lm(log(ylab)~s02a_03+aestudio+tothrs+ynolab+s02a_02+area+cob_op,data=bd2)
summary(model1)
ee1<-residuals(model1)
ad.test(ee1)
lillie.test(ee1)
ks.test(ee1,"pnorm",mean(ee1),sd(ee1))#kolmogorov Smirnofv
plot(density(ee1))
curve(dnorm(x,mean(ee1),sd(ee1)),add=T,col="red")
m5
summary(model1)
summary(model1)
plot(model1)
#definiendo el modelo sin atípicos
model1<-lm(log(ylab)~s02a_03+aestudio+tothrs+ynolab+s02a_02+area,data=bd2)
summary(model1)
boxplot(bd2$ylab)
ee1<-residuals(model1)
ad.test(ee1)
lillie.test(ee1)
ks.test(ee1,"pnorm",mean(ee1),sd(ee1))#kolmogorov Smirnofv
plot(density(ee1))
curve(dnorm(x,mean(ee1),sd(ee1)),add=T,col="red")
summary(model1)
plot(model1)
bd2[6312,]
bd2[6311,]
boxplot(bd2$ynolab)
#definiendo el modelo sin atípicos
model1<-lm(log(ylab)~s02a_03+aestudio+tothrs+log(ynolab)+s02a_02+area,data=bd2)
summary(model1)
#definiendo el modelo sin atípicos
model1<-lm(log(ylab)~s02a_03+aestudio+tothrs+log(ynolab)+s02a_02+area,data=bd2)
#limitar los datos hasta el percentil
punto<-c(0.01,0.90)
znl<-quantile(bd$ynolab,punto,na.rm=T)
znl
summary(bd$ynolab)
puntonl<-c(0.99)
znl<-quantile(bd$ynolab,puntonl,na.rm=T)
znl
bd2<-bd %>% filter((ylab<z[2] & ylab>z[1]) | ynolab<znl)
boxplot(bd2$ynolab)
boxplot(bd2$ynolab)
#limitar los datos hasta el percentil
punto<-c(0.01,0.90)
puntonl<-c(0.99)
z<-quantile(bd$ylab,punto,na.rm=T)
znl<-quantile(bd$ynolab,puntonl,na.rm=T)
znl
bd2<-bd %>% filter((ylab<z[2] & ylab>z[1]) & ynolab<znl)
bd2<-bd %>% filter((ylab<z[2] & ylab>z[1]) | ynolab<znl)
max(bd2$ynolab)
znl
min(bd2$ynolab)
bd2<-bd %>% filter((ylab<z[2] & ylab>z[1]) | ynolab<3500)
max(bd2$ynolab)
bd2<-bd %>% filter((ylab<z[2] & ylab>z[1]))
bd2<-bd2 %>% filter(ynolab<znl)
max(bd2$ynolab)
bd2<-bd %>% filter((ylab<z[2] & ylab>z[1])) %>% filter(ynolab<znl)
boxplot(bd2$ynolab)
#limitar los datos hasta el percentil
punto<-c(0.01,0.90)
puntonl<-c(0.95)
z<-quantile(bd$ylab,punto,na.rm=T)
znl<-quantile(bd$ynolab,puntonl,na.rm=T)
znl
bd2<-bd %>% filter((ylab<z[2] & ylab>z[1])) %>% filter(ynolab<znl)
boxplot(bd2$ynolab)
puntonl<-c(0.99)
z<-quantile(bd$ylab,punto,na.rm=T)
znl<-quantile(bd$ynolab,puntonl,na.rm=T)
znl
bd2<-bd %>% filter((ylab<z[2] & ylab>z[1])) %>% filter(ynolab<znl)
boxplot(bd2$ynolab)
#definiendo el modelo sin atípicos
model1<-lm(log(ylab)~s02a_03+aestudio+tothrs+ynolab+s02a_02+area,data=bd2)
summary(model1)
boxplot(bd2$ylab)
ee1<-residuals(model1)
ad.test(ee1)
lillie.test(ee1)
ks.test(ee1,"pnorm",mean(ee1),sd(ee1))#kolmogorov Smirnofv
plot(density(ee1))
curve(dnorm(x,mean(ee1),sd(ee1)),add=T,col="red")
plot(model1)
summary(bd2$ynolab)
bd2<-bd %>% filter((ylab<z[2] & ylab>z[1]))
boxplot(bd2$ynolab)
#definiendo el modelo sin atípicos
model1<-lm(log(ylab)~s02a_03+aestudio+tothrs+s02a_02+area,data=bd2)
summary(model1)
ee1<-residuals(model1)
ad.test(ee1)
lillie.test(ee1)
ks.test(ee1,"pnorm",mean(ee1),sd(ee1))#kolmogorov Smirnofv
plot(density(ee1))
curve(dnorm(x,mean(ee1),sd(ee1)),add=T,col="red")
plot(model1)
plot(density(ee1))
curve(dnorm(x,mean(ee1),sd(ee1)),add=T,col="red")
# Distancia de Cook
plot(cooks.distance(model1))
cc<-cooks.distance(model1)
cc
bd3<-bd2[cc<quantile(cc,0.95),]
model3<-lm(log(ylab)~s02a_03+aestudio+tothrs+s02a_02+area,data=bd3)
summary(model3)
ad.test(residuals(m7))
ad.test(residuals(model3))
lillie.test(residuals(model3))
plot(density(residuals(model3)))
curve(dnorm(x,mean(residuals(model3)),sd(residuals(model3))),add=T,col="red")
plot(cooks.distance(model3))
plot(model3)
bd3<-bd2[cc<quantile(cc,0.90),]
model3<-lm(log(ylab)~s02a_03+aestudio+tothrs+s02a_02+area,data=bd3)
summary(model3)
ad.test(residuals(model3))
lillie.test(residuals(model3))
plot(density(residuals(model3)))
curve(dnorm(x,mean(residuals(model3)),sd(residuals(model3))),add=T,col="red")
bd3<-bd2[cc<quantile(cc,0.70),]
model3<-lm(log(ylab)~s02a_03+aestudio+tothrs+s02a_02+area,data=bd3)
summary(model3)
ad.test(residuals(model3))
lillie.test(residuals(model3))
plot(density(residuals(model3)))
curve(dnorm(x,mean(residuals(model3)),sd(residuals(model3))),add=T,col="red")
plot(cooks.distance(model3))
bd3<-bd2[cc<quantile(cc,0.50),]
model3<-lm(log(ylab)~s02a_03+aestudio+tothrs+s02a_02+area,data=bd3)
summary(model3)
ad.test(residuals(model3))
lillie.test(residuals(model3))
plot(density(residuals(model3)))
curve(dnorm(x,mean(residuals(model3)),sd(residuals(model3))),add=T,col="red")
plot(cooks.distance(model3))
bd3<-bd2[cc<quantile(cc,0.20),]
model3<-lm(log(ylab)~s02a_03+aestudio+tothrs+s02a_02+area,data=bd3)
summary(model3)
ad.test(residuals(model3))
lillie.test(residuals(model3))
plot(density(residuals(model3)))
curve(dnorm(x,mean(residuals(model3)),sd(residuals(model3))),add=T,col="red")
plot(cooks.distance(model3))
bd3<-bd2[cc<quantile(cc,0.90),]
model3<-lm(log(ylab)~s02a_03+aestudio+tothrs+s02a_02+area,data=bd3)
summary(model3)
ad.test(residuals(model3))
lillie.test(residuals(model3))
plot(density(residuals(model3)))
curve(dnorm(x,mean(residuals(model3)),sd(residuals(model3))),add=T,col="red")
plot(model3)
bd3[3894,]
bd3[3893,]
model3<-lm(log(ylab)~s02a_03+aestudio+log(tothrs)+s02a_02+area,data=bd3)
model3<-lm(log(ylab)~s02a_03+aestudio+log(tothrs)+s02a_02+area,data=bd3)
summary(model3)
ad.test(residuals(model3))
lillie.test(residuals(model3))
plot(density(residuals(model3)))
plot(density(residuals(model3)))
curve(dnorm(x,mean(residuals(model3)),sd(residuals(model3))),add=T,col="red")
plot(model3)
model3<-lm(log(ylab)~s02a_03+aestudio+s02a_02+area,data=bd3)
summary(model3)
ad.test(residuals(model3))
lillie.test(residuals(model3))
plot(density(residuals(model3)))
curve(dnorm(x,mean(residuals(model3)),sd(residuals(model3))),add=T,col="red")
plot(density(residuals(model3)))
curve(dnorm(x,mean(residuals(model3)),sd(residuals(model3))),add=T,col="red")
plot(model3)
#ajustando polinomios
bd3<-na.omit(bd3)
#ajustando polinomios
bd3<-na.omit(bd3)
model3<-lm(log(ylab)~poly(s02a_03,4)+aestudio+s02a_02+area,data=bd3)
model4<-lm(log(ylab)~poly(s02a_03,4)+aestudio+s02a_02+area,data=bd3)
summary(model4)
model4<-lm(log(ylab)~poly(s02a_03,4)+aestudio+s02a_02+area,data=bd3)
model4<-lm(log(ylab)~poly(s02a_03,4)+aestudio+s02a_02+area,data=bd3)
summary(model4)
model4<-lm(log(ylab)~poly(s02a_03,2)+poly(aestudio,4)+s02a_02+area,data=bd3)
summary(model4)
model4<-lm(log(ylab)~poly(s02a_03,2)+poly(aestudio,3)+s02a_02+area,data=bd3)
summary(model4)
ad.test(residuals(model4))
## interacciones entre variables
model5<-lm(log(ylab)~poly(s02a_03,2)+poly(aestudio,3)+s02a_02+area+s02a_02:aestudio,data=bd3)
summary(model5)
(model5)
summary(model5)
## interacciones entre variables
model5<-lm(log(ylab)~poly(s02a_03,2)+poly(aestudio,3)+s02a_02+area+s02a_02:aestudio+area:aestudio,data=bd3)
summary(model5)
ad.test(residuals(model5))
## interacciones entre variables
model5<-lm(log(ylab)~poly(s02a_03,2)+poly(aestudio,3)+s02a_02+area+s02a_02:aestudio+area:aestudio+exp(aestudio),data=bd3)
summary(model5)
## interacciones entre variables
model5<-lm(log(ylab)~poly(s02a_03,2)+poly(aestudio,3)+s02a_02+area+s02a_02:aestudio+area:aestudio+exp(aestudio)+s02a_03,data=bd3)
summary(model5)
## interacciones entre variables
model5<-lm(log(ylab)~poly(s02a_03,2)+poly(aestudio,3)+s02a_02+area+s02a_02:aestudio+area:aestudio+exp(aestudio)+s02a_03^4,data=bd3)
summary(model5)
## interacciones entre variables
model5<-lm(log(ylab)~poly(s02a_03,2)+poly(aestudio,3)+s02a_02+area+s02a_02:aestudio+area:aestudio+exp(aestudio)+I(s02a_03^4),data=bd3)
summary(model5)
## interacciones entre variables
model5<-lm(log(ylab)~poly(s02a_03,2)+poly(aestudio,3)+s02a_02+area+s02a_02:aestudio+area:aestudio+exp(aestudio)+I(aestudio^4),data=bd3)
summary(model5)
#trabajando sobre los valores atípicos desde R
library(MASS)
model6<-rlm(log(ylab)~poly(s02a_03,2)+poly(aestudio,3)+s02a_02+area+s02a_02:aestudio+area:aestudio+exp(aestudio)+I(aestudio^4),data=bd3)
modelb<-lm(ylab~s02a_02+s02a_03+area,data=bd2)
modela<-rlm(ylab~s02a_02+s02a_03+area,data=bd2)
summary(modela)
summary(modelb)
modela<-rlm(ylab~s02a_02+s02a_03+area,data=bd)
modelb<-lm(ylab~s02a_02+s02a_03+area,data=bd)
summary(modela)
summary(modelb)
modela<-rlm(ylab~s02a_02+s02a_03+area,data=bd2)
modelb<-lm(ylab~s02a_02+s02a_03+area,data=bd2)
summary(modela)
summary(modelb)
# Colinealidad (X1=f(X2)
library(car)
vif(model5)
vif(model4)
vif(model3)
sqrt(vif(model2))>2 ##Variance Inflation Factors
vif(model2)
vif(model3)
sqrt(vif(model3))>2 ##Variance Inflation Factors
sqrt(vif(model3))>2 ##Variance Inflation Factors
# Verificar si la varianza es constante (homocedástico) o no (heterocedástico)
library(lmtest)
?bptest()
bptest(model3) # H0: Homocedsticidad https://en.wikipedia.org/wiki/Breusch%E2%80%93Pagan_test
#corrigiendo
library(rms)
summary(model3)
#corrigiendo
library(rms)
model1 = ols(ylab~s02a_02+s02a_03+area,data=bd3,x=T,y=T)
model1
bptest(model1)
aux<-robcov(model1)
aux
train<-bd2
test<-bd2
test<-bd3
yest<-predict(model3,test)
?predict()
?predict.lm()
yest<-predict(model3,test)
plot(bd3$ylab,yest)
plot(log(bd3$ylab),yest)
plot(bd3$ylab,exp(yest))
model6
model3
bookdown::clean_book(TRUE)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::clean_book(TRUE)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::clean_book(TRUE)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
library(dplyr)
load("C:\\Users\\ALVARO\\Documents\\GitHub\\EST-384\\data\\oct20.RData")
#filtrar los casos
aux<-c("Número departamento","Departamento" ,"Número municipio","Municipio"   ,"CC","FPV","MTS","UCS","MAS - IPSP","21F","PDC","MNR","PAN-BOL","Votos Válidos","Blancos","Nulos")
names(computo)[1]<-"pais"
names(computo)[12]<-"eleccion"
bd<-computo %>% filter(pais=="Bolivia" & eleccion=="Presidente y Vicepresidente") %>% select(aux)
names(bd)[1:4]<-c("idep","ddep","imun","dmun")
bookdown::clean_book(TRUE)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::clean_book(TRUE)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
library(dplyr)
load("C:\\Users\\ALVARO\\Documents\\GitHub\\EST-384\\data\\eh18.Rdata")
bd<-eh18p %>% filter(s02a_03>=18 & s02a_05=="1.JEFE O JEFA DEL HOGAR" & ocupado=="Si") %>% select(s02a_02,s02a_03,aestudio,tothrs,ylab,ynolab,factor,estrato, upm,area,permanente,cob_op)
library(dplyr)
load("C:\\Users\\ALVARO\\Documents\\GitHub\\EST-384\\data\\eh18.Rdata")
bd<-eh18p %>% filter(s02a_03>=18 & s02a_05=="1.JEFE O JEFA DEL HOGAR" & ocupado=="Si") %>% select(s02a_02,s02a_03,aestudio,tothrs,ylab,ynolab,factor,estrato, upm,area,permanente,cob_op)
install.packages(dplyr)
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
bookdown::clean_book(TRUE)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::clean_book(TRUE)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
