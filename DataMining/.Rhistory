plot(s)
plot(s)
aux<-kmeans(iris[,-5],4)
s <- silhouette(aux$cluster, dist(iris[,-5]))
plot(s)
aux<-kmeans(iris[,-5],2)
s <- silhouette(aux$cluster, dist(iris[,-5]))
plot(s)
aux<-kmeans(iris[,-5],7)
s <- silhouette(aux$cluster, dist(iris[,-5]))
plot(s)
aux<-kmeans(iris[,-5],3)
aux
iris
pam
?pam
pam(bd,k=3)
kmeans(bd,k=3)
pam(bd,k=3)
kmeans(bd,3)
library(fpc)# Flexible Procedures for Clustering
library(fpc)# Flexible Procedures for Clustering
sol <- pamk(iris[,-5], krange=2:10, criterion="asw", usepam=TRUE)
sol
?pamk(bd,krange=2:5)
pamk(bd,krange=2:5,usepam = T)
pamk(bd,krange=2:5,usepam = T)
pamk(bd,krange=2:10,usepam = T)
gsub(",","","123,455")
gsub(",","","123,455")
grep()
?grep()
aux<-rbind(c(0,0,0,0,1,1,1),c(1,0,1,0,0,1,1))
aux
A<-sum(aux[i,])
A<-sum(aux[1,])
A
B<-sum(aux[2,])
B
apply(aux, 2, sum)
J<-
```
apply(aux, 2, sum)
apply(aux, 2, sum)==2
sum(apply(aux, 2, sum)==2)
J<-sum(apply(aux, 2, sum)==2)
aux
#euclideana
sqrt(A+B-2*J)
#manhathan
A+B-2*J
#binomial
log(2)*(A+B-2*J)
#bray
(A+B-2*J)/(A+B)
library(vegan)
library(help=vegan)
?vegdist()
vegdist(aux)
#bray
(A+B-2*J)/(A+B)
aux1<-matrix(rbinom(200,1,0.4),nrow = 40)
aux1
#una base de datos mas grandes
set.seed(999)
aux1<-matrix(rbinom(200,1,0.4),nrow = 40)
aux
aux1
vegdist(aux1)
vegdist(aux1)
vegdist(aux1,method = "binomial")
#una base de datos mas grandes
set.seed(999)
aux1<-matrix(rbinom(200,1,0.4),nrow = 20)
vegdist(aux1,method = "binomial")
#una base de datos mas grandes
set.seed(999)
aux1<-matrix(rbinom(200,1,0.4),nrow = 20)
vegdist(aux1,method = "binomial")
vegdist(aux1,method = "binomial",diag = T)
dist(aux1)
vegdist(aux1,method = "binomial")
pam
library(cluster)
?pam()
library(cluster)
?daisy()
data("agriculture")
str(agriculture)
data("flower")
str(flower)
daisy(flower,metric = "gower")
daisy(flower,metric = "gower")
dd<-daisy(flower,metric = "gower")
summary(dd)
vegdist(aux1,method = "binomial",binary = T)
vegdist(aux,binary = T)
vegdist(aux,binary = F)
?vegdist()
aux<-matrix(rnorm(100),nrow=5)
dist(aux) #euclideana
dist(aux, method="manhattan")
dist(aux, method="minkowski", p=3)
(170/7)
(170/7)/2
130*14
bookdown::render_book("index.Rmd", "bookdown::gitbook") scsdcsd
bookdown::clean_book(TRUE)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
?bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::clean_book(TRUE)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
194/7
iris
head(iris)
d <- dist(scale(iris[,-5]))
d <- dist(scale(iris[,-5]))#euclideana
?hclust
h <- hclust(d)
h
plot(h,hang=-0.1,labels=iris[["Species"]],cex=0.5)
#elegir la cantidad de grupos
clus3 <- cutree(h, 3)
clus3
plot(h,hang=-0.1,labels=iris[["Species"]],cex=0.5)
rect.hclust(h,k=3)
#elegir la cantidad de grupos
clus3 <- cutree(h, 5)
plot(h,hang=-0.1,labels=iris[["Species"]],cex=0.5)
rect.hclust(h,k=3)
plot(h,hang=-0.1,labels=iris[["Species"]],cex=0.5)
rect.hclust(h,k=5)
hclust
hs <- hclust(d,method = "single")
hc <- hclust(d,method = "complete")
hs <- hclust(d,method = "single")
hc <- hclust(d,method = "complete")
ha <- hclust(d,method = "average")
cs<-cutree(hs,3)
cc<-cutree(hc,3)
ca<-cutree(ha,3)
table(cs,cc)
table(cs,ca)
table(cc,ca)
par(mfrow=c(2,1))
plot(hs,hang=-0.1,labels=iris[["Species"]],cex=0.5)
rect.hclust(hs,k=5)
plot(hs,hang=-0.1,labels=iris[["Species"]],cex=0.5)
rect.hclust(hs,k=5)
par(mfrow=c(1,3))
plot(hs,hang=-0.1,labels=iris[["Species"]],cex=0.5)
rect.hclust(hs,k=5)
plot(hc,hang=-0.1,labels=iris[["Species"]],cex=0.5)
rect.hclust(hc,k=5)
plot(ha,hang=-0.1,labels=iris[["Species"]],cex=0.5)
rect.halust(hc,k=5)
par(mfrow=c(1,3))
par(mfrow=c(1,3))
plot(hs,hang=-0.1,labels=iris[["Species"]],cex=0.5)
rect.hclust(hs,k=3)
plot(hc,hang=-0.1,labels=iris[["Species"]],cex=0.5)
rect.hclust(hc,k=3)
plot(ha,hang=-0.1,labels=iris[["Species"]],cex=0.5)
rect.halust(hc,k=3)
par(mfrow=c(1,3))
plot(hs,hang=-0.1,labels=iris[["Species"]],cex=0.5)
rect.hclust(hs,k=3)
plot(hc,hang=-0.1,labels=iris[["Species"]],cex=0.5)
rect.hclust(hc,k=3)
plot(ha,hang=-0.1,labels=iris[["Species"]],cex=0.5)
rect.hclust(hc,k=3)
par(mfrow=c(1,3))
plot(hs,hang=-0.1,labels=iris[["Species"]],cex=0.5)
rect.hclust(hs,k=3)
plot(hc,hang=-0.1,labels=iris[["Species"]],cex=0.5)
rect.hclust(hc,k=3)
plot(ha,hang=-0.1,labels=iris[["Species"]],cex=0.5)
rect.hclust(ha,k=3)
table(cs)
table(cc)
table(ca)
bookdown::clean_book(TRUE)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
load("C:\\Users\\ALVARO\\Documents\\GitHub\\EST-384\\data\\oct20.RData")
names(computo)
library(dplyr)
computo$País
#filtrar los casos
names(computo)
#filtrar los casos
names(computo)[1]
#filtrar los casos
names(computo)[1]<-"pais"
names(computo)
computo %>% filter(pais=="Bolivia")
table(computo$Circunscripción)
head(computo)
View(computo)
names(computo)
computo$Elección
table(computo$Elección)
computo %>% filter(pais=="Bolivia" & Elección=="Presidente y Vicepresidente")
names(computo)
c("Número departamento","Departamento" ,"Número municipio","Municipio"   ,"CC","FPV","MTS","UCS","MAS - IPSP","21F","PDC","MNR","PAN-BOL","Votos Válidos","Blancos","Nulos")
#filtrar los casos
aux<-c("Número departamento","Departamento" ,"Número municipio","Municipio"   ,"CC","FPV","MTS","UCS","MAS - IPSP","21F","PDC","MNR","PAN-BOL","Votos Válidos","Blancos","Nulos")
names(computo)[1]<-"pais"
computo %>% filter(pais=="Bolivia" & Elección=="Presidente y Vicepresidente") %>% select(aux)
bd<-computo %>% filter(pais=="Bolivia" & Elección=="Presidente y Vicepresidente") %>% select(aux)
View(bd)
?filter()
names(bd)
?group_by()
auc
aux
group_by(bd,aux[1:4])
group_by(bd,aux[1:4]) %>% summarise(sum(CC))
names(bd)
names(bd)<-c("idep","ddep","imun","dmun")
bd<-computo %>% filter(pais=="Bolivia" & Elección=="Presidente y Vicepresidente") %>% select(aux)
load("C:\\Users\\ALVARO\\Documents\\GitHub\\EST-384\\data\\oct20.RData")
#filtrar los casos
aux<-c("Número departamento","Departamento" ,"Número municipio","Municipio"   ,"CC","FPV","MTS","UCS","MAS - IPSP","21F","PDC","MNR","PAN-BOL","Votos Válidos","Blancos","Nulos")
names(computo)[1]<-"pais"
bd<-computo %>% filter(pais=="Bolivia" & Elección=="Presidente y Vicepresidente") %>% select(aux)
names(bd)[1:4]<-c("idep","ddep","imun","dmun")
group_by(bd,aux[1:4]) %>% summarise(sum(CC))
group_by(bd,[1:4]) %>% summarise(sum(CC))
group_by(bd,idep:dmun) %>% summarise(sum(CC))
group_by(bd,idep) %>% summarise(sum(CC))
group_by(bd,idep,imun) %>% summarise(sum(CC))
group_by(bd,idep,ddep,imun) %>% summarise(sum(CC))
group_by(bd,idep,ddep,imun,dmun) %>% summarise(sum(CC))
aux
group_by(bd,idep,ddep,imun,dmun) %>% summarise(sum(CC,FPV))
?aggregate()
aux
aux
aggregate(bd[,aux[5:16]],by=list(aux1[1:4]))
aggregate(bd[,aux[5:16]],by=list(aux1[1:4]),sum)
aggregate(bd[,aux[5:16]],by=list(aux[1:4]),sum)
aux[5:16]
aggregate(bd[,aux[5:16]],by=list(bd[,aux[1:4]]),sum)
names(bd)
aggregate(bd[,5:16],by=list(bd[,1:4]),sum)
aggregate(bd[,5:16],bd[,1]),sum)
aggregate(bd[,5:16],bd[,1],sum)
aggregate(bd[,5:16],list(bd[,1:2]),sum)
aggregate(bd[,5:16],list(bd[,1]),sum)
aggregate(bd[,5:16],bd[,1:2],sum)
aggregate(bd[,5:16],bd[,1:4],sum)
bdmun<-aggregate(bd[,5:16],bd[,1:4],sum)
rm(list=ls())
rm(list=ls())
rm(list=ls())
library(dplyr)
load("C:\\Users\\ALVARO\\Documents\\GitHub\\EST-384\\data\\oct20.RData")
#filtrar los casos
aux<-c("Número departamento","Departamento" ,"Número municipio","Municipio"   ,"CC","FPV","MTS","UCS","MAS - IPSP","21F","PDC","MNR","PAN-BOL","Votos Válidos","Blancos","Nulos")
names(computo)[1]<-"pais"
bd<-computo %>% filter(pais=="Bolivia" & Elección=="Presidente y Vicepresidente") %>% select(aux)
names(bd)[1:4]<-c("idep","ddep","imun","dmun")
bdmun<-aggregate(bd[,5:16],bd[,1:4],sum)
bdmun
View(bdmun)
names(computo)
names(bd)
bdmun<-bdmun[,-14]
names(bd)
names(bdmun)
names(bdmun)
bdmun[,5:15]
names(bdmun)
prop.table(bdmun[,5:15],1)
prop.table(as.matrix(bdmun[,5:15]),1)
bdmun[,5:15]<-prop.table(as.matrix(bdmun[,5:15]),1)
View(bdmun)
names(bdmun)
dist(bdmun[,5:15])
d<-dist(bdmun[,5:15])
hclust(d)
plot(hclust(d))
plot(hclust(d))
plot(hclust(d),label=bdmun$dmun,cex=0.5)
plot(hclust(d),hang=-0.1,label=bdmun$dmun,cex=0.5)
k<-2:10
k<-2:10
k
?hclust()
?silhouette()
?silhouette
??silhouette
library(cluster)
library(cluster)
?silhouette
k
# matriz de resultados
matrix(NULL, nrow = 9,ncol=3)
# matriz de resultados
matrix(NA, nrow = 9,ncol=3)
# matriz de resultados
res<-matrix(NA, nrow = 9,ncol=3)
colnames(res)<-mm
rownames(res)<-k
res
col.names(res)<-mm
# determinar el mejor k y el mejor enlace
mm<-c("single", "complete", "average") # método
colnames(res)<-mm
rownames(res)<-k
res
i<-2;j<-mm[1]
h<-hclust(d,method = j)
c<-cutree(h,i)
s<-silhouette(c,d)
s
s[,3]
s[,3]
mean(s[,3])
j
j
# matriz de resultados
res<-matrix(NA, nrow = 9,ncol=3)
colnames(res)<-mm
rownames(res)<-k
#######################
for(i in k){
for(j in 1:3){
h<-hclust(d,method = mm[j])
c<-cutree(h,i)
s<-silhouette(c,d)
res[i-1,j]<-mean(s[,3])
}
}
res
max(res)
max(res[-1,])
#la mejor opción es k=2 con el método average
h<-hclust(d,method = "average")
c<-cutree(h,2)
plot(h,hang=-0.1,labels=bdmun$dmun,cex=0.4)
rect.hclust(h,k=2)
c
bdmun$cluster<-c
bdmun
group_by(bdmun,cluster) %>% summarise(mean(CC))
group_by(bdmun,cluster) %>% summarise(mean(CC),mean("MAS - IPSP"))
group_by(bdmun,cluster) %>% summarise(mean(CC),mean(MAS - IPSP))
group_by(bdmun,cluster) %>% summarise(mean(CC),mean(`MAS - IPSP`))
# matriz de resultados
res<-matrix(NA, nrow = 9,ncol=3)
colnames(res)<-mm
rownames(res)<-k
#######################
for(i in k){
for(j in 1:3){
h<-hclust(d,method = mm[j])
c<-cutree(h,i)
s<-silhouette(c,d)
res[i-1,j]<-median(s[,3])
}
}
res
max(res)
max(res[-1,])
k<-2:20 # cantidad de cluster
d<-dist(bdmun[,5:15]) # matriz de distancia
# matriz de resultados
res<-matrix(NA, nrow = 19,ncol=3)
colnames(res)<-mm
rownames(res)<-k
#######################
for(i in k){
for(j in 1:3){
h<-hclust(d,method = mm[j])
c<-cutree(h,i)
s<-silhouette(c,d)
res[i-1,j]<-median(s[,3])
}
}
res
plot(1:19,res[,1])
plot(1:19,res[,1])
plot(1:19,res[,2])
plot(1:19,res[,3])
?h
?hclust
bookdown::clean_book(TRUE)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::clean_book(TRUE)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
library(dplyr)
load("C:\\Users\\ALVARO\\Documents\\GitHub\\EST-384\\data\\oct20.RData")
#filtrar los casos
aux<-c("Número departamento","Departamento" ,"Número municipio","Municipio"   ,"CC","FPV","MTS","UCS","MAS - IPSP","21F","PDC","MNR","PAN-BOL","Votos Válidos","Blancos","Nulos")
names(computo)[1]<-"pais"
names(computo)[12]<-"eleccion"
bd<-computo %>% filter(pais=="Bolivia" & eleccion=="Presidente y Vicepresidente") %>% select(aux)
names(bd)[1:4]<-c("idep","ddep","imun","dmun")
rm(list=ls())
library(dplyr)
load("C:\\Users\\ALVARO\\Documents\\GitHub\\EST-384\\data\\oct20.RData")
#filtrar los casos
aux<-c("Número departamento","Departamento" ,"Número municipio","Municipio"   ,"CC","FPV","MTS","UCS","MAS - IPSP","21F","PDC","MNR","PAN-BOL","Votos Válidos","Blancos","Nulos")
names(computo)[1]<-"pais"
names(computo)[12]<-"eleccion"
bd<-computo %>% filter(pais=="Bolivia" & eleccion=="Presidente y Vicepresidente") %>% select(aux)
names(bd)[1:4]<-c("idep","ddep","imun","dmun")
bdmun<-aggregate(bd[,5:16],bd[,1:4],sum)
bdmun<-bdmun[,-14]
bdmun[,5:15]<-prop.table(as.matrix(bdmun[,5:15]),1)
#cluster jerarquico
d<-dist(bdmun[,5:15])
plot(hclust(d),hang=-0.1,label=bdmun$dmun,cex=0.5)
# determinar el mejor k y el mejor enlace
mm<-c("single", "complete", "average") # método
k<-2:20 # cantidad de cluster
d<-dist(bdmun[,5:15]) # matriz de distancia
# matriz de resultados
res<-matrix(NA, nrow = 19,ncol=3)
colnames(res)<-mm
rownames(res)<-k
#######################
for(i in k){
for(j in 1:3){
h<-hclust(d,method = mm[j])
c<-cutree(h,i)
s<-silhouette(c,d)
res[i-1,j]<-median(s[,3])
}
}
#la mejor opción es k=2 con el método average
h<-hclust(d,method = "average")
c<-cutree(h,2)
plot(h,hang=-0.1,labels=bdmun$dmun,cex=0.4)
rect.hclust(h,k=2)
bdmun$cluster<-c
group_by(bdmun,cluster) %>% summarise(mean(CC),mean(`MAS - IPSP`))
library(ape)
install.packages("ape")
library(ape)
plot(as.phylo(h),type="fan")
plot(as.phylo(h),type="fan",labels=bdmun$dmun)
h
str(h)
h$labels<-bdmun$dmun
plot(as.phylo(h),type="fan")
plot(as.phylo(h),type="fan",cex=0.5)
plot(as.phylo(h),type="fan",label.cex=0.5)
install.packages("dendextend")
install.packages("circlize")
dend <- as.dendrogram(h)
# modify the dendrogram to have some colors in the branches and labels
dend <- dend %>%
color_branches(k=4) %>%
color_labels
library(dendextend)
library(dendextend)
library(circlize)
dend <- as.dendrogram(h)
# modify the dendrogram to have some colors in the branches and labels
dend <- dend %>%
color_branches(k=4) %>%
color_labels
# plot the radial plot
par(mar = rep(0,4))
# circlize_dendrogram(dend, dend_track_height = 0.8)
circlize_dendrogram(dend, labels_track_height = NA, dend_track_height = .4)
# circlize_dendrogram(dend, dend_track_height = 0.8)
circlize_dendrogram(dend)
# circlize_dendrogram(dend, dend_track_height = 0.8)
?circlize_dendrogram(dend)
dend
dend <- as.dendrogram(h)
# modify the dendrogram to have some colors in the branches and labels
dend <- dend %>%
color_branches(k=4) %>%
color_labels
# plot the radial plot
par(mar = rep(0,4))
# circlize_dendrogram(dend, dend_track_height = 0.8)
circlize_dendrogram(dend)
# circlize_dendrogram(dend, )
circlize_dendrogram(dend,dend_track_height = 0.8)
get.wd()
getwd()
# plot the radial plot
pdf("dendo.pdf",width = 30,height = 30)
par(mar = rep(0,4))
# circlize_dendrogram(dend, )
circlize_dendrogram(dend,dend_track_height = 0.8)
dev.off()
?png
# plot the radial plot
png("dendo.png",width = 1500,height = 1500)
par(mar = rep(0,4))
# circlize_dendrogram(dend, )
circlize_dendrogram(dend,dend_track_height = 0.8)
dev.off()
dev.off()
dev.off()
# plot the radial plot
png("dendo.png",width = 1500,height = 1500)
par(mar = rep(0,4))
# circlize_dendrogram(dend, )
circlize_dendrogram(dend,dend_track_height = 0.8)
dev.off()
bookdown::clean_book(TRUE)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::clean_book(TRUE)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
