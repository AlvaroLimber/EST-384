library(tm)
removeNumbers(x)
x
removeNumbers(x)
x<-removeNumbers(x)
x
x<-c("LA-.paz","La Paz", "La pas", "La    paz","lapaz","la 78 paz")
x<-toupper(x)
nchar(x)
x<-gsub("PAS","PAZ",x)
x<-gsub("LAPAZ","LA PAZ",x)
x
x<-removeNumbers(x)
x
removePunctuation(x)
x<-c("LA-.paz","La Paz", "La pas", "La    paz","lapaz","la 78 paz")
x
x<-toupper(x)
x<-gsub("PAS","PAZ",x)
library(tm)
x<-removeNumbers(x)
x<-removePunctuation(x)
x<-gsub("LAPAZ","LA PAZ",x)
x
nchar(x)
library(help=tm)
stripWhitespace(x)
x<-stripWhitespace(x)
nchar(x)
nchar(x)
"la pz"
nchar(x)
?gsub
grepl("a",c("hola","como"))
grepl("o",c("hola","como"))
grepl("a",c("hola","como"))
library(stringi)
library(help=stringi)
?stri_encode
stri_enc_list(simplify = FALSE)
x
x<-c("LA-.paz","La Paz", "La pas", "La    paz","lapaz","la 78 paz")
x
x<-toupper(x)
x
grepl("PAZ",x)
x[grepl("PAZ",x)]
x[grepl("PAZ",x)]<-"LA PAZ"
x
#otra alternativa
x<-c("LA-.paz","La Paz", "La pas", "La    paz","lapaz","la 78 paz")
x<-toupper(x)
x[grepl("PAZ",x)]<-"LA PAZ"
x<-gsub("PAS","PAZ",x)
x
library(help=stringi)
stri_enc_toascii(x)
stri_enc_toascii("s")
charToRaw("a")
charToRaw("la paz")
charToRaw("p")
charToRaw("-")
charToRaw("12")
charToRaw("l")
split(x)
split(x," ")
?charToRaw("l")
utf8ToInt("la paz")
utf8ToInt("@")
# para llevar a ascii
utf8ToInt("la paz")
utf8ToInt("@")
url<-"https://www.worldometers.info/coronavirus/"
library(rvest)
library(rvest)
url<-"https://www.worldometers.info/coronavirus/"
covid<-read_html(url)
View(covid)
library(help=rvest)
bdcov<-html_table(covid)
View(bdcov)
bdcov[[1]]
bdnow<-bdcov[[1]]
View(bdnow)
str(bdnow)
bdnow
View
View(bdnow)
load(url("https://github.com/AlvaroLimber/EST-384/raw/master/data/eh19.RData"))
library(dplyr)
?recode()
a<-c(1:10)
a
recode(a,1=20)
recode(a,"1"="20")
recode(a,`1` =`20`)
recode(a,`1 =20)
recode(a,`1` =20)
recode(a,`1` =20L)
recode(a,`1` = 20L)
recode(a,`1` = 20L,`2` = 20L)
recode(a,`1` = 20L,`2` = 20L`4` = 30L)
recode(a,`1` = 20L,`2` = 20L,`4` = 30L)
eh19p$s02a_02
recode(eh19p$s02a_02,"1.Hombre"="H")
recode(eh19p$s02a_02,"1.Hombre"="H","2.Mujer"="M")
eh19p$sexo<-recode(eh19p$s02a_02,"1.Hombre"="H","2.Mujer"="M")
table(eh19p$sexo)
eh19p<-eh19p %>% mutate(sexo2=recode(s02a_02,"1.Hombre"="M","2.Mujer"="F"))
eh19p<-eh19p %>% mutate(sexo2=recode(s02a_02,"1.Hombre"="M","2.Mujer"="F"))
eh19p %>% select(sexo2) %>% table()
eh19p %>% select(sexo2) %>% table()
# binarias
table(eh19p$depto)
# binarias
unique(eh19p$depto)
?if_else()
?case_when()
x <- 1:50
case_when(
x %% 35 == 0 ~ "fizz buzz",
x %% 5 == 0 ~ "fizz",
x %% 7 == 0 ~ "buzz",
TRUE ~ as.character(x)
)
y <- seq(-2, 2, by = .5)
case_when(
y >= 0 ~ sqrt(y),
TRUE   ~ y
)
y
# binarias
unique(eh19p$depto)
v1<-c("La Paz","Oruro","Potosí")
v2<-c("Chuquisaca","Cochabamba","Tarija")
v3<-c("Santa Cruz","Beni","Pando")
eh19p %>% mutate(altiplano = depto %in% v1 ) %>% select(altiplano)
eh19p %>% mutate(altiplano = depto %in% v1 ) %>% select(altiplano) %>% table()
eh19p %>% mutate(altiplano = depto %in% v1 ) %>% select(altiplano) %>%
eh19p<-eh19p %>% mutate(altiplano = depto %in% v1,valle=depto %in% v2,llano= depto %in% v3)
eh19p %>% mutate(altiplano = depto %in% v1 ) %>% select(altiplano) %>%
eh19p <- eh19p %>% mutate(altiplano = depto %in% v1,valle=depto %in% v2,llano= depto %in% v3)
v1<-c("La Paz","Oruro","Potosí")
v2<-c("Chuquisaca","Cochabamba","Tarija")
v3<-c("Santa Cruz","Beni","Pando")
eh19p %>% mutate(altiplano = depto %in% v1 ) %>% select(altiplano) %>% table()
eh19p <- eh19p %>% mutate(altiplano = depto %in% v1 , valle = depto %in% v2,llano = depto %in% v3)
View(eh19p)
names(eh19p)
recode(eh19p$depto,"Altiplano" %in% v1)
library(survey)
#install.packages("survey")
library(survey)
names(eh19p)
#survey
?svydesign(upm ,)
#survey
sd_eh19p<-svydesign(ids = ~upm + folio, strata = ~estrato, weights = ~factor,data = eh19p)
#survey
sd_eh19p<-svydesign(ids = ~upm + folio, strata = ~estrato, weights = ~factor,data = eh19p)
str(sd_eh19p)
table(eh19p$p0)
prop.table(table(eh19p$p0))*100 # pobreza moderada
svytable(~p0 ,design = sd_eh19p)
svytable(~p0 ,design = sd_eh19p)
table(eh19p$p0)
svytable(~p0 ,design = sd_eh19p)
sum(svytable(~p0 ,design = sd_eh19p))
svytable(~p0 ,design = sd_eh19p)
prop.table(svytable(~p0 ,design = sd_eh19p))*100
prop.table(table(eh19p$p0))*100 # pobreza moderada en la muestra
prop.table(svytable(~p0 ,design = sd_eh19p))*100
svytable(~p0 ,design = sd_eh19p)
# departamento
table(eh19p$p0)
# departamento
table(eh19p$depto,eh19p$p0)
# departamento
prop.table(table(eh19p$depto,eh19p$p0),1)
# departamento
prop.table(table(eh19p$depto,eh19p$p0),1)*100
svytable(~depto+p0 ,design = sd_eh19p)
svytable(~depto+area+p0 ,design = sd_eh19p)
svytable(~depto+p0 ,design = sd_eh19p)
prop.table(svytable(~depto+p0 ,design = sd_eh19p),1)
prop.table(svytable(~depto+p0 ,design = sd_eh19p),1)*100
# departamento
prop.table(table(eh19p$depto,eh19p$p0),1)*100
prop.table(svytable(~depto+p0 ,design = sd_eh19p),1)*100
svytable(~p0 ,design = sd_eh19p)
t1<-svytable(~p0 ,design = sd_eh19p)
?svytable()
t1<-svytable(~p0 ,design = sd_eh19p ,deff=T)
t1<-svytable(~p0 ,design = sd_eh19p)
t1
ci(t1)
confint(t1)
?svytable()
summary(t1)
svytable(~p0 ,design = sd_eh19p)
summary(svytable(~p0 ,design = sd_eh19p))
svymean(~ylab,design = sd_eh19p)
svymean(~ylab,design = sd_eh19p,na.rm=T)
svymean(~ylab,design = sd_eh19p,na.rm=T,deff=T)
t1<-svymean(~ylab,design = sd_eh19p,na.rm=T,deff=T)
cv(t1)
confint(t1)
?svyby()
svyby(~ylab,by=~depto,design = sd_eh19p,FUN = svymean)
svyby(~ylab,by=~depto,design = sd_eh19p,FUN = svymean,na.rm=T)
svyby(~ylab,by=~depto+area,design = sd_eh19p,FUN = svymean,na.rm=T)
t2<-svyby(~ylab,by=~depto+area,design = sd_eh19p,FUN = svymean,na.rm=T)
cv(t2)
confint(t2)
summary(svytable(~p0 ,design = sd_eh19p))
svytable(~p0 ,design = sd_eh19p)
survey::summary(svytable(~p0 ,design = sd_eh19p))
svytable(~p0 ,design = sd_eh19p)
summary(svytable(~p0 ,design = sd_eh19p))
summary(svytable(~depto+p0 ,design = sd_eh19p))
library(survey)
?svytable
?svyciprop()
?svytable
load(url("https://github.com/AlvaroLimber/EST-384/raw/master/data/eh19.RData"))
#survey
sd_eh19p<-svydesign(ids = ~upm + folio, strata = ~estrato, weights = ~factor,data = eh19p)
svymean(~p0, design=bd)
svymean(~p0, design=sd_eh19p)
svymean(~p0, design=sd_eh19p,na.rm=T)
svytotal(~p0, design=sd_eh19p,na.rm=T)
load(url("https://github.com/AlvaroLimber/EST-384/raw/master/data/eh19.RData"))
#install.packages("survey")
library(survey) # no trabaja con el concepto de dplyr, no permite el uso de "%>%"
library(srvyr) # permite el uso del operador %>%
#survey
sd_eh19p<-svydesign(ids = ~upm + folio, strata = ~estrato, weights = ~factor,data = eh19p)
svytable(~p0,design=sd_eh19p)
svymean(~p0,design=sd_eh19p) # proporciones / medias
svymean(~p0,design=sd_eh19p,na.rm=T) # proporciones / medias
svytotal(~p0,design=sd_eh19p,na.rm=T) # totales clase / total
t1<-svymean(~p0,design=sd_eh19p,na.rm=T) # proporciones / medias
t2<-svytotal(~p0,design=sd_eh19p,na.rm=T) # totales clase / total
cv(t1)
cv(t2)
confint(t1)
confint(t2)
cv(t1)
cv(t2)
sd2_eh19p<-svydesign(ids = ~1, weights = ~factor,data = eh19p)
t3<-svymean(~p0,design=sd2_eh19p,na.rm=T) # proporciones / medias
t1
t3
cv(t1)
cv(t3)
cv(t1)*100
cv(t3)*100
cv(t1)*100/cv(t3)*100
(cv(t1)*100)/(cv(t3)*100)
cv(t1)*100
cv(t3)*100
lm(ylab~aestudio,data=eh19p)
summary(lm(ylab~aestudio,data=eh19p)) # ingreso= B0+B1*aestudio+e
summary(lm(ylab~aestudio,data=eh19p)) # ingreso= B0+B1*aestudio+e
summary(lm(ylab~aestudio,data=eh19p,weights = factor ))
svyglm(ylab~aestudio,design=sd_eh19p)
summary(svyglm(ylab~aestudio,design=sd_eh19p))
summary(lm(ylab~aestudio,data=eh19p,weights = factor )) # Minimos cuadrados ponderados
summary(svyglm(ylab~aestudio,design=sd_eh19p))
m1<-svyglm(ylab~aestudio,design=sd_eh19p)
summary(m1)
psrsq(m1)
summ(m1)
install.packages("jtools")
library(jtools)
summ(m1)
anova(m1)
summ(m1)
library(srvyr)
library(srvyr)
sd3_eh19p<-as_survey_design(sd_eh19p)
sd_eh19p %>% select(p0) %>% svymean()
sd_eh19p %>% select(p0) %>% svymean()
sd3_eh19p %>% select(p0) %>% svymean()
sd3_eh19p %>% select(p0) %>% survey_mean()
sd3_eh19p %>% summarise(survey_mean(p0))
eh19p$s02a_02
eh19p$s02a_03
sd3_eh19p %>% summarise(survey_mean(s02a_03))
sd3_eh19p %>% group_by(depto) %>% summarise(survey_mean(s02a_03))
sd3_eh19p %>% group_by(depto) %>% summarise(m_edad=survey_mean(s02a_03))
sd3_eh19p %>% group_by(depto,area) %>% summarise(m_edad=survey_mean(s02a_03))
sd3_eh19p %>% group_by(depto,area,s02a_02) %>% summarise(m_edad=survey_mean(s02a_03))
sd3_eh19p %>% group_by(depto,area,s02a_02) %>% summarise(m_edad=survey_mean(s02a_03),m_ylab=survey_mean(ylab,na.rm=T))
# p0
sd3_eh19p %>% group_by(p0)
# p0
sd3_eh19p %>% group_by(p0) %>% count()
# p0
sd3_eh19p %>% group_by(p0) %>% tally()
# p0
sd3_eh19p %>% group_by(p0) %>% summarise(count())
# p0
sd3_eh19p %>% summarise(count(p0))
# p0
sd3_eh19p %>% summarise(survey_tally(p0))
# p0
sd3_eh19p %>% survey_tally(p0)
# p0
sd3_eh19p %>% group_by(p0) %>% survey_tally()
# p0
sd3_eh19p %>% group_by(p0) %>% survey_tally(na.rm=T)
# p0
sd3_eh19p %>% group_by(p0) %>% survey_tally()
# p0
sd3_eh19p %>% group_by(p0,na.rm=T) %>% survey_tally()
# p0
sd3_eh19p %>% group_by(complete.cases(p0)) %>% survey_tally()
# p0
sd3_eh19p %>% group_by(p0) %>% survey_tally()
# p0
sd3_eh19p %>% group_by(depto) %>% survey_tally()
sd3_eh19p %>% group_by(depto) %>% survey_count()
sd3_eh19p %>% mutate(pobreza=p0=="Pobre")
sd3_eh19p %>% mutate(pobreza=p0=="Pobre") %>% summarise(survey_mean(pobreza))
sd3_eh19p %>% mutate(pobreza=p0=="Pobre") %>% summarise(survey_mean(pobreza,na.rm=T))
sd3_eh19p %>% mutate(pobreza=p0=="Pobre") %>% summarise(p0=survey_mean(pobreza,na.rm=T))
sd3_eh19p %>% mutate(pobreza=p0=="Pobre") %>% group_by(depto,area) %>%  summarise(p0=survey_mean(pobreza,na.rm=T))
sd3_eh19p %>% mutate(pobreza=p0=="Pobre") %>% group_by(depto,area) %>%  summarise(p0=survey_mean(pobreza,na.rm=T),N=survey_total(pobreza))
sd3_eh19p %>% mutate(pobreza=p0=="Pobre") %>% group_by(depto,area) %>%  summarise(p0=survey_mean(pobreza,na.rm=T),N=survey_total(pobreza,na.rm=T))
sd4_eh19p<- eh19p %>% as_survey_design(ids=upm,strata=estrato,weights=factor)
?as_survey_design
sd4_eh19p<- eh19p %>% as_survey_design(ids=upm+folio,strata=estrato,weights=factor)
sd4_eh19p<- eh19p %>% as_survey_design(ids=upm folio,strata=estrato,weights=factor)
sd4_eh19p<- eh19p %>% as_survey_design(ids=c(upm,folio),strata=estrato,weights=factor)
sd4_eh19p<- eh19p %>% as_survey_design(ids=upm,strata=estrato,weights=factor)
sd4_eh19p %>% mutate(pobreza=p0=="Pobre") %>% group_by(depto,area) %>%  summarise(p0=survey_mean(pobreza,na.rm=T),N=survey_total(pobreza,na.rm=T))
sd4_eh19p %>% mutate(pobreza=p0=="Pobre") %>% group_by(depto,area) %>%  summarise(p0=survey_mean(pobreza,na.rm=T))
?survey_mean
sd4_eh19p %>% mutate(pobreza=p0=="Pobre") %>% group_by(depto,area) %>%  summarise(p0=survey_mean(pobreza,na.rm=T,vartype = c("se", "ci", "var", "cv"),deff=T))
sd4_eh19p %>% mutate(pobreza=p0=="Pobre") %>%  summarise(p0=survey_mean(pobreza,na.rm=T,vartype = c("se", "ci", "var", "cv"),deff=T))
install.packages(mice)
install.packages("mice")
library(mice)
library(help=mice)
t1
library(writexl)
library(xtable)
?xtable()
xtable(t1)
library(xtable)
table(eh19p$depto)
table(eh19p$depto,eh19p$area)
xtable(table(eh19p$depto,eh19p$area))
kable(table(eh19p$depto,eh19p$area))
library(knitr)
kable(table(eh19p$depto,eh19p$area))
?kable(table(eh19p$depto,eh19p$area))
library(mice)
airquality
help(airquality)
imp <- mice(airquality, method = "mean", m = 1, maxit = 1)
imp <- mice(airquality, method = "mean")
imp
plot(imp)
imp <- mice(airquality, method = "mean", m = 1, maxit = 1)
plot(imp)
imp
imp <- mice(airquality, method = "mean", m = 1, maxit = 1)
imp
imp$data
imp$imp
View(imp)
?mice
complete(imp)
imp$imp$Ozone
imp$imp$Solar.R
fit <- lm(Ozone ~ Solar.R, data = airquality)
pred <- predict(fit, newdata = ic(airquality))
pred
ic
?ic
ic(airquality)
airquality
ic(airquality)
fit <- lm(Ozone ~ Solar.R, data = airquality)
pred <- predict(fit, newdata = ic(airquality))
data <- airquality[, c("Ozone", "Solar.R")]
imp <- mice(data, method = "norm.predict", seed = 1,
m = 1, print = FALSE)
imp
complete(imp)
data <- airquality[, c("Ozone", "Solar.R")]
imp <- mice(data, method = "norm.nob", m = 1, maxit = 1,
seed = 1, print = FALSE)
imp
summary(imp)
md.pattern(pattern4, plot = FALSE)
md.pattern(airquality, plot = FALSE)
flux(airquality)
airquality
airquality
airquality$Ozone
is.na(airquality$Ozone)
table(is.na(airquality$Ozone))
is.na(airquality)
is.na(airquality)!
na.rm
!is.na(airquality)
!is.na(airquality)
(!is.na(airquality))*1
airquality$Ozone
mean(airquality$Ozone)
mean(airquality$Ozone)
#listwise
airquality$Ozone
#listwise
na.omit(airquality$Ozone)
#listwise
x<-na.omit(airquality$Ozone)
mean(x)
airquality
na.omit(airquality)
bd<-airquality
bd2<-na.omit(bd)
bd
bd
bd2
na.action(bd2)
na.action(x)
na.action(x)
x
bd$Ozone
na.action(x)
na.action(bd2)
naprint(x)
?naprint()
naprint(na.action(x) )
naprint(na.action(bd2))
bd2
bd
complete.cases(bd)
table(complete.cases(bd))
ii<-complete.cases(bd)
ii
bd[ii,]
bd2
?ic
mice::ic
mice::ic(bd)
na.omit(bd)
mice::ic(bd)
na.omit(bd)
Y_obs<-na.omit(bd)
Y_mis<-mice::ic(bd)
?read.csv()
?read.dta()
?foreign::read.dta()
bd
bd$Ozone==20
bd$Ozone[bd$Ozone==20]
bd$Ozone[bd$Ozone==20]<-NA
bd
R
R
R<-(!is.na(airquality))*1
R
table(R[,1:2])
table(R[,1],R[,2])
chisq.test(table(R[,1],R[,2]))
chisq.test(table(R[,1],R[,3]))
chisq.test(table(R[,1],R[,4]))
chisq.test(table(R[,1],R[,2]))
chisq.test(table(R[,1],R[,3]))
chisq.test(table(R[,1],R[,4]))
table(R[,1],R[,2])
chisq.test(table(R[,1],R[,2]))
table(R[,1],R[,3])
chisq.test(table(R[,1],R[,3]))
table(R[,1],R[,4])
chisq.test(table(R[,1],R[,4]))
matrix(20,2,2)
chisq.test(matrix(20,2,2))
chisq.test(matrix(17:20,2,2))
table(R[,1],R[,2])
chisq.test(table(R[,1],R[,2]))
?chisq.test(table(R[,1],R[,2]))
R
apply(R,2,mean)
chisq.test(table(R[,1],R[,2]))
table(R[,1],R[,2])
chisq.test(table(R[,1],R[,2]))
R
as.data.frame(R)
R<-as.data.frame(R)
R
glm(Ozone~Solar.R,data = R,family = "binomial") # logit
model1<-glm(Ozone~Solar.R,data = R,family = "binomial") # logit
m1<-glm(Ozone~Solar.R,data = R,family = "binomial") # logit
summary(m1)
names(R)
m1<-glm(Ozone~Solar.R+Wind,data = R,family = "binomial") # logit
summary(m1)
chisq.test(table(R[,1],R[,2]))
table(R[,1],R[,2])
m1<-glm(Ozone~Solar.R+Wind,data = R,family = "binomial") # logit
summary(m1)
lm(Ozone~Solar.R,data=bd2)
summary(lm(Ozone~Solar.R,data=bd2))
m1<-glm(Ozone~Solar.R+Wind,data = R,family = "binomial") # logit
summary(m1)
chisq.test(table(R[,1],R[,2]))
